<?xml version='1.0' encoding='utf-8'?>
<advanced_plotly_guide generated_on="2025-07-18 09:28:47" version="3.0" description="Guia pedagógico avançado de Plotly baseado em estrutura de aprendizado progressivo">
  <metadata>
    <title>Guia Pedagógico Avançado Plotly Python</title>
    <description>Guia estruturado pedagogicamente seguindo progressão de aprendizado lógica</description>
    <pedagogical_approach>Fundamentos → Essencial → Customização → Avançado</pedagogical_approach>
    <educational_features learning_objectives="true" difficulty_levels="true" side_by_side_examples="true" practical_exercises="true" glossary="true" />
    <processing_statistics>
      <difficulty_distribution>
        <level name="basic" count="18" />
        <level name="intermediate" count="160" />
        <level name="advanced" count="26" />
      </difficulty_distribution>
      <part_distribution>
        <part id="part_1_fundamentals" count="7" />
        <part id="part_2_essential_charts" count="5" />
        <part id="part_3_customization" count="191" />
        <part id="part_4_advanced" count="1" />
      </part_distribution>
    </processing_statistics>
  </metadata>
  <part id="part_1_fundamentals" name="Parte I: Fundamentos">
    <description>Base conceitual e arquitetura do Plotly</description>
    <learning_objectives>
      <objective id="obj_1">Compreender a arquitetura do Plotly</objective>
      <objective id="obj_2">Diferenciar Express vs Graph Objects</objective>
      <objective id="obj_3">Preparar dados nos formatos corretos</objective>
    </learning_objectives>
    <sections>
      <section name="Basic charts" difficulty="basic" source_file="Basic charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Basic charts</objective>
          <objective>Aplicar customizações em Basic charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
Basic Charts (/python/basic-charts)
Plotly Python Open Source Graphing Library Basic Charts
Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make basic charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/line-and-
scatter/)
Scatter Plots
(/python/line-charts/)
Line Charts
(/python/bar-charts/)
Bar Charts
(/python/pie-charts/)
Pie Charts
(/python/bubble-charts/)
Bubble Charts
(/python/dot-plots/)
Dot Plots
(/python/filled-area-
plots/)
Filled Area Plots
(/python/horizontal-bar-
charts/)
Horizontal Bar Charts
(/python/gantt/)
Gantt Charts
(/python/sunburst-
charts/)
Sunburst Charts
(/python/table/)
Tables
(/python/sankey-
diagram/)
Sankey Diagram
(/py...</full_content>
      </section>
      <section name="pyvy_2x_01x" difficulty="basic" source_file="pyvy_2x_01x.txt">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x_01x</objective>
          <objective>Aplicar customizações em pyvy_2x_01x</objective>
        </section_objectives>
        <full_content />
      </section>
      <section name="pyvy_2x_02x" difficulty="basic" source_file="pyvy_2x_02x.txt">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x_02x</objective>
          <objective>Aplicar customizações em pyvy_2x_02x</objective>
        </section_objectives>
        <full_content />
      </section>
      <section name="GDP per capita _ Gapminder" difficulty="basic" source_file="GDP per capita _ Gapminder.pdf">
        <section_objectives>
          <objective>Dominar a criação de GDP per capita _ Gapminder</objective>
          <objective>Aplicar customizações em GDP per capita _ Gapminder</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">“Life expectancy at birth” do also have data
for 2006, but many of the other indicators still have
no data for 2006</concept>
          <concept id="concept_2">The documentation for “Income per person”
has also been updated (it is now called “version 2”)</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
Home&gt;GDP per capita
INCOME PER PERSON UPDATED TO 2007
Income  per person (i.e. GDP per capita) has been
updated to 2007.
Here is one example for 2007 where income per
person is plotted against Life expectancy at birth.
Note that the GDP  data will be revised in a near
future, taking into account the latest round of PPP
from the ICP.
Posted in News
Tagged Corrections &amp; updates, gdp, gdp 2007, GDP per capita, gdp per capita 2007, income per person, latest gdp, new gdp per person
DATA FOR "INCOME PER PERSON" NOW ALSO FOR 2006
The indicator “Income per person (fixed PPP$)” has
been updated with new data for the year 2006 for
173 countries and territories.
Here you can see the graph for 2006.
This data was based on the real growth rate, taken
from World Development Indicators 2008, linked to
the Income  per person at 2003. At the same time
the previous data for 2004-2006 was replaced with
the new data for all these 173 countries and
territories. This was also done for anoth...</full_content>
      </section>
      <section name="pyvy_2x2_1_basic_charts" difficulty="basic" source_file="pyvy_2x2_1_basic_charts">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x2_1_basic_charts</objective>
          <objective>Aplicar customizações em pyvy_2x2_1_basic_charts</objective>
        </section_objectives>
        <full_content>Tipo de arquivo não suportado: pyvy_2x2_1_basic_charts</full_content>
      </section>
      <section name="pyvy_Insights_chart_colab" difficulty="basic" source_file="pyvy_Insights_chart_colab">
        <section_objectives>
          <objective>Dominar a criação de pyvy_Insights_chart_colab</objective>
          <objective>Aplicar customizações em pyvy_Insights_chart_colab</objective>
        </section_objectives>
        <full_content>Tipo de arquivo não suportado: pyvy_Insights_chart_colab</full_content>
      </section>
      <section name="pyvy_Recomendations_plotly_colab" difficulty="basic" source_file="pyvy_Recomendations_plotly_colab">
        <section_objectives>
          <objective>Dominar a criação de pyvy_Recomendations_plotly_colab</objective>
          <objective>Aplicar customizações em pyvy_Recomendations_plotly_colab</objective>
        </section_objectives>
        <full_content>Tipo de arquivo não suportado: pyvy_Recomendations_plotly_colab</full_content>
      </section>
    </sections>
  </part>
  <part id="part_2_essential_charts" name="Parte II: Gráficos Essenciais">
    <description>Gráficos fundamentais para visualização de dados</description>
    <learning_objectives>
      <objective id="obj_1">Criar gráficos de barras completos</objective>
      <objective id="obj_2">Implementar visualizações geográficas</objective>
      <objective id="obj_3">Dominar gráficos de linha e dispersão</objective>
    </learning_objectives>
    <sections>
      <section name="Scatter plots" difficulty="intermediate" source_file="Scatter plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Scatter plots</objective>
          <objective>Aplicar customizações em Scatter plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.scatter(x=[0, 1, 2, 3, 4], y=[0, 1, 4, 9, 16])
fig.show()
0 0.5 1 1.5 2 2.5 3 3.5 40246810121416
xy
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
names
ines
rts
er16/07/2025, 06:20 Scatter plots in Python
https://plotly.com/python/line-and-scatter/ 1/25</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Scatter plots with Plotly Express &gt;  &gt; Scatter
Plots
Scatter Plots in Python
How to make scatter plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/line-and-
scatter.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
With px.scatter, each data point is represented as a marker point, whose location is given by the x and y columns.
# x and y given as array_like objects
import plotly.express...</full_content>
      </section>
      <section name="Lines on tile maps" difficulty="intermediate" source_file="Lines on tile maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Lines on tile maps</objective>
          <objective>Aplicar customizações em Lines on tile maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.line_map (us_cities , lat="lat", lon="lon", color="State", zoom=3, height=300)
fig.update_layout (map_style ="open-street-map" , map_zoom =4, map_center_lat  = 41,
    margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
Given a GeoPandas geo-data frame with linestring or multilinestring features, one can extra point data and use px.line_map.
State
Ohio
New York
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ess
aces16/07/2025, 06:36 Lines on tile maps ...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Scattermap (
    mode = "markers+lines" ,
    lon = [10, 20, 30],
    lat = [10, 20,30],
    marker = {'size': 10}))
fig.add_trace (go.Scattermap (
    mode = "markers+lines" ,
    lon = [-50, -60,40],
    lat = [30, 10, -20],
    marker = {'size': 10}))
fig.update_layout (
    margin ={'l':0,'t':0,'b':0,'r':0},
    map = {
        'center' : {'lon': 10, 'lat': 10},
        'style': "open-street-map" ,
        'center' : {'lon': -20, 'lat': -...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Lines on tile maps using Plotly Express
Lines on maps from GeoPandas &gt;  &gt; Lines on Tile
Maps
Lines on Tile Maps in Python
How to draw a line on tile-based maps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/lines-on-tile-
maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
To draw a line on a map, you either can use px.line_map in Plotly Express, or go.Scattermap in Plotly Graph Objects. Here's an example of drawing a line on a tile-
based map using Plotly Express.
import pandas as pd
us_cities  = pd.read_csv ("https://raw.githubusercontent.com/plotly/datasets/master/us-cities-top-1k.csv" )
us_cities  = us_cities .query("State in ['...</full_content>
      </section>
      <section name="Scatter plots on maps" difficulty="intermediate" source_file="Scatter plots on maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Scatter plots on maps</objective>
          <objective>Aplicar customizações em Scatter plots on maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("year == 2007" )
fig = px.scatter_geo (df, locations ="iso_alpha" ,
                     size="pop", # size of markers, "pop" is one of the columns of gapminder
                     )
fig.show()
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
cattergeo
t16/07/2025, 06:37 Scatter plots on maps in Python
https://plotly.com/python/scatter-plots-on-maps/ 1/8</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Base Map Configuration
Geographical Scatter Plot with px.scatter_geo
Customize geographical scatter plot &gt;  &gt; Scatter Plots on
Maps
Scatter Plots on Maps in Python
How to make scatter plots on maps in Python. Scatter plots on maps highlight geographic areas and can be colored by value.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/scatter-plots-on-
maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly figures made with px.scatter_geo, px.line_geo or px.choropleth functions or containing go.Choropleth or go.Scattergeo
 have a go.layout.Geo object which can be used to  onto
which data is plotted.
Plotly Express (/python/plotly-express/)
graph objects ...</full_content>
      </section>
      <section name="Scatter plots on tile maps" difficulty="intermediate" source_file="Scatter plots on tile maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Scatter plots on tile maps</objective>
          <objective>Aplicar customizações em Scatter plots on tile maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.carshare ()
fig = px.scatter_map (df, lat="centroid_lat" , lon="centroid_lon" ,     color="peak_hour" , size="car_hours" ,
                  color_continuous_scale =px.colors.cyclical .IceFire, size_max =15, zoom=10)
fig.show()
px.scatter_map can work well with  dataframes whose geometry is of type Point.
GeoPandas (https://geopandas.org/)
© , © 
contributors
CARTO (https://carto.com/about-carto/)
OpenStreetMap (http://www.openstreetmap.org/about/)051015...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Scattermap (
        lat=['45.5017' ],
        lon=['-73.5673' ],
        mode='markers' ,
        marker=go.scattermap .Marker(
            size=14
        ),
        text=['Montreal' ],
    ))
fig.update_layout (
    hovermode ='closest' ,
    map=dict(
        bearing=0,
        center=go.layout.map.Center(
            lat=45,
            lon=-73
        ),
        pitch=0,
        zoom=5
    )
)
fig.show()
© , © 
contributors
CARTO (https...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic example with Plotly Express
Basic Example with GeoPandas &gt;  &gt; Scatter Plots on Tile
Maps
Scatter Plots on Tile Maps in Python
How to make scatter plots on tile maps in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/tile-scatter-
maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Here we show the  function px.scatter_map for a scatter plot on a tile map.
Plotly Express (/python/plotly-express/)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
import plotly.ex...</full_content>
      </section>
      <section name="Carpet scatter plot" difficulty="advanced" source_file="Carpet scatter plot in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Carpet scatter plot</objective>
          <objective>Aplicar customizações em Carpet scatter plot</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Carpet Plot &gt;  &gt; Carpet
Scatter Plot
Carpet Scatter Plot in Python
How to make carpet scatter plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/carpet-
scatter.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import plotly.graph_objects  as go
fig = go.Figure(go.Carpet(
    a = [4, 4, 4, 4.5, 4.5, 4.5, 5, 5, 5, 6, 6, 6],
    b = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3],
    y = [2, 3.5, 4, 3, 4.5, 5, 5.5, 6.5, 7.5, 8, 8.5, 10],
    aaxis = dict(
      tickprefix  = 'a = ',
      ticksuffix  = 'm',
      smoothing  = 1,
      minorgridcount  = 9
      ),
    baxis = dict(
      tickprefix  = 'b = ',
     ...</full_content>
      </section>
    </sections>
  </part>
  <part id="part_3_customization" name="Parte III: Customização e Interatividade">
    <description>Estilização avançada e recursos interativos</description>
    <learning_objectives>
      <objective id="obj_1">Aplicar estilização profissional</objective>
      <objective id="obj_2">Implementar interatividade</objective>
      <objective id="obj_3">Integrar com Dash</objective>
    </learning_objectives>
    <sections>
      <section name="Bar charts" difficulty="intermediate" source_file="Bar charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Bar charts</objective>
          <objective>Aplicar customizações em Bar charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
data_canada  = px.data.gapminder ().query("country == 'Canada'" )
fig = px.bar(data_canada , x='year', y='pop')
fig.show()
Long-form data has one row per observation, and one column per variable. This is suitable for storing and displaying multivariate data i.e. with dimension greater
than 2. This format is sometimes called "tidy".
To learn more about how to provide a specific form of column-oriented data to 2D-Cartesian Plotly Express functions such as px.bar, see t...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
animals=['giraffes' , 'orangutans' , 'monkeys' ]
fig = go.Figure([go.Bar(x=animals, y=[20, 14, 23])])
fig.show()Male Female0200400600800
Male Female Male Female Male Female0200400600800smoker
No
Yes
sex sex sex sextotal_bill total_billday=Thur day=Fri day=Sat day=Suntime=Dinner time=Lunch
giraffes orangutans monkeys05101520
s
bjects
g a
mtext
rs into
Type16/07/2025, 06:20 Bar charts in Python
https://plotly.com/python/bar-charts/ 11/34</graph_objects>
        </side_by_side_comparison>
        <practical_exercises>
          <exercise id="exercise_1" difficulty="basic">
            <title>Exercício: Criar Bar charts com seus dados</title>
            <description>Usando o exemplo acima, modifique o código para usar seus próprios dados</description>
            <solution_hint>Substitua o dataset pelos seus dados e ajuste as colunas x e y</solution_hint>
          </exercise>
        </practical_exercises>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Bar chart with Plotly Express
Bar charts with Long Format Data &gt;  &gt; Bar
Charts
Bar Charts in Python
How to make Bar Charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bar-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
With px.bar, each row of the DataFrame is represented as a rectangular mark. To aggregate multiple data points into the same rectangular mark, please refer to
t...</full_content>
      </section>
      <section name="Bubble charts" difficulty="intermediate" source_file="Bubble charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Bubble charts</objective>
          <objective>Aplicar customizações em Bubble charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ()
fig = px.scatter(df.query("year==2007" ), x="gdpPercap" , y="lifeExp" ,
         size="pop", color="continent" ,
                 hover_name ="country" , log_x=True, size_max =60)
fig.show()
2 345678910002 345678910k2 345674050607080continent
Asia
Europe
Africa
Americas
Oceania
gdpPercaplifeExp
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
cts16/07/2025, 06:21 Bubble charts in Python
https://plotly.com/python/bubble-charts/ 1/9</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=[go.Scatter(
    x=[1, 2, 3, 4], y=[10, 11, 12, 13],
    mode='markers' ,
    marker_size =[40, 60, 80, 100])
])
fig.show()
1 1.5 2 2.5 3 3.5 4 4.59.51010.51111.51212.51313.514
cts16/07/2025, 06:21 Bubble charts in Python
https://plotly.com/python/bubble-charts/ 2/9</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Bubble chart with plotly.express &gt;  &gt; Bubble
Charts
Bubble Charts in Python
How to make bubble charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bubble-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a scatter plot in which a third dimension of the data is shown through the size of markers. For other
types of scatter plot, see the .
bubble chart (https://en.wikipedia.org/wiki/Bubble_chart)
scatter plot documentation (https://plotly.com/python/line-and-scatter/)
We first show a bubble chart example using Plotly Express.  is the easy-to-use, high-level interface to Plotly, which 
 and produces . The si...</full_content>
      </section>
      <section name="Categorical axes" difficulty="intermediate" source_file="Categorical axes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Categorical axes</objective>
          <objective>Aplicar customizações em Categorical axes</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.bar(x=["a", "a", "b", 3], y = [1,2,3,4])
fig.update_xaxes (type='category' )
fig.show()
Every cartesian trace type is compatible with categorical axes, not just bar.
Scatter plots where one axis is categorical are often known as .
dot plots (https://plotly.com/python/dot-plots/)</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
x=['b', 'a', 'c', 'd']
fig = go.Figure(go.Bar(x=x, y=[2,5,1,9], name='Montreal' ))
fig.add_trace (go.Bar(x=x, y=[1, 4, 9, 16], name='Ottawa' ))
fig.add_trace (go.Bar(x=x, y=[6, 8, 4.5, 8], name='Toronto' ))
fig.update_layout (barmode='stack')
fig.update_xaxes (categoryorder ='category ascending' )
fig.show()
This example orders the categories by total value with categoryorder: 'total descending'</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)2-D Cartesian Axis Type and Auto-Detection
'linear' (see the )
'log' (see the )
'date' (see the )
'category' see below
'multicategory' see below
First check for multicategory, then date, then category, else default to linear (log is never automatically selected)
multicategory is just a shape test: is the array nested?
date and category: require more than twice as many distinct date or category strings as distinct numbers in order to choose that axis type.
Both of these test an evenly-spaced sample of at most 1000 values
Forcing an axis to be categorical &gt;  &gt;
Categorical Axes
Categorical Axes in Python
How to use categorical axes in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/categorical-
axes.md)
Sign up for early ...</full_content>
      </section>
      <section name="Dot plots" difficulty="intermediate" source_file="Dot plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dot plots</objective>
          <objective>Aplicar customizações em Dot plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.medals_long ()
fig = px.scatter(df, y="nation" , x="count", color="medal", symbol="medal")
fig.update_traces (marker_size =10)
fig.show()
8 10 12 14 16 18 20 22 24South KoreaChinaCanadamedal
gold
silver
bronze
countnation
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:21 Dot plots in Python
https://plotly.com/python/dot-plots/ 1/6</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
schools = ["Brown", "NYU", "Notre Dame" , "Cornell" , "Tufts", "Yale",
           "Dartmouth" , "Chicago" , "Columbia" , "Duke", "Georgetown" ,
           "Princeton" , "U.Penn" , "Stanford" , "MIT", "Harvard" ]
fig = go.Figure()
fig.add_trace (go.Scatter(
    x=[72, 67, 73, 80, 76, 79, 84, 78, 86, 93, 94, 90, 92, 96, 94, 112],
    y=schools,
    marker=dict(color="crimson" , size=12),
    mode="markers" ,
    name="Women",
))
fig.add_trace (go.Scatter(
    x=[...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Dot Plot &gt;  &gt; Dot
Plots
Dot Plots in Python
How to make dot plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/dot-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Dot plots (also known as ) are  with one
categorical axis and one continuous axis. They can be used to show changes between two (or more) points in time or between two (or more) conditions. Compared to
a , dot plots can be less cluttered and allow for an easier comparison between conditions.
Cleveland dot plots (https://en.wikipedia.org/wiki/Dot_plot_(statistics))
scatter plots (https://plotly.com/python/line-and-scatter/)
bar chart (/python/b...</full_content>
      </section>
      <section name="Dumbbell plots" difficulty="basic" source_file="Dumbbell plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dumbbell plots</objective>
          <objective>Aplicar customizações em Dumbbell plots</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">The arrow, angleref, and standoff properties used on the marker in this example are new in 5</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Dumbbell Plot &gt;  &gt; Dumbbell
Plots
Dumbbell Plots in Python
How to create dumbbell plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/dumbbell-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Dumbbell plots are useful for demonstrating change between two sets of data points, for example, the population change for a selection of countries for two different
years.
In this example, we compare life expectancy in 1952 with life expectancy in 2002 for countries in Europe.
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:27 Dumbbell plots in Python
https://plotly.com/python/dumbbell-plo...</full_content>
      </section>
      <section name="Figure factory tables" difficulty="intermediate" source_file="Figure factory tables in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Figure factory tables</objective>
          <objective>Aplicar customizações em Figure factory tables</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Table
Add Links &gt;  &gt; Figure
Factory Tables
Figure Factory Tables in Python
How to make tables in Python with Plotly's Figure Factory.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/figure-
factory-table.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Tables can be created using a , or by using a  as detailed in this page.
table trace type (/python/table/)
figure factory (/python/figure-factories/)
import plotly.figure_factory  as ff
data_matrix  = [['Country' , 'Year', 'Population' ],
               ['United States' , 2000, 282200000 ],
               ['Canada' , 2000, 27790000 ],
               ['United States' , 2005, 295500000 ],
...</full_content>
      </section>
      <section name="Filled area plots" difficulty="intermediate" source_file="Filled area plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Filled area plots</objective>
          <objective>Aplicar customizações em Filled area plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ()
fig = px.area(df, x="year", y="pop", color="continent" , line_group ="country" )
fig.show()
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to
get the code and run python app.py.
Dash (https://plotly.com/dash/)
Get started with  and learn how to effortlessly  &amp; 
 apps like this with .
the official Dash docs (https://dash.plotly.com/installation)
style (htt...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
fig.add_trace (go.Scatter(x=[1, 2, 3, 4], y=[0, 2, 3, 5], fill='tozeroy' )) # fill down to xaxis
fig.add_trace (go.Scatter(x=[1, 2, 3, 4], y=[3, 5, 1, 7], fill='tonexty' )) # fill to trace0 y
fig.show()gold silver bronze051015202530354045
nation
South Korea
China
Canada
medalcount
1 1.5 2 2.5 3 3.5 401234567trace 1
trace 0
bjects
ary Lines
d Values16/07/2025, 06:21 Filled area plots in Python
https://plotly.com/python/filled-area-plots/ 3/10</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Filled area plot with plotly.express
Filled area plot in Dash &gt;  &gt; Filled
Area Plots
Filled Area Plots in Python
How to make filled area plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/filled-area-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This example shows how to fill the area enclosed by traces.
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
px.area creates a stacked area plot. Each filled area corresponds to one ...</full_content>
      </section>
      <section name="Gantt charts" difficulty="advanced" source_file="Gantt charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Gantt charts</objective>
          <objective>Aplicar customizações em Gantt charts</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">When setting color to the same value as y, autorange should not be set to reverse, so as to list the value of the Y axis in the same order as the legend entries</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside JupyterDec 2008 Jan 2009 Feb 2009 Mar 2009 Apr 2009 May 2009 Jun 2009Job AJob BJob C1w1m6mYTD1yall
020406080100Gantt Chart
16/07/2025, 06:21 Gantt cha...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Gantt Charts and Timelines with plotly.express &gt;  &gt; Gantt
Charts
Gantt Charts in Python
How to make Gantt Charts in Python with Plotly. Gantt Charts use horizontal bars to represent the start and end times of tasks.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/gantt.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a type of bar chart that illustrates a project schedule. The chart lists the tasks to be performed on the
vertical axis, and time intervals on the horizontal axis. The width of the horizontal bars in the graph shows the duration of each activity.
Gantt chart (https://en.wikipedia.org/wiki/Gantt_chart)
 is the easy-to-use, ...</full_content>
      </section>
      <section name="Horizontal bar charts" difficulty="intermediate" source_file="Horizontal bar charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Horizontal bar charts</objective>
          <objective>Aplicar customizações em Horizontal bar charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.bar(df, x="total_bill" , y="day", orientation ='h')
fig.show()
In this example a column is used to color the bars, and we add the information from other columns to the hover data.0 200 400 600 800 1000 1200 1400 1600 1800SunSatThurFri
total_billday
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
press
tly
s show
 than a16/07/2025, 06:21 Horizontal bar charts in Python
https://plotly.com/python/horizontal-bar-charts/ 1/11</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Bar(
            x=[20, 14, 23],
            y=['giraffes' , 'orangutans' , 'monkeys' ],
            orientation ='h'))
fig.show()0 500 1000 1500 2000 2500 3000FemaleMaleday
Sun
Sat
Thur
FriRestaurant bills
total_billsex
0 5 10 15 20giraffesorangutansmonkeys
press
tly
s show
 than a16/07/2025, 06:21 Horizontal bar charts in Python
https://plotly.com/python/horizontal-bar-charts/ 2/11</graph_objects>
        </side_by_side_comparison>
        <practical_exercises>
          <exercise id="exercise_1" difficulty="basic">
            <title>Exercício: Criar Horizontal bar charts com seus dados</title>
            <description>Usando o exemplo acima, modifique o código para usar seus próprios dados</description>
            <solution_hint>Substitua o dataset pelos seus dados e ajuste as colunas x e y</solution_hint>
          </exercise>
        </practical_exercises>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Horizontal Bar Chart with Plotly Express
Basic Horizontal Bar Chart with Plotly Express
Configure horizontal bar chart &gt;  &gt; Horizontal
Bar Charts
Horizontal Bar Charts in Python
How to make horizontal bar charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/horizontal-
bar-charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
See more examples of bar charts (including vertical bar charts) and styling options .
here (https://plotly.com/python/bar-charts/)
 is the easy-to-use, high-level interface to Plotly, which  and
produces . For a horizontal bar char, use the px.bar function with orientation='h'.
Plotly Express (...</full_content>
      </section>
      <section name="Horizontal bar charts2" difficulty="intermediate" source_file="Horizontal bar charts in Python2.pdf">
        <section_objectives>
          <objective>Dominar a criação de Horizontal bar charts2</objective>
          <objective>Aplicar customizações em Horizontal bar charts2</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.bar(df, x="total_bill" , y="day", orientation ='h')
fig.show()
In this example a column is used to color the bars, and we add the information from other columns to the hover data.0 200 400 600 800 1000 1200 1400 1600 1800SunSatThurFri
total_billday
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
press
tly
s show
 than a16/07/2025, 06:25 Horizontal bar charts in Python
https://plotly.com/python/horizontal-bar-charts/ 1/11</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Bar(
            x=[20, 14, 23],
            y=['giraffes' , 'orangutans' , 'monkeys' ],
            orientation ='h'))
fig.show()0 500 1000 1500 2000 2500 3000FemaleMaleday
Sun
Sat
Thur
FriRestaurant bills
total_billsex
0 5 10 15 20giraffesorangutansmonkeys
press
tly
s show
 than a16/07/2025, 06:25 Horizontal bar charts in Python
https://plotly.com/python/horizontal-bar-charts/ 2/11</graph_objects>
        </side_by_side_comparison>
        <practical_exercises>
          <exercise id="exercise_1" difficulty="basic">
            <title>Exercício: Criar Horizontal bar charts2 com seus dados</title>
            <description>Usando o exemplo acima, modifique o código para usar seus próprios dados</description>
            <solution_hint>Substitua o dataset pelos seus dados e ajuste as colunas x e y</solution_hint>
          </exercise>
        </practical_exercises>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Horizontal Bar Chart with Plotly Express
Basic Horizontal Bar Chart with Plotly Express
Configure horizontal bar chart &gt;  &gt; Horizontal
Bar Charts
Horizontal Bar Charts in Python
How to make horizontal bar charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/horizontal-
bar-charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
See more examples of bar charts (including vertical bar charts) and styling options .
here (https://plotly.com/python/bar-charts/)
 is the easy-to-use, high-level interface to Plotly, which  and
produces . For a horizontal bar char, use the px.bar function with orientation='h'.
Plotly Express (...</full_content>
      </section>
      <section name="Icicle charts" difficulty="intermediate" source_file="Icicle charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Icicle charts</objective>
          <objective>Aplicar customizações em Icicle charts</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">animated transitions are currently not implemented when uniformtext is used</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
data = dict(
    character =["Eve", "Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura"],
    parent=["", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve" ],
    value=[10, 14, 12, 10, 2, 6, 6, 4, 4])
fig =px.icicle(
    data,
    names='character' ,
    parents='parent' ,
    values='value',
)
fig.update_traces (root_color ="lightgrey" )
fig.update_layout (margin = dict(t=50, l=25, r=25, b=25))
fig.show()
Eve Seth
Cain
Awan
Abel
Azura
Enos
Noam...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig =go.Figure(go.Icicle(
    labels=["Eve", "Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura"],
    parents=["", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve" ],
    values=[10, 14, 12, 10, 2, 6, 6, 4, 4],
    root_color ="lightgrey"
))
fig.update_layout (margin = dict(t=50, l=25, r=25, b=25))
fig.show()
Eve Seth
Cain
Awan
Abel
Azura
Enos
Noam
Enoch
ith
ith
 cle
ith
ete colors
es
mtext
scale16/07/2025, 06:26 Icicle charts in Python
h...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Icicle Plot with plotly.express &gt;  &gt; Icicle
Charts
Icicle Charts in Python
How to make Icicle Charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/icicle-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
New in v5.0
Icicle charts visualize hierarchical data using rectangular sectors that cascade from root to leaves in one of four directions: up, down, left, or right. Similar to 
 and  charts, the hierarchy is defined by labels (names for px.icicle)
and parents attributes. Click on one sector to zoom in/out, which also displays a pathbar on the top of your icicle. To zoom out, you can click the parent sector or click
the pathba...</full_content>
      </section>
      <section name="Line charts" difficulty="intermediate" source_file="Line charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Line charts</objective>
          <objective>Aplicar customizações em Line charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("country=='Canada'" )
fig = px.line(df, x="year", y="lifeExp" , title='Life expectancy in Canada' )
fig.show()
1960 1970 1980 1990 2000707274767880Life expectancy in Canada
yearlifeExp
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
lor16/07/2025, 06:20 Line charts in Python
https://plotly.com/python/line-charts/ 1/17</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Line Plots with plotly.express &gt;  &gt; Line
Charts
Line Charts in Python
How to make line charts in Python with Plotly. Examples on creating and styling line charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/line-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces . With px.line, each data point is represented as a vertex (which location is given by the x and y columns)
of a polyline mark in 2D space.
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling...</full_content>
      </section>
      <section name="Patterns, hatching, texture" difficulty="basic" source_file="Patterns, hatching, texture in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Patterns, hatching, texture</objective>
          <objective>Aplicar customizações em Patterns, hatching, texture</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.medals_long ()
fig = px.bar(df, x="medal", y="count", color="nation" , pattern_shape ="nation" )
fig.show()
gold silver bronze051015202530354045
nation
South Korea
China
Canada
medalcount
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
s16/07/2025, 06:27 Patterns, hatching, texture in Python
https://plotly.com/python/pattern-hatching-texture/ 1/8</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
fig.add_trace (go.Bar(x=["a","b"], y=[1,2], marker_pattern_shape ="."))
fig.add_trace (go.Bar(x=["a","b"], y=[3,1], marker_pattern_shape ="x"))
fig.add_trace (go.Bar(x=["a","b"], y=[2,3], marker_pattern_shape ="+"))
fig.show()
See  for more information and chart attribute options!
https://plotly.com/python/reference/bar/ (https://plotly.com/python/reference/bar/)
 is an open-source framework for building analytical applications, with no Javasc...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)to double-encode variables (i.e. using both color and pattern) to improve accessibility for visually-impaired end-users
to encode an additional variable beyond just using color
to make charts that are easier to print in black and white
Patterned Charts with Plotly Express &gt;  &gt; Patterns,
Hatching, Texture
Patterns, Hatching, Texture in Python
How to use patterns (also known as hatching or texture) with bar charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/pattern-
hatching-texture.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
New in 5.0, with support for pie, sunburst, icicle, funnelarea, and treemap charts in 5.15
, , , , 
, , , , an...</full_content>
      </section>
      <section name="Pie charts" difficulty="intermediate" source_file="Pie charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Pie charts</objective>
          <objective>Aplicar customizações em Pie charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("year == 2007" ).query("continent == 'Europe'" )
df.loc[df['pop'] &lt; 2.e6, 'country' ] = 'Other countries'  # Represent only large countries
fig = px.pie(df, values='pop', names='country' , title='Population of European continent' )
fig.show()
Lines of the dataframe with the same value for names are grouped together in the same sector.14.1%12.1%
10.4%
10.4%
9.92%
6.9%6.57%3.8%2.83%1.83%1.82%1.77%1.75%1.73%1.7%1.54%1.4%1.29%1.25%0.933%0....</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
labels = ['Oxygen' ,'Hydrogen' ,'Carbon_Dioxide' ,'Nitrogen' ]
values = [4500, 2500, 1053, 500]
fig = go.Figure(data=[go.Pie(labels=labels, values=values)])
fig.show()
Colors can be given as RGB triplets or hexadecimal strings, or with  as below.
CSS color names (https://www.w3schools.com/cssref/css_colors.asp)</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Pie chart with plotly express
Pie chart with repeated labels &gt;  &gt; Pie
Charts
Pie Charts in Python
How to make Pie Charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/pie-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A pie chart is a circular statistical chart, which is divided into sectors to illustrate numerical proportion.
If you're looking instead for a multilevel hierarchical pie-like chart, go to the .
Sunburst tutorial (/python/sunburst-charts/)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
...</full_content>
      </section>
      <section name="Sankey diagram" difficulty="intermediate" source_file="Sankey diagram in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Sankey diagram</objective>
          <objective>Aplicar customizações em Sankey diagram</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Sankey Diagram &gt;  &gt; Sankey
Diagram
Sankey Diagram in Python
How to make Sankey Diagrams in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/sankey-
diagram.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a flow diagram, in which the width of arrows is proportional to the flow quantity.
Sankey diagram (https://en.wikipedia.org/wiki/Sankey_diagram)
Sankey diagrams visualize the contributions to a flow by defining  to represent the source
node,  for the target node, 
 to set the flow volume, and  that shows the node name.
source (https://plotly.com/python/reference/sankey/#sankey-link-source)
target (https://plotl...</full_content>
      </section>
      <section name="Sunburst charts" difficulty="intermediate" source_file="Sunburst charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Sunburst charts</objective>
          <objective>Aplicar customizações em Sunburst charts</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">animated transitions are currently not implemented when uniformtext is used</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
data = dict(
    character =["Eve", "Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura"],
    parent=["", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve" ],
    value=[10, 14, 12, 10, 2, 6, 6, 4, 4])
fig = px.sunburst (
    data,
    names='character' ,
    parents='parent' ,
    values='value',
)
fig.show()
EveSeth
Cain
Awan
Abel
Azura
Enos
Noam
Enoch
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ess
me with
me with
 nburst
me wi...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig =go.Figure(go.Sunburst (
    labels=["Eve", "Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura"],
    parents=["", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve" ],
    values=[10, 14, 12, 10, 2, 6, 6, 4, 4],
))
# Update layout for tight margin
# See https://plotly.com/python/creating-and-updating-figures/
fig.update_layout (margin = dict(t=0, l=0, r=0, b=0))
fig.show()
EveSeth
Cain
Awan
Abel
Azura
Enos
Noam
Enoch
ess
me with
me with...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Sunburst Plot with plotly.express &gt;  &gt; Sunburst
Charts
Sunburst Charts in Python
How to make Sunburst Charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/sunburst-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Sunburst plots visualize hierarchical data spanning outwards radially from root to leaves. Similar to  and
, the hierarchy is defined by labels (names for px.icicle) and parents attributes. The root starts from the center and
children are added to the outer rings.
Icicle charts (https://plotly.com/python/icicle-charts/)
Treemaps (https://plotly.com/python/treemaps/)
 is the easy-to-use, high-level interface to Plotly...</full_content>
      </section>
      <section name="Sunburst traces" difficulty="intermediate" source_file="Sunburst traces in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Sunburst traces</objective>
          <objective>Aplicar customizações em Sunburst traces</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; sunburst Traces
Python Figure Reference: sunburst Traces
A plotly.graph_objects.Sunburst trace is a graph object in the figure's data list with any of the named arguments or attributes listed
below.
Visualize hierarchal data spanning outward radially from root to leaves. The sunburst sectors are determined by the entries in "labels"
or "ids" and in "parents".
Code:fig.update_traces(name=&lt;VALUE&gt;, selector=dict(type='sunburst'))
Type: string
Sets the trace name. The trace name appears as the legend item and on hover.
Code:fig.update_traces(visible=&lt;VALUE&gt;, selector=dict(type='sunburst'))
Type: enumerated , one of ( True | False | "legendonly" )
Default:True
Determines whether or not this trace is visible. If "legendonly", the trace is not drawn, but can appear as a legend item (provided that
the legend itself is visible).
Code:fig.update_traces(legend=&lt;VALUE&gt;, selector=dict(type='sunburst'))
Type: subplotid
Default:legen...</full_content>
      </section>
      <section name="Tables" difficulty="intermediate" source_file="Tables in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Tables</objective>
          <objective>Aplicar customizações em Tables</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Table
Styled Table &gt;  &gt; Tables
Tables in Python
How to make tables in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/table.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
go.Table provides a Table object for detailed data viewing. The data are arranged in a grid of rows and columns. Most styling can be specified for header, columns,
rows or individual cells. Table is using a column-major order, ie. the grid is represented as a vector of column vectors.
Note that  provides a different type of .
Dash (https://dash.plotly.com/)
DataTable (https://dash.plotly.com/datatable)
import plotly.graph_objects  as go
fig = go.F...</full_content>
      </section>
      <section name="Tables2" difficulty="intermediate" source_file="Tables in Python2.pdf">
        <section_objectives>
          <objective>Dominar a criação de Tables2</objective>
          <objective>Aplicar customizações em Tables2</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Table
Styled Table &gt;  &gt; Tables
Tables in Python
How to make tables in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/table.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
go.Table provides a Table object for detailed data viewing. The data are arranged in a grid of rows and columns. Most styling can be specified for header, columns,
rows or individual cells. Table is using a column-major order, ie. the grid is represented as a vector of column vectors.
Note that  provides a different type of .
Dash (https://dash.plotly.com/)
DataTable (https://dash.plotly.com/datatable)
import plotly.graph_objects  as go
fig = go.F...</full_content>
      </section>
      <section name="Treemap charts" difficulty="intermediate" source_file="Treemap charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Treemap charts</objective>
          <objective>Aplicar customizações em Treemap charts</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">for best results, ensure that the first path element is a single root node</concept>
          <concept id="concept_2">animated transitions are currently not implemented when uniformtext is used</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.treemap(
    names = ["Eve","Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura"],
    parents = ["", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve"]
)
fig.update_traces (root_color ="lightgrey" )
fig.update_layout (margin = dict(t=50, l=25, r=25, b=25))
fig.show()
Hierarchical data are often stored as a rectangular dataframe, with different columns corresponding to different levels of the hierarchy. px.treemap can take a path
paramete...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Treemap(
    labels = ["Eve","Cain", "Seth", "Enos", "Noam", "Abel", "Awan", "Enoch", "Azura"],
    parents = ["", "Eve", "Eve", "Seth", "Seth", "Eve", "Eve", "Awan", "Eve"],
    root_color ="lightgrey"
))
fig.update_layout (margin = dict(t=50, l=25, r=25, b=25))
fig.show()
This example uses the following attributes:
values (https://plotly.com/python/reference/treemap/#treemap-values)
textinfo (https://plotly.com/python/reference/treemap/#tre...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Treemap with plotly.express
Treemap of a rectangular DataFrame with plotly.express &gt;  &gt; Treemap
Charts
Treemap Charts in Python
How to make Treemap Charts with Plotly
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/treemaps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 visualize hierarchical data using nested rectangles. The input data format is the same as for 
 and : the hierarchy is defined by 
 (names for px.treemap) and 
 attributes. Click on one sector to zoom in/out, which also displays a pathbar in the upper-left corner of your treemap. To zoom out you can use the path bar
as well.
Treemap charts (https://en.wikipedia.org/w...</full_content>
      </section>
      <section name="Latex" difficulty="intermediate" source_file="Latex in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Latex</objective>
          <objective>Aplicar customizações em Latex</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.line(x=[1, 2, 3, 4], y=[1, 4, 9, 16], title=r'$\alpha_ {1c} = 352 \pm 11 \text{ km s}^{-1}$' )
fig.update_layout (
    xaxis_title =r'$\sqrt{(n_\text {c}(t|{T_\text {early}}))}$',
    yaxis_title =r'$d, r \text{ (solar radius)}$'
)
fig.show()
1 1.5 2 2.5 3 3.5 4246810121416
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:17 Latex in Python
https://plotly.com/python/LaTeX/ 1/3</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter1 1.5 2 2.5 3 3.5 40246810121416
16/07/2025, 06:17 Latex in Python
https://plotly.com/python/LaTeX/ 2/3</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)LaTeX Typesetting &gt;  &gt; LaTeX
LaTeX in Python
How to add LaTeX to python graphs.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/LaTeX.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Figure titles, axis labels and annotations all accept LaTeX directives for rendering mathematical formulas and notation, when the entire label is surrounded by dollar
signs $...$. This rendering is handled by the , which must be loaded in the environment
where figures are being rendered. MathJax is included by default in Jupyter-like environments. When embedding Plotly figures in other contexts it may be required to
ensure that MathJax is separately loaded, for example via a &lt;script&gt; tag...</full_content>
      </section>
      <section name="Peak finding" difficulty="advanced" source_file="Peak finding in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Peak finding</objective>
          <objective>Aplicar customizações em Peak finding</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Imports
Import Data &gt;  &gt; Peak Finding
Peak Finding in Python
Learn how to find peaks and valleys on datasets in Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/peak-finding.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The tutorial below imports , and .
Pandas (https://pandas.pydata.org/docs/user_guide/10min.html)
SciPy (https://www.scipy.org/)
import pandas as pd
from scipy.signal  import find_peaks
To start detecting peaks, we will import some data on milk production by month:
import plotly.graph_objects  as go
import pandas as pd
milk_data  = pd.read_csv ('https://raw.githubusercontent.com/plotly/datasets/master/monthly-milk-production-pounds.csv' )
time...</full_content>
      </section>
      <section name="Plot csv data" difficulty="intermediate" source_file="Plot csv data in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plot csv data</objective>
          <objective>Aplicar customizações em Plot csv data</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = pd.read_csv ('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv' )
fig = px.line(df, x = 'AAPL_x' , y = 'AAPL_y' , title='Apple Share Prices over time (2014)' )
fig.show()AAPL_xAAPL_y
02014-01-0277.445395
12014-01-0377.045575
22014-01-0674.896972
32014-01-0775.856461
42014-01-0875.091947
Mar 2014 May 2014 Jul 2014 Sep 2014 Nov 2014708090100110120Apple Share Prices over time (2014)
AAPL_xAAPL_y
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;ut...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
df = pd.read_csv ('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv' )
fig = go.Figure(go.Scatter(x = df['AAPL_x' ], y = df['AAPL_y' ],
                  name='Share Prices (in USD)' ))
fig.update_layout (title=dict(text='Apple Share Prices over time (2014)' ),
                   plot_bgcolor ='rgb(230, 230,230)' ,
                   showlegend =True)
fig.show()
See  for more information about Plotly's Python API!
https://plotly.com...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Plot from CSV with Plotly Express &gt;  &gt; Plot CSV Data
Plot CSV Data in Python
How to create charts from csv files with Plotly and Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/plot-data-from-csv.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
CSV or comma-delimited-values is a very popular format for storing structured data. In this tutorial, we will see how to plot beautiful graphs using csv data, and
Pandas. We will learn how to import csv data from an external source (a url), and plot it using Plotly and pandas.
First we import the data and look at it.
import pandas as pd
df = pd.read_csv ('https://raw.githubusercontent.com/plotly/datasets/master/2014_app...</full_content>
      </section>
      <section name="Plotly Python Graphing Library" difficulty="intermediate" source_file="Plotly Python Graphing Library.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plotly Python Graphing Library</objective>
          <objective>Aplicar customizações em Plotly Python Graphing Library</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Plotly Open Source Graphing Library for Python
Plotly's Python graphing library makes interactive, publication-quality graphs. Examples of how to make line plots, scatter plots, area charts, bar charts, error bars, box
plots, histograms, heatmaps, subplots, multiple-axes, polar charts, and bubble charts.
Plotly.py is  and you can .
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
free and open source (/python/is-plotly-free)
view the source, report issues or contribute on GitHub (https://github.com/plotly/plotly.py)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Fundamentals
More Fundamentals » (/python/plotly-fundamentals)
(/python/figure-
structure/)
The Figure Data
Structure
(/python/creating-and-
updating-figures/)
Creating and Updating
Figures
(/python/renderers/)
Displaying Figur...</full_content>
      </section>
      <section name="Random walk" difficulty="intermediate" source_file="Random walk in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Random walk</objective>
          <objective>Aplicar customizações em Random walk</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Random Walk in 1D &gt;  &gt; Random Walk
Random Walk in Python
Learn how to use Python to make a Random Walk
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/random-walk.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  can be thought of as a random process in which a token or a marker is randomly moved around some
space, that is, a space with a metric used to compute distance. It is more commonly conceptualized in one dimension ($\mathbb{Z}$), two dimensions
($\mathbb{Z}^2$) or three dimensions ($\mathbb{Z}^3$) in Cartesian space, where $\mathbb{Z}$ represents the set of integers. In the visualizations below, we will be
using  as well as a colorscale to denote the time s...</full_content>
      </section>
      <section name="Smoothing" difficulty="advanced" source_file="Smoothing in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Smoothing</objective>
          <objective>Aplicar customizações em Smoothing</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Imports
Savitzky-Golay Filter &gt;  &gt; Smoothing
Smoothing in Python
Learn how to perform smoothing using various methods in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/smoothing.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The tutorial below imports , ,  and
.
NumPy (http://www.numpy.org/)
Pandas (https://pandas.pydata.org/docs/user_guide/10min.html)
SciPy (https://www.scipy.org/)
Plotly (https://plotly.com/python/getting-started/)
import plotly.graph_objects  as go
import numpy as np
import pandas as pd
import scipy
from scipy import signal
Smoothing is a technique that is used to eliminate noise from a dataset. There are many algorithms and methods to ...</full_content>
      </section>
      <section name="pyvy_2x" difficulty="intermediate" source_file="pyvy_2x.md">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x</objective>
          <objective>Aplicar customizações em pyvy_2x</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express as px
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      fig = px.line(df, x='AAPL_x', y='AAPL_y', title='Apple Share Prices over time (2014)')
      fig.show()
    &lt;/code&gt;
  &lt;/section&gt;
  
  &lt;section&gt;
    &lt;title&gt;Plot a partir de CSV com graph_objects&lt;/title&gt;
    [cite_start]&lt;paragraph&gt;É possível obter um controle mais granular sobre o gráfico utilizando `graph_objects`[cite: 86]. [cite_start]O código abaixo cria uma...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects as go
      
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      
      fig = go.Figure(go.Scatter(x = df['AAPL_x'], y = df['AAPL_y'],
                            name='Share Prices (in USD)'))
      
      fig.update_layout(title_dict=dict(text='Apple Share Prices over time (2014)'),
                        plot_bgcolor='rgb(230, 230,230)',
                        showlegend=True)
      
      fig.show()
    &lt;...</graph_objects>
        </side_by_side_comparison>
        <full_content>&lt;web_content&gt;
  &lt;title&gt;Plotly Python Graphing Library&lt;/title&gt;
  &lt;author&gt;Plotly&lt;/author&gt;
  &lt;publication_date&gt;2025-07-16&lt;/publication_date&gt;
  &lt;license&gt;Plotly.py is free and open source[cite: 12]. Copyright © 2025 Plotly. All rights reserved. [cite: 232]&lt;/license&gt;
  &lt;summary&gt;Este documento apresenta a biblioteca de gráficos Python da Plotly, uma ferramenta de código aberto que permite a criação de gráficos interativos e com qualidade de publicação[cite: 11, 12]. Ele detalha uma vasta gama de tipos de gráficos, desde básicos e estatísticos até científicos, financeiros e geoespaciais. Além disso, aborda funcionalidades avançadas como integração com Jupyter, animações, controles personalizados e a criação de aplicações web analíticas com o Dash[cite: 43].&lt;/summary&gt;
  &lt;language code="en"&gt;English&lt;/language&gt;
  
  &lt;section&gt;
    &lt;title&gt;Introdução&lt;/title&gt;
    &lt;paragraph&gt;A biblioteca de gráficos Python da Plotly cria gráficos interativos e com qualidade de publicação. Exemplos de como fazer gráfico...</full_content>
      </section>
      <section name="pyvy_2x" difficulty="intermediate" source_file="pyvy_2x.txt">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x</objective>
          <objective>Aplicar customizações em pyvy_2x</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express as px
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      fig = px.line(df, x='AAPL_x', y='AAPL_y', title='Apple Share Prices over time (2014)')
      fig.show()
    &lt;/code&gt;
  &lt;/section&gt;
  
  &lt;section&gt;
    &lt;title&gt;Plot a partir de CSV com graph_objects&lt;/title&gt;
    [cite_start]&lt;paragraph&gt;É possível obter um controle mais granular sobre o gráfico utilizando `graph_objects`[cite: 86]. [cite_start]O código abaixo cria uma...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects as go
      
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      
      fig = go.Figure(go.Scatter(x = df['AAPL_x'], y = df['AAPL_y'],
                            name='Share Prices (in USD)'))
      
      fig.update_layout(title_dict=dict(text='Apple Share Prices over time (2014)'),
                        plot_bgcolor='rgb(230, 230,230)',
                        showlegend=True)
      
      fig.show()
    &lt;...</graph_objects>
        </side_by_side_comparison>
        <full_content>&lt;web_content&gt;
  &lt;title&gt;Plotly Python Graphing Library&lt;/title&gt;
  &lt;author&gt;Plotly&lt;/author&gt;
  &lt;publication_date&gt;2025-07-16&lt;/publication_date&gt;
  &lt;license&gt;Plotly.py is free and open source[cite: 12]. Copyright © 2025 Plotly. All rights reserved. [cite: 232]&lt;/license&gt;
  &lt;summary&gt;Este documento apresenta a biblioteca de gráficos Python da Plotly, uma ferramenta de código aberto que permite a criação de gráficos interativos e com qualidade de publicação[cite: 11, 12]. Ele detalha uma vasta gama de tipos de gráficos, desde básicos e estatísticos até científicos, financeiros e geoespaciais. Além disso, aborda funcionalidades avançadas como integração com Jupyter, animações, controles personalizados e a criação de aplicações web analíticas com o Dash[cite: 43].&lt;/summary&gt;
  &lt;language code="en"&gt;English&lt;/language&gt;
  
  &lt;section&gt;
    &lt;title&gt;Introdução&lt;/title&gt;
    &lt;paragraph&gt;A biblioteca de gráficos Python da Plotly cria gráficos interativos e com qualidade de publicação. Exemplos de como fazer gráfico...</full_content>
      </section>
      <section name="Annotated heatmaps" difficulty="intermediate" source_file="Annotated heatmaps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Annotated heatmaps</objective>
          <objective>Aplicar customizações em Annotated heatmaps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
z = [[.1, .3, .5, .7, .9],
     [1, .8, .6, .4, .2],
     [.2, 0, .5, .7, .9],
     [.9, .8, .4, .2, 0],
     [.3, .4, .5, .7, 1]]
fig = px.imshow(z, text_auto =True)
fig.show()
0.1 0.3 0.5 0.7 0.9
1 0.8 0.6 0.4 0.2
0.2 0 0.5 0.7 0.9
0.9 0.8 0.4 0.2 0
0.3 0.4 0.5 0.7 1
0 1 2 3 443210
00.20.40.60.81
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
press
otations16/07/2025, 06:00 Annotated heatmaps in Python
https://plotly.com/python/annotated-heatmap/ 1/9</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Annotated Heatmaps with Plotly Express
Basic Annotated Heatmap for z-annotations &gt;  &gt;
Annotated Heatmaps
Annotated Heatmaps in Python
How to make Annotated Heatmaps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/annotated-heatmap.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
New in v5.5
As of version 5.5.0 of plotly, the recommended way to  rather than the now-deprecated
create_annotated_heatmap figure factory documented below for historical reasons.
display annotated heatmaps is to use px.imshow() (/python/heatmaps/)
New in v5.5
After creating a figure with px.imshow, you can add z-annotations with .upda...</full_content>
      </section>
      <section name="Axes" difficulty="intermediate" source_file="Axes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Axes</objective>
          <objective>Aplicar customizações em Axes</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.bar(x=["a", "a", "b", 3], y = [1,2,3,4])
fig.update_xaxes (type='category' )
fig.show()
The different groups of Cartesian axes properties are
The examples on this page apply to axes of any type, but extra attributes are available for  and 
.
axes of type category (/python/categorical-axes/)
axes of type date
(/python/time-series/)
Axis titles are automatically set to the column names when .
using Plotly Express with a data frame as input (/python/px-argument...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Scatter(
    mode = "lines+markers" ,
    y = [4, 1, 3],
    x = ["December" , "January" , "February" ]))
fig.update_xaxes (
        tickangle  = 90,
        title_text  = "Month",
        title_font  = {"size": 20},
        title_standoff  = 25)
fig.update_yaxes (
        title_text  = "Temperature" ,
        title_standoff  = 25)
fig.show()
Here is an example that configures the font family, size, and color for the axis titles in a figure c...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) The axis object is 
. The axis object is 
. The axis object is 
. The axis object is 
. The axis object is 
. The axis object is .
2-D Cartesian Axis Types and Auto-Detection
'linear' as described in this page
'log' (see the )
'date' (see the )
'category' (see the )
'multicategory' (see the )
First check for multicategory, then date, then category, else default to linear (log is never automatically selected)
multicategory is just a shape test: is the array nested?
date and category: require more than twice as many distinct date or category strings as distinct numbers in order to choose that axis type.
Both of these test an evenly-spaced sample of at most 1000 values
Forcing an axis to be categorical &gt;  &gt;
Axes
Axes in Python
How to adjust axes properties in Python - axes titles, styling and coloring axes and grid lines, ticks, tick labels and more.
Plotly Studio: Transform any dataset into an interactive data application in ...</full_content>
      </section>
      <section name="Built-in continuous color scales" difficulty="intermediate" source_file="Built-in continuous color scales in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Built-in continuous color scales</objective>
          <objective>Aplicar customizações em Built-in continuous color scales</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">RdBu was included in the sequential module by mistake, even though it is a diverging color scale</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
from textwrap  import wrap
named_colorscales  = px.colors.named_colorscales ()
print("\n".join(wrap("".join('{:&lt;12}'.format(c) for c in named_colorscales ), 96)))
Built-in color scales are stored as lists of CSS colors:aggrnyl     agsunset    blackbody   bluered     blues       blugrn      bluyl       brwnyl
bugn        bupu        burg        burgyl      cividis     darkmint    electric    emrld
gnbu        greens      greys       hot         inferno     jet        ...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Using Built-In Continuous Color Scales
Discrete Color Sequences
Named Built-In Continuous Color Scales &gt;  &gt; Built-in
Continuous Color Scales
Built-in Continuous Color Scales in Python
A reference for the built-in named continuous (sequential, diverging and cyclical) color scales in Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/builtin-colorscales.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Many Plotly Express functions accept a color_continuous_scale argument and many trace types have a colorscale attribute in their schema. Plotly comes with a large
number of built-in continuous color scales, which can be referred to in...</full_content>
      </section>
      <section name="Changes in version 6" difficulty="advanced" source_file="Changes in version 6 in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Changes in version 6</objective>
          <objective>Aplicar customizações em Changes in version 6</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; Changes
in Version 6
Changes in Version 6 in Python
Guide to changes in version 6 of Plotly.py and how to migrate from version 5
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/v6-
changes.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page outlines the changes in Plotly.py version 6 and cases where you may need to update your charts or tools that you use for working with Plotly.py.
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
Widget
vertible
leoffset16/07/2025, 06:04 Changes in version 6 in Python
https://plotly.com/python/v6-migration/ 1/4

--- Página 2 ---
Jupyter Notebook Support
Change to anywidget for ...</full_content>
      </section>
      <section name="Choropleth maps" difficulty="intermediate" source_file="Choropleth maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Choropleth maps</objective>
          <objective>Aplicar customizações em Choropleth maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.choropleth (df, geojson=counties , locations ='fips', color='unemp',
                           color_continuous_scale ="Viridis" ,
                           range_color =(0, 12),
                           scope="usa",
                           labels={'unemp':'unemployment rate' }
                          )
fig.update_layout (margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
If the GeoJSON you are using either does not have an id field or you wish to use one...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Base Map Configuration
Introduction: main parameters for choropleth outline maps
1. Geometry information:
A. This can either be a supplied GeoJSON file where each feature has either an id field or some identifying value in properties; or
B. one of the built-in geometries within plotly: US states and world countries (see below)
2. A list of values indexed by feature identifier.
Choropleth Map with plotly.express
GeoJSON with feature.id &gt;  &gt; Choropleth
Maps
Choropleth Maps in Python
How to make choropleth maps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/choropleth-
maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a map com...</full_content>
      </section>
      <section name="Configuration" difficulty="intermediate" source_file="Configuration in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Configuration</objective>
          <objective>Aplicar customizações em Configuration</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
config = {
  'toImageButtonOptions' : {
    'format' : 'svg', # one of png, svg, jpeg, webp
    'filename' : 'custom_image' ,
    'height' : 500,
    'width': 700,
    'scale': 1 # Multiply title/legend/axis/canvas sizes by this factor
  }
}
fig = px.bar(x=[1, 2, 3], y=[1, 3, 1])
fig.show(config=config)
Figures can be set to download at the currently-rendered size by setting height and width to None:0.5 1 1.5 2 2.5 3 3.500.511.522.53
xy
Visible
aring
bar
ot
s to16/07...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
config = {'scrollZoom' : True}
fig.add_trace (
    go.Scatter(
        x=[1, 2, 3],
        y=[1, 3, 1]))
fig.show(config=config)
1 1.5 2 2.5 311.522.53
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
Visible
aring
bar
ot
s to16/07/2025, 06:04 Configuration in Python
https://plotly.com/python/configuration-options/ 1/14</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Configuration Options
Enabling Scroll Zoom &gt;  &gt;
Configuration
Configuration in Python
How to set the configuration options of figures using the Plotly Python graphing library.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/configuration-options.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The .show() method that you use to display your figures also accepts a config parameter.
You can set the configuration options for your figure by passing a dictionary to this parameter which contains the options you want to set.
If you don't set an option's value, it will be automatically be set to the default value for that option.
For the comp...</full_content>
      </section>
      <section name="Continuous color scales and color bars" difficulty="intermediate" source_file="Continuous color scales and color bars in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Continuous color scales and color bars</objective>
          <objective>Aplicar customizações em Continuous color scales and color bars</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", color="size",
                 title="Numeric 'size' values mean continuous color" )
fig.show()
Converting this column to strings is very straightforward:</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <practical_exercises>
          <exercise id="exercise_1" difficulty="basic">
            <title>Exercício: Criar Continuous color scales and color bars com seus dados</title>
            <description>Usando o exemplo acima, modifique o código para usar seus próprios dados</description>
            <solution_hint>Substitua o dataset pelos seus dados e ajuste as colunas x e y</solution_hint>
          </exercise>
        </practical_exercises>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Continuous vs Discrete Color
Continuous Color Concepts
color scales represent a mapping between the range 0 to 1 and some color domain within which colors are to be interpolated (unlike 
 which are never interpolated). Color scale defaults depend on the layout.colorscales attributes of the active 
, and can be explicitly specified using the color_continuous_scale argument for many  functions or
the colorscale argument in various graph_objects such as layout.coloraxis or marker.colorscale in go.Scatter traces or colorscale in go.Heatmap traces. For
example [(0,"blue"), (1,"red")] is a simple color scale that interpolated between blue and red via purple, which can also be implicitly represented as ["blue", "red"]
and happens to be one of the  and therefore referred to as "bluered" or plotly.colors.sequential.Bluered.
color ranges represent the minimum to maximum range of data to be mapped onto the 0 to 1 input range of the col...</full_content>
      </section>
      <section name="Creating and updating figures" difficulty="intermediate" source_file="Creating and updating figures in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Creating and updating figures</objective>
          <objective>Aplicar customizações em Creating and updating figures</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">the recommended entry-point into the plotly package is the ,
which consists of Python functions which return fully-populated plotly</concept>
          <concept id="concept_2">When you see keyword arguments with underscores passed to a graph object constructor or method, it is almost always safe to assume that it is an
application of magic underscore notation</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(
    data=[go.Bar(x=[1, 2, 3], y=[1, 3, 2])],
    layout=go.Layout(
        title=go.layout.Title(text="A Figure Specified By A Graph Object" )
    )
)
fig.show()
You can also create a graph object figure from a dictionary representation by passing the dictionary to the go.Figure constructor.0.5 1 1.5 2 2.5 3 3.500.511.522.53A Figure Specified By A Graph Object
naries
Using16/07/2025, 06:03 Creating and updating figures in Python
https://plotly....</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Figures As Dictionaries &gt;  &gt;
Creating and Updating Figures
Creating and Updating Figures in Python
Creating and Updating Figures with Plotly's Python graphing library
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/creating-
and-updating-figures.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The plotly Python package exists to create, manipulate and  graphical figures (i.e. charts, plots, maps and diagrams) represented by 
. The rendering process uses the  under the
hood although Python developers using this module very rarely need to interact with the Javascript library directly, if ever. Figures can be represented in Python either
...</full_content>
      </section>
      <section name="Dash Testing _ Dash for Python Documentation _ Plotly" difficulty="intermediate" source_file="Dash Testing _ Dash for Python Documentation _ Plotly.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dash Testing _ Dash for Python Documentation _ Plotly</objective>
          <objective>Aplicar customizações em Dash Testing _ Dash for Python Documentation _ Plotly</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Mozilla Firefox geckodriver  is also supported</concept>
          <concept id="concept_2">The Gecko (Marionette)  driver from Mozilla is not fully compatible with Selenium specifications</concept>
          <concept id="concept_3">If you set --remote-url, and the value is different to the default value,
http://localhost:4444/wd/hu, you don't need to include the --remote flag</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
S tar 23,446
Dash Python  &gt; Dash Testing
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. Sign up for early access
now.
 Dash Testing
dash.testing provides custom Dash pytest  fixtures and a set of testing APIs for unit and end-to-end testing.
This tutorial shows how to write and run tests for a Dash app.
Installing dash.testing
Install dash.testing with:
python -m pip install dash [testing]
In some shells (for example, Zsh), you may need to escape the opening bracket, [:
python -m pip install dash\ [testing]
Unit Tests
New in Dash 2.6
dash.testing supports unit testing of callbacks. Use callback unit tests to confirm that a callback's outputs are
as expected.
In the following example, we write two tests for our app. We have an app, app.py, that has two callbacks. The
update callback outputs to an html.Div the number of times btn-1 and btn-2 have been clicked. The
display callback uses callback_context  to determine which in...</full_content>
      </section>
      <section name="Dendrograms" difficulty="intermediate" source_file="Dendrograms in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dendrograms</objective>
          <objective>Aplicar customizações em Dendrograms</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Dendrogram
Set Color Threshold &gt;  &gt;
Dendrograms
Dendrograms in Python
How to make a dendrogram in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/dendrogram.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a diagram representing a tree. The  called create_dendrogram
performs  on data and represents the resulting tree. Values on the tree depth axis
correspond to distances between clusters.
dendrogram (https://en.wikipedia.org/wiki/Dendrogram)
figure factory (/python/figure-factories/)
hierarchical clustering (https://en.wikipedia.org/wiki/Hierarchical_clustering)
Dendrogram plots are commonly used in ...</full_content>
      </section>
      <section name="Discrete colors" difficulty="intermediate" source_file="Discrete colors in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Discrete colors</objective>
          <objective>Aplicar customizações em Discrete colors</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", color="smoker" ,
                 title="String 'smoker' values mean discrete colors" )
fig.show()
The size column, however, contains numbers:</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside JupyterN
NNE
NE
ENE
E
ESE
SE
SSE
SSSWSWWSWWWNWNWNNW
0246810strength
0-1
1-2
2-3
3-4
4-4
4-5
5-6
6+Part of a continuous color scale used as a discrete ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Discrete vs Continuous Color
Discrete Color Concepts
color sequences are lists of colors to be mapped onto discrete data values. No interpolation occurs when using color sequences, unlike with 
, and each color is used as-is. Color sequence defaults depend on the layout.colorway attribute of the active 
, and can be explicitly specified using the color_discrete_sequence argument for many  functions.
legends are visible representations of the mapping between colors and data values. Legend markers also change shape when used with various kinds of
traces, such as symbols or lines for scatter-like traces.  under the layout.legend attribute. Legends are the discrete
equivalent of 
Discrete Color with Plotly Express &gt;  &gt;
Discrete Colors
Discrete Colors in Python
How to use and configure discrete color sequences, also known as categorical or qualitative color scales.
Plotly Studio: Transform any dataset into an interactive data app...</full_content>
      </section>
      <section name="Displaying figures" difficulty="intermediate" source_file="Displaying figures in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Displaying figures</objective>
          <objective>Aplicar customizações em Displaying figures</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">The renderers framework is a generalization of the plotly</concept>
          <concept id="concept_2">Default renderers persist for the duration of a single session, but they do not persist across sessions</concept>
          <concept id="concept_3">Adding the plotly</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Displaying Figures
1. Using the renderers framework in the context of a script or notebook (the main topic of this page)
2. Using  in a web app context
3. Using a  in an 
4. By  and loading that file in a browser immediately or later
5. By  such as PNG, JPEG, SVG, PDF or EPS and loading the
resulting file in any viewer
Displaying Figures Using The renderers Framework &gt;  &gt;
Displaying Figures
Displaying Figures in Python
Displaying Figures using Plotly's Python graphing library
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/renderers.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly's Python graphing library, plotly.py, gives you...</full_content>
      </section>
      <section name="Distplots" difficulty="intermediate" source_file="Distplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Distplots</objective>
          <objective>Aplicar customizações em Distplots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.histogram (df, x="total_bill" , y="tip", color="sex", marginal ="rug",
                   hover_data =df.columns)
fig.show()
10 20 30 40 50020406080sex
Female
Male
total_billsum of tip
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ns with
ns in
ns with
Sizes16/07/2025, 06:00 Distplots in Python
https://plotly.com/python/distplot/ 1/14</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
00.10.20.30.40.50.6
−3 −2 −1 0 1 2 3 42013
2012
ns with
ns in
ns with
Sizes16/07/2025, 06:00 Distplots in Python
https://plotly.com/python/dis...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Combined statistical representations with px.histogram &gt;  &gt;
Distplots
Distplots in Python
How to make interactive Distplots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/distplot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Several representations of statistical distributions are available in plotly, such as , 
,  (see ). It is also
possible to combine several representations in the same plot.
histograms (https://plotly.com/python/histograms/)
violin plots
(https://plotly.com/python/violin/)
box plots (https://plotly.com/python/box-plots/)
the complete list here (https://plotly.com/python/statistical-...</full_content>
      </section>
      <section name="Figure factories" difficulty="advanced" source_file="Figure factories in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Figure factories</objective>
          <objective>Aplicar customizações em Figure factories</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)plotly.figure_factory
, deprecated by 
, deprecated by regular 
, mostly deprecated by  except for KDE plots, which px.histogram doesn't support yet
, deprecated by 
Reference &gt;  &gt;
Figure Factories
Figure Factories in Python
Figure Factories are dedicated functions for creating very specific types of plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/figure-
factories.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The plotly.figure_factory module contains dedicated functions for creating very specific types of plots that were at the time of their creation difficult to create with
 and prior to the existence of . As new functional...</full_content>
      </section>
      <section name="Figure factory tables" difficulty="intermediate" source_file="Figure factory tables in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Figure factory tables</objective>
          <objective>Aplicar customizações em Figure factory tables</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Table
Add Links &gt;  &gt; Figure
Factory Tables
Figure Factory Tables in Python
How to make tables in Python with Plotly's Figure Factory.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/figure-
factory-table.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Tables can be created using a , or by using a  as detailed in this page.
table trace type (/python/table/)
figure factory (/python/figure-factories/)
import plotly.figure_factory  as ff
data_matrix  = [['Country' , 'Year', 'Population' ],
               ['United States' , 2000, 282200000 ],
               ['Canada' , 2000, 27790000 ],
               ['United States' , 2005, 295500000 ],
...</full_content>
      </section>
      <section name="Formatting ticks" difficulty="intermediate" source_file="Formatting ticks in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Formatting ticks</objective>
          <objective>Aplicar customizações em Formatting ticks</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Tickmode - Linear
Tickmode - Array &gt;  &gt;
Formatting Ticks
Formatting Ticks in Python
How to format axes ticks in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/tick-
formatting.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
If "linear", the placement of the ticks is determined by a starting position tick0 and a tick step dtick
import plotly.graph_objects  as go
fig = go.Figure(go.Scatter(
    x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
    y = [28.8, 28.5, 37, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9]
))
fig.update_layout (
    xaxis = dict(
        tickmode  = 'linear' ,
        tick0 = 0.5,
        ...</full_content>
      </section>
      <section name="Fundamentals" difficulty="intermediate" source_file="Fundamentals in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Fundamentals</objective>
          <objective>Aplicar customizações em Fundamentals</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Plotly Python Open Source Graphing Library Fundamentals
Plotly's Python graphing library makes interactive, publication-quality graphs online. Tutorials and tips about fundamental features of Plotly's python API.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/figure-
structure/)
The Figure Data
Structure
(/python/creating-and-
updating-figures/)
Creating and Updating
Figures
(/python/renderers/)
Displaying Figures
(/python/plotly-express/)
Plotly Express
(https://dash.plotly.com/)
Analytical Apps with
Dash
(/python/static-image-
export/)
Static Image Export
(/python/templates/)
Theming and templates
(/python/v6-migration/)
Changes in Version 6
(/python/orca-
managem...</full_content>
      </section>
      <section name="Gantt charts" difficulty="advanced" source_file="Gantt charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Gantt charts</objective>
          <objective>Aplicar customizações em Gantt charts</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">When setting color to the same value as y, autorange should not be set to reverse, so as to list the value of the Y axis in the same order as the legend entries</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside JupyterDec 2008 Jan 2009 Feb 2009 Mar 2009 Apr 2009 May 2009 Jun 2009Job AJob BJob C1w1m6mYTD1yall
020406080100Gantt Chart
16/07/2025, 06:00 Gantt cha...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Gantt Charts and Timelines with plotly.express &gt;  &gt; Gantt
Charts
Gantt Charts in Python
How to make Gantt Charts in Python with Plotly. Gantt Charts use horizontal bars to represent the start and end times of tasks.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/gantt.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a type of bar chart that illustrates a project schedule. The chart lists the tasks to be performed on the
vertical axis, and time intervals on the horizontal axis. The width of the horizontal bars in the graph shows the duration of each activity.
Gantt chart (https://en.wikipedia.org/wiki/Gantt_chart)
 is the easy-to-use, ...</full_content>
      </section>
      <section name="Graph objects" difficulty="intermediate" source_file="Graph objects in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Graph objects</objective>
          <objective>Aplicar customizações em Graph objects</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">the functions in , which is the recommended entry-point into the plotly library, are all built on top of graph
objects, and all return instances of plotly</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.bar(df, x="Fruit", y="Number Eaten" , color="Contestant" , barmode="group")
fig.show()
# Graph Objects</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
for contestant , group in df.groupby("Contestant" ):
    fig.add_trace (go.Bar(x=group["Fruit"], y=group["Number Eaten" ], name=contestant ,
      hovertemplate ="Contestant= %s&lt;br&gt;Fruit= %%{x}&lt;br&gt;Number Eaten= %%{y}&lt;extra&gt;&lt;/extra&gt;" % contestant ))
fig.update_layout (legend_title_text  = "Contestant" )
fig.update_xaxes (title_text ="Fruit")
fig.update_yaxes (title_text ="Number Eaten" )
fig.show()
naries
y
y16/07/2025, 06:09 Graph objects in P...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt;
Graph Objects
Graph Objects in Python
Python classes that represent parts of a figure.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/graph-
objects.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
naries
y
y16/07/2025, 06:09 Graph objects in Python
https://plotly.com/python/graph-objects/ 1/6

--- Página 2 ---
What Are Graph Objects?
Graph Objects Compared to Dictionaries
1. Graph objects provide precise data validation. If you provide an invalid property name or an invalid property value as the key to a graph object, an exception
will be raised with a helpful error me...</full_content>
      </section>
      <section name="Heatmaps" difficulty="intermediate" source_file="Heatmaps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Heatmaps</objective>
          <objective>Aplicar customizações em Heatmaps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.imshow([[1, 20, 30],
                 [20, 1, 60],
                 [30, 60, 1]])
fig.show()</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=go.Heatmap(
                    z=[[1, 20, 30],
                      [20, 1, 60],
                      [30, 60, 1]]))
fig.show()
Jan 2013Apr 2013Jul 2013Oct 2013Jan 2014Apr 2014Jul 2014Oct 2014203040506070
2402602803004xDaily Air temperature at
sigma level 995 [degK]
timelat
−0.5 0 0.5 1 1.5 2 2.5−0.500.511.522.5
102030405060
a
show
ects
els16/07/2025, 06:00 Heatmaps in Python
https://plotly.com/python/heatmaps/ 7/13</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)1. Matrix Heatmaps accept a 2-dimensional matrix or array of data and visualizes it directly. This type of heatmap is the subject of this page.
2. Density Heatmaps accept data as a list and visualizes aggregated quantities like counts or sums of this data. Please refer to the 
 for this kind of figure.
Heatmaps with Plotly Express &gt;  &gt;
Heatmaps
Heatmaps in Python
How to make Heatmaps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/heatmaps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The term "heatmap" usually refers to a Cartesian plot with data visualized as colored rectangular tiles, which is the subje...</full_content>
      </section>
      <section name="Hexbin mapbox" difficulty="intermediate" source_file="Hexbin mapbox in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Hexbin mapbox</objective>
          <objective>Aplicar customizações em Hexbin mapbox</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
px.set_mapbox_access_token (open(".mapbox_token" ).read())
df = px.data.carshare ()
fig = ff.create_hexbin_mapbox (
    data_frame =df, lat="centroid_lat" , lon="centroid_lon" ,
    nx_hexagon =10, opacity=0.9, labels={"color": "Point Count" },
)
fig.update_layout (margin=dict(b=0, t=0, l=0, r=0))
fig.show()
05101520Point Count
(https://www.mapbox.com/)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
and
in
n16/07/2025, 05:59 Hexbin mapbox in Python
https...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Count Hexbin
Count Hexbin with Minimum Count and Opacity &gt;  &gt; Hexbin
Mapbox
Hexbin Mapbox in Python
How to make a map with Hexagonal Binning of data in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/hexbin-
mapbox.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page details the use of a . For more examples with Choropleth maps, see .
figure factory (/python/figure-factories/)
this page (/python/choropleth-maps/)
In order to use mapbox styles that require a mapbox token, set the token with plotly.express. You can also use styles that do not require a mapbox token. See more
information on .
this page (/python/mapbox-layers/)
i...</full_content>
      </section>
      <section name="Horizontal and vertical lines and rectangles" difficulty="intermediate" source_file="Horizontal and vertical lines and rectangles in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Horizontal and vertical lines and rectangles</objective>
          <objective>Aplicar customizações em Horizontal and vertical lines and rectangles</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="petal_length" , y="petal_width" )
fig.add_hline (y=0.9)
fig.add_vrect (x0=0.9, x1=2)
fig.show()
These shapes can be styled by passing the same arguments as are accepted by add_shape:1 2 3 4 5 6 700.511.522.5
petal_lengthpetal_width
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ectangles
h16/07/2025, 06:11 Horizontal and vertical lines and rectangles in Python
https://plotly.com/python/horizontal-vertical-shape...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Horizontal and Vertical Lines and Rectangles &gt;  &gt; Horizontal
and Vertical Lines and Rectangles
Horizontal and Vertical Lines and Rectangles in Python
How to add annotated horizontal and vertical lines in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/horizontal-vertical-shapes.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
introduced in plotly 4.12
Horizontal and vertical lines and rectangles that span an entire plot can be added via the add_hline, add_vline, add_hrect, and add_vrect methods of
plotly.graph_objects.Figure. Shapes added with these methods are added as  (as shown when doing print(fig), for example). These
sha...</full_content>
      </section>
      <section name="Hover text and formatting" difficulty="intermediate" source_file="Hover text and formatting in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Hover text and formatting</objective>
          <objective>Aplicar customizações em Hover text and formatting</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("continent=='Oceania'" )
fig = px.line(df, x="year", y="lifeExp" , color="country" , title="layout.hovermode='closest' (the default)" )
fig.update_traces (mode="markers+lines" )
fig.show()
If layout.hovermode='x' (or 'y'), a single hover label appears per trace, for points at the same x (or y) value as the cursor. If multiple points in a given trace exist at the
same coordinate, only one will get a hover label. In the line plot below w...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Hover Labels
Hovermode closest (default mode)
Hovermode x or y &gt;  &gt; Hover
Text and Formatting
Hover Text and Formatting in Python
How to use hover text and formatting in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/hover-
text-and-formatting.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
One of the most deceptively-powerful features of interactive visualization using Plotly is the ability for the user to reveal more information about a data point by
moving their mouse cursor over the point and having a hover label appear.
There are three hover modes available in Plotly. The default setting is layout.hovermode='...</full_content>
      </section>
      <section name="Images" difficulty="intermediate" source_file="Images in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Images</objective>
          <objective>Aplicar customizações em Images</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_length" , y="sepal_width" , facet_col ="species" )
# sources of images
sources = [
    "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fe/Iris_setosa_var._setosa_ %282595031014% 29.jpg/360px-Iris_setosa_var._setosa_ %282595031
014%29.jpg",
    "https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Iris_versicolor_quebec_1.jpg/320px-Iris_versicolor_quebec_1.jpg" ,
    "https://upload.wikimedia.org/wikipedia...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
# Create figure
fig = go.Figure()
# Add trace
fig.add_trace (
    go.Scatter(x=[0, 0.5, 1, 2, 2.2], y=[1.23, 2.5, 0.42, 3, 1])
)
# Add images
fig.add_layout_image (
        dict(
            source="https://images.plot.ly/language-icons/api-home/python-logo.png" ,
            xref="x",
            yref="y",
            x=0,
            y=3,
            sizex=2,
            sizey=2,
            sizing="stretch" ,
            opacity=0.5,
            layer="below...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Add a Background Image &gt;  &gt;
Images
Images in Python
How to add images to charts as background images or logos.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/images.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
In this page we explain how to add static, non-interactive images as background, logo or annotation images to a figure. For exploring image data in interactive charts,
see the .
tutorial on displaying image data (/python/imshow)
A background image can be added to the layout of a figure with fig.add_layout_image or by setting the images parameter of go.Layout. The source attribute of a
go.layout.Image can be the URL of an im...</full_content>
      </section>
      <section name="Installation _ Dash for Python Documentation _ Plotly" difficulty="advanced" source_file="Installation _ Dash for Python Documentation _ Plotly.pdf">
        <section_objectives>
          <objective>Dominar a criação de Installation _ Dash for Python Documentation _ Plotly</objective>
          <objective>Aplicar customizações em Installation _ Dash for Python Documentation _ Plotly</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
S tar 23,448
Dash Python  &gt; Installation
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. Sign up for early access
now.
 Dash Installation
In your terminal, install dash.
pip install dash
This also brings along the plotly graphing library. This library is under active development, so install and
upgrade frequently.
We also recommend installing Pandas , which is required by Plotly Express  and used in many of our examples.
pip install pandas
With Dash installed, you can run the examples in the documentation in an app.py file with python app.py, or
in a Jupyter Notebook.
These docs are running dash version 3.1.1.
Sign up for Dash Club → Two free cheat sheets  plus updates from Chris Parmer and Adam Schroeder delivered to
your inbox every two months. Includes tips and tricks, community apps, and deep dives into the Dash architecture.
Join now.
Ready? Now, let's see an example of a minimal Dash app !
Write, deploy, and scale Das...</full_content>
      </section>
      <section name="Interactive html export" difficulty="intermediate" source_file="Interactive html export in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Interactive html export</objective>
          <objective>Aplicar customizações em Interactive html export</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.scatter(x=range(10), y=range(10))
fig.write_html ("path/to/file.html" )
By default, the resulting HTML file is a fully self-contained HTML file which can be uploaded to a web server or shared via email or other file-sharing mechanisms. The
downside to this approach is that the file is very large (5Mb+) because it contains an inlined copy of the Plotly.js library required to make the figure interactive. This
can be controlled via the include_plotlyjs argument...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
help(go.Figure.write_html )
 is an open-source framework for building analytical applications, with no Javascript required, and it is tightly integrated with the Plotly
graphing library.
Dash (https://dash.plot.ly/)
Learn about how to install Dash at .
https://dash.plot.ly/installation (https://dash.plot.ly/installation)
Everywhere in this page that you see fig.show(), you can display the same figure in a Dash application by passing it to the figure argument of...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Interactive vs Static Export
Saving to an HTML file
Controlling the size of the HTML file
Inserting Plotly Output into HTML using a Jinja2 Template &gt;  &gt;
Interactive HTML Export
Interactive HTML Export in Python
Plotly allows you to save interactive HTML versions of your figures to your local disk.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/interactive-html-export.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly figures are interactive when viewed in a web browser: you can hover over data points, pan and zoom axes, and show and hide traces by clicking or double-
clicking on the legend. You can export figures either to  or y...</full_content>
      </section>
      <section name="Introspecting figures" difficulty="intermediate" source_file="Introspecting figures in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Introspecting figures</objective>
          <objective>Aplicar customizações em Introspecting figures</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.scatter(x=[10, 20], y=[20, 10], height=400, width=400)
fig.show()
print(fig)
We can learn more about the attributes Plotly Express has set for us with the Python help() function:
help(fig.data[0].__class__ .mode)
new in 4.10
The .full_figure_for_development() method provides Python-level access to the default values computed by Plotly.js. This method requires 
, which is easy to install and also used for .
the Kaleido package
(/python/static-image-export/)
s...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(
    data=[go.Scatter(
        mode="markers+text" ,
        x=[10,20],
        y=[20, 10],
        text=["Point A" , "Point B" ]
    )],
    layout=dict(height=400, width=400, template ="none")
)
fig.show()
Let's print this figure to see the very small JSON object that is passed to Plotly.js as input:
print(fig)
Now let's look at the "full" figure after Plotly.js has computed the default values for every necessary attribute.
Heads-up: the full ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)The Figure Lifecycle
Introspecting Plotly Express Figures &gt;  &gt;
Introspecting Figures
Introspecting Figures in Python
How to dig into and learn more about the figure data structure.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/figure-
introspection.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
As explained in the , when building a figure object with Plotly.py, it is not necessary to populate every
possible attribute. At render-time, figure objects (whether generated via  or ) are
passed from Plotly.py to , which is the Javascript library responsible for turning JSON descriptions of figures into graphical representations.
Figure Da...</full_content>
      </section>
      <section name="Ipython vs python" difficulty="advanced" source_file="Ipython vs python in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Ipython vs python</objective>
          <objective>Aplicar customizações em Ipython vs python</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)What is the difference between IPython and Python?
Jupyter Notebook &gt;  &gt;
IPython vs Python
IPython vs Python in Python
Discussion of key differences between IPython and Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/ipython-
vs-python.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
While these two names are quite similar, they refer to entirely different things.
 is a general-purpose programming language. It was created in the late 1980s by Guido van Rossum. It is now one of the most
popular languages in the world. It is routinely used by system administrators and web developers. Also, many scientists are using Python thanks t...</full_content>
      </section>
      <section name="Legends" difficulty="intermediate" source_file="Legends in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Legends</objective>
          <objective>Aplicar customizações em Legends</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", color="sex", symbol="smoker" , facet_col ="time",
          labels={"sex": "Gender" , "smoker" : "Smokes" })
fig.show()
By default, Plotly Express lays out legend items in the order in which values appear in the underlying data. Every Plotly Express function also includes a
category_orders keyword argument which can be used to control , but beyond that can also
control the order in which legend items ...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
fig.add_trace (go.Bar(name="first", x=["a", "b"], y=[1,2]))
fig.add_trace (go.Bar(name="second" , x=["a", "b"], y=[2,1]))
fig.add_trace (go.Bar(name="third", x=["a", "b"], y=[1,2]))
fig.add_trace (go.Bar(name="fourth" , x=["a", "b"], y=[2,1]))
fig.show()
New in 5.16
If you have shapes that are configured to appear in a legend, these are displayed after all traces:a b00.511.52 first
second
third
fourth
s
(2D and16/07/2025, 06:05 Legends in Pyth...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Trace Types, Legends and Color Bars
Legends with Plotly Express &gt;  &gt;
Legends
Legends in Python
How to configure and style the legend in Plotly with Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/legend.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 of most types and shapes can be optionally associated with a single legend item in the . Whether or not a
given trace or shape appears in the legend is controlled via the showlegend attribute. Traces which are their own subplots (see above) do not support this, with the
exception of traces of type pie and funnelarea for which every distinct color represented in the trace gets a ...</full_content>
      </section>
      <section name="Multiple axes" difficulty="intermediate" source_file="Multiple axes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Multiple axes</objective>
          <objective>Aplicar customizações em Multiple axes</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">At this time, Plotly Express does not support multiple Y axes on a single figure</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Multiple Y Axes and Plotly Express
Two Y Axes &gt;  &gt;
Multiple Axes
Multiple Axes in Python
How to make a graph with multiple axes (dual y-axis plots, plots with secondary axes) in python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/multiple-
axes.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
Note: At this time, Plotly Express does not support multiple Y axes on a single figure. To make such a figure,...</full_content>
      </section>
      <section name="Multiple chart types" difficulty="intermediate" source_file="Multiple chart types in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Multiple chart types</objective>
          <objective>Aplicar customizações em Multiple chart types</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fruits = ["apples" , "oranges" , "bananas" ]
fig = px.line(x=fruits, y=[1,3,2], color=px.Constant ("This year" ),
             labels=dict(x="Fruit", y="Amount" , color="Time Period" ))
fig.add_bar(x=fruits, y=[2,1,3], name="Last year" )
fig.show()
apples oranges bananas00.511.522.53Time Period
This year
Last year
FruitAmount
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
press
ethod of16/07/2025, 06:06 Multiple chart types in Python
https://plotly.com/p...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
from plotly import data
df = data.tips()[data.tips()["day"] == "Sun"]
mean_values_df  = df.groupby(by=["sex", "smoker" ], as_index =False).mean(
    numeric_only =True
)
smoker_mean  = mean_values_df [mean_values_df .smoker == "Yes"].sort_values (
    by="tip", ascending =False
)
non_smoker_mean  = mean_values_df [mean_values_df .smoker == "No"].sort_values (
    by="tip", ascending =False
)
smoker = df[df.smoker == "Yes"].sort_values (by="tip", ascending =Fals...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Chart Types versus Trace Types
Multiple Trace Types with Plotly Express &gt;  &gt;
Multiple Chart Types
Multiple Chart Types in Python
How to design figures with multiple chart types in python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/graphing-
multiple-chart-types.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly's  supports defining  of  (e.g. 
, , ,  etc) with attached traces of 
 (e.g. scatter, bar, choropleth, surface etc). This means that Plotly figures are not constrained to representing a fixed set of "chart
types" such as scatter plots only or bar charts only or line charts only: any subplot can contain multiple traces ...</full_content>
      </section>
      <section name="Orca management" difficulty="basic" source_file="Orca management in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Orca management</objective>
          <objective>Aplicar customizações em Orca management</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Even if you do not want to use conda to manage your Python dependencies, it is still useful as a cross platform tool for managing native libraries and command-
line utilities (e</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview
What is orca?
Installing orca
conda
$ conda install -c plotly plotly-orca==1.2.1 psutil requests
npm + pip
$ npm install -g electron@1.8.4 orca $ pip install psutil requests
Standalone Binaries + pip
$ pip install psutil requests &gt;  &gt; Orca
Management
Orca Management in Python
This section covers the low-level details of how plotly.py uses orca to perform static image generation.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/orca-
management.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Orca support in Plotly.py is deprecated and will be removed after September 2025. See the  for
details on using Kaleido for static image g...</full_content>
      </section>
      <section name="Pandas plotting backend" difficulty="advanced" source_file="Pandas plotting backend in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Pandas plotting backend</objective>
          <objective>Aplicar customizações em Pandas plotting backend</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig2 = px.bar(df)
fig2.show()
To achieve a similar effect to subplots=True, for example, the  can be used, the same was as they
work when directly calling :
Plotly Express facet_row and facet_col options (/python/facet-plots/)
Plotly Express with wide-form data (/python/wide-form/)0 1 2012345variable
a
b
indexvalue
0 1 2012345variable
a
b
indexvalue
st and16/07/2025, 06:09 Pandas plotting backend in Python
https://plotly.com/python/pandas-backend/ 3/10</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupytera b−4−3−2−1012345
variablevalue
st and16/07/2025, 06:09 Pandas plotting backend in Python
https://plotly.com/python/pandas-backend/ 9/10</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Introduction &gt;  &gt; Pandas
Plotting Backend
Pandas Plotting Backend in Python
Plotly Express can be used as a Pandas .plot() backend.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/pandas-backend.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The popular  data analysis and manipulation tool provides 
, which have historically produced matplotlib plots. Since version 0.25, Pandas has
provided a mechanism to use different backends, and as of version 4.8 of plotly, you can now use a  backend for
Pandas plotting. This means you can now produce interactive plots directly from a data frame, without even needing to import Plotly.
Pandas (ht...</full_content>
      </section>
      <section name="Plotly express arguments" difficulty="basic" source_file="Plotly express arguments in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plotly express arguments</objective>
          <objective>Aplicar customizações em Plotly express arguments</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
df.head()
By default px.data functions return a pandas DataFrame object, but you can specify an alternative dataframe type using return_type. pandas, polars, pyarrow, modin,
and cuDF are supported return types.
df = px.data.iris(return_type ='polars' )
df.head()sepal_lengthsepal_widthpetal_lengthpetal_widthspeciesspecies_id
05.1 3.5 1.4 0.2 setosa1
14.9 3.0 1.4 0.2 setosa1
24.7 3.2 1.3 0.2 setosa1
34.6 3.1 1.5 0.2 setosa1
45.0 3.6 1.4 0.2 setosa1
...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter1950 1960 1970 1980 1990 20000500100015002000250030003500continent
Asia
Europe
Africa
Americas
OceaniaEvolution of world GDP
yearlog gdp
e with...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Data for the Examples
carshare - Each row represents the availability of car-sharing services near the centroid of a zone in Montreal over a month-long period.
election - Each row represents voting results for an electoral district in the 2013 Montreal mayoral election.
iris - Each row represents a flower. &gt;  &gt; Plotly
Express Arguments
Plotly Express Arguments in Python
Input data arguments accepted by Plotly Express functions
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/px-
arguments.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly Express (px) is the high-level interface to Plotly and provides functions for generating chart...</full_content>
      </section>
      <section name="Plotly express" difficulty="intermediate" source_file="Plotly express in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plotly express</objective>
          <objective>Aplicar customizações em Plotly express</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express as px and get access to 
, plus 
 and 
. Every PX function returns a plotly.graph_objects.Figure object, so you can edit it using all the same methods like 
.
Sensible, Overridable Defaults: PX functions will infer sensible defaults wherever possible, and will always let you override them.
Flexible Input Formats: PX functions , from lists and dicts to 
 to  to .
Automatic Trace and Layout configuration: PX functions will create one  per animation frame for each unique combi...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
00.20.40.60.81
1 0.8 0.6 0.4 0.2 010.80.60.40.20
wi...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview &gt;  &gt;
Plotly Express
Plotly Express in Python
Plotly Express is a terse, consistent, high-level API for creating figures.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/plotly-
express.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The plotly.express module (usually imported as px) contains functions that can create entire figures at once, and is referred to as Plotly Express or PX. Plotly Express is
a built-in part of the plotly library, and is the recommended starting point for creating most common figures. Every Plotly Express function uses 
 internally and returns a plotly.graph_objects.Figure instance. Throughout the pl...</full_content>
      </section>
      <section name="Plotly express wide-form support" difficulty="intermediate" source_file="Plotly express wide-form support in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plotly express wide-form support</objective>
          <objective>Aplicar customizações em Plotly express wide-form support</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
long_df = px.data.medals_long ()
long_df
nationmedalcount
0South Koreagold24
1China gold10
2Canadagold9
3South Koreasilver13
4China silver15
5Canadasilver12
6South Koreabronze11
7China bronze8
8Canadabronze12
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
oriented
de- and
xt
-Default
faults16/07/2025, 06:09 Plotly express wide-form support in Python
https://plotly.com/python/wide-form/ 1/21</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter20 40 60 80 100 120 140 160experiment_1experiment_2experiment_3
valuevariable
20 40 60 80 100 120 140experiment_1experiment_2experiment_3
value...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Plotly Express works with Column-oriented, Matrix or Geographic Data
Plotly Express works with Long-, Wide-, and Mixed-Form Data
long-form data has one row per observation, and one column per variable. This is suitable for storing and displaying multivariate data i.e. with dimension
greater than 2. This format is sometimes called "tidy".
wide-form data has one row per value of one of the first variable, and one column per value of the second variable. This is suitable for storing and displaying
2-dimensional data.
mixed-form data is a hybrid of long-form and wide-form data, with one row per value of one variable, and some columns representing values of another,
and some columns representing more variables. &gt;  &gt; Plotly Express
Wide-Form Support
Plotly Express Wide-Form Support in Python
Plotly Express' 2D-Cartesian functions accept data in long-, wide-, and mixed-form.
Plotly Studio: Transform any dataset into an interactive ...</full_content>
      </section>
      <section name="Quiver plots" difficulty="intermediate" source_file="Quiver plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Quiver plots</objective>
          <objective>Aplicar customizações em Quiver plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Quiver Plot
Quiver Plot with Points &gt;  &gt;
Quiver Plots
Quiver Plots in Python
How to make a quiver plot in Python. A quiver plot displays velocity vectors a arrows.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/quiver-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Quiver plots can be made using a  as detailed in this page.
figure factory (/python/figure-factories/)
import plotly.figure_factory  as ff
import numpy as np
x,y = np.meshgrid (np.arange(0, 2, .2), np.arange(0, 2, .2))
u = np.cos(x)*y
v = np.sin(x)*y
fig = ff.create_quiver (x, y, u, v)
fig.show()
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.800.511.52
ta-
 &amp;utm_campai...</full_content>
      </section>
      <section name="Selections" difficulty="intermediate" source_file="Selections in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Selections</objective>
          <objective>Aplicar customizações em Selections</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_width" , y="sepal_length" )
fig.add_selection (x0=3.0, y0=6.5, x1=3.5, y1=5.5)
fig.show()
2 2.5 3 3.5 4 4.54.555.566.577.58
sepal_widthsepal_length
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
plots
plot16/07/2025, 06:11 Selections in Python
https://plotly.com/python/selections/ 1/11</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Adding Selections to Cartesian Subplots &gt;  &gt;
Selections
Selections in Python
How to use selections in Python. Examples of adding and styling selections.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/selections.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
New in 5.10
You can add persistent selections to a rendered figure using the Box Select and Lasso Select tools in the mode bar. To add multiple selections, select Shift when
making new selections. To clear a selection, double-click it. On a subplot you can clear all selections by double-clicking any unselected area of the subplot.
You can also add selections to a figure that dis...</full_content>
      </section>
      <section name="Setting graph size" difficulty="intermediate" source_file="Setting graph size in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Setting graph size</objective>
          <objective>Aplicar customizações em Setting graph size</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", facet_col ="sex",
                 width=800, height=400)
fig.update_layout (
    margin=dict(l=20, r=20, t=20, b=20),
    paper_bgcolor ="LightSteelBlue" ,
)
fig.show()
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to
get the code and run python app.py.
Dash (https://plotly.com/dash/)
Get started with  and learn ...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
fig.add_trace (go.Scatter(
    x=[0, 1, 2, 3, 4, 5, 6, 7, 8],
    y=[0, 1, 2, 3, 4, 5, 6, 7, 8]
))
fig.update_layout (
    autosize =False,
    width=500,
    height=500,
    margin=dict(
        l=50,
        r=50,
        b=100,
        t=100,
        pad=4
    ),
    paper_bgcolor ="LightSteelBlue" ,
)
fig.show()
Set  to True and Plotly will automatically increase the margin size to prevent
ticklabels from being cut off or overlapping with ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Adjusting Height, Width, &amp; Margins with Plotly Express
Adjusting graph size with Dash &gt;  &gt;
Setting Graph Size
Setting Graph Size in Python
How to manipulate the graph size, margins and background color.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/setting-
graph-size.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y...</full_content>
      </section>
      <section name="Setting the font, title, legend entries, and axis titles" difficulty="intermediate" source_file="Setting the font, title, legend entries, and axis titles in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Setting the font, title, legend entries, and axis titles</objective>
          <objective>Aplicar customizações em Setting the font, title, legend entries, and axis titles</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_length" , y="sepal_width" , color="species" ,
                title="Automatic Labels Based on Data Frame Column Names" )
fig.show()
4.5 5 5.5 6 6.5 7 7.5 822.533.544.5species
setosa
versicolor
virginicaAutomatic Labels Based on Data Frame Column Names
sepal_lengthsepal_width
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ress
ts
Weight16/07/2025, 06:05 Setting the font, title, legend entries, and axis ti...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Automatic Labelling with Plotly Express &gt;  &gt; Setting the Font, Title,
Legend Entries, and Axis Titles
Setting the Font, Title, Legend Entries, and Axis Titles in Python
How to set the global font, title, legend-entries, and axis-titles in python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/figure-labels.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
When using Plotly Express, your axes and legend a...</full_content>
      </section>
      <section name="Shapes" difficulty="intermediate" source_file="Shapes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Shapes</objective>
          <objective>Aplicar customizações em Shapes</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">there are 
 that are fixed to data coordinates in one axis and absolutely positioned in another</concept>
          <concept id="concept_2">there are 
 that are fixed to data coordinates in one axis and absolutely positioned in another</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.wind()
fig = px.scatter(df, y="frequency" )
fig.update_layout (xaxis=dict(domain=[0, 0.5]), yaxis=dict(domain=[0.25, 0.75]))
# Add a shape whose x and y coordinates refer to the domains of the x and y axes
fig.add_shape (type="rect",
    xref="x domain" , yref="y domain" ,
    x0=0.6, x1=0.7, y0=0.8, y1=0.9,
)
fig.show()
Note: there are 
 that are fixed to data coordinates in one axis and absolutely positioned in another.
special methods add_hline, add_v...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Scatter(x=[0,1,2,0], y=[0,2,0,0], fill="toself" ))
fig.show()
You can have more shapes either by adding  or interrupting the series with None.
more traces (https://plotly.com/python/filled-area-plots/)</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Adding Lines and Polygons to Figures
1. Trace types in the scatter family (e.g. scatter, scatter3d, scattergeo etc) can be drawn with mode="lines" and optionally support a fill="self" attribute, and so can
be used to draw open or closed shapes on figures.
2. Standalone lines, ellipses and rectangles can be added to figures using fig.add_shape(), and they can be positioned absolutely within the figure, or they can be
positioned relative to the axes of 2d cartesian subplots i.e. in data coordinates.
Traces can optionally support hover labels and can appear in legends.
Shapes can be positioned absolutely or relative to data coordinates in 2d cartesian subplots only.
Traces cannot be positioned absolutely but can be positioned relative to date coordinates in any subplot type.
Traces also support , although there is a 
.
Shape-drawing with Scatter traces &gt;  &gt;
Shapes
Shapes in Python
How to make SVG shapes in python. Examples of l...</full_content>
      </section>
      <section name="Static image export" difficulty="intermediate" source_file="Static image export in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Static image export</objective>
          <objective>Aplicar customizações em Static image export</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Figures containing WebGL traces (i</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
data_canada  = px.data.gapminder ().query("country == 'Canada'" )
fig = px.bar(data_canada , x='year', y='pop')
fig.write_image ("fig1.png" )
JPEG
...
fig.write_image ("images/fig1.jpeg" )
WebP
...
fig.write_image ("images/fig1.webp" )
SVG
...
fig.write_image ("images/fig1.svg" )
PDF
...
fig.write_image ("images/fig1.pdf" )
EPS (Kaleido&lt;1.0.0)
Kaleido versions earlier than 1.0.0 also support EPS (requires the poppler library). If using Kaleido v1 or later, we recomme...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Install Dependencies
Kaleido
Chrome
Write Image to a File &gt;  &gt; Static
Image Export
Static Image Export in Python
Plotly allows you to save static images of your plots. Save the image to your local computer, or embed it inside your Jupyter notebooks as a static image.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/static-
image-export.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page demonstrates how to export interactive Plotly figures to static image formats like PNG, JPEG, SVG, and PDF. If you want to export Plotly figures to HTML to
retain interactivity, see the 
Interactive HTML Export page (/python/interactive-html-expor...</full_content>
      </section>
      <section name="Static image generation changes in plotly.py 6.1" difficulty="intermediate" source_file="Static image generation changes in plotly.py 6.1 in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Static image generation changes in plotly.py 6.1</objective>
          <objective>Aplicar customizações em Static image generation changes in plotly.py 6.1</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; Static Image
Generation Changes in Plotly.py 6.1
Static Image Generation Changes in Plotly.py 6.1 in Python
Details about changes to static image generation in Plotly.py 6.1.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/static-
image-generation-migration.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:11 Static image generation changes in plotly.py 6.1 in Python
https://plotly.com/python/static-image-generation-changes/ 1/3

--- Página 2 ---
Static Image Generation Changes in Plotly.py 6.1
Chrome
Engine Parameter
EPS Format
Config Settings
Multiple Ima...</full_content>
      </section>
      <section name="Streamline plots" difficulty="intermediate" source_file="Streamline plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Streamline plots</objective>
          <objective>Aplicar customizações em Streamline plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)uniformly spaced ranges of x and y values (1D)
2-D velocity values u and v defined on the cross-product (np.meshgrid(x, y)) of x and y.
Basic Streamline Plot &gt;  &gt;
Streamline Plots
Streamline Plots in Python
How to make a streamline plot in Python. A streamline plot displays vector field data.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/streamline-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A Streamline plot is a representation based on a 2-D vector field interpreted as a velocity field, consisting of closed curves tangent to the velocity field. In the case of a
stationary velocity field, streamlines coincide with tra...</full_content>
      </section>
      <section name="Styling markers" difficulty="intermediate" source_file="Styling markers in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Styling markers</objective>
          <objective>Aplicar customizações em Styling markers</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_width" , y="sepal_length" , color="species" )
fig.update_traces (marker=dict(size=12,
                              line=dict(width=2,
                                        color='DarkSlateGrey' )),
                  selector =dict(mode='markers' ))
fig.show()
Here is an example that creates an empty graph object figure, and then adds two scatter traces with a marker border.2 2.5 3 3.5 4 4.54.555.566.577.58 species
...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
# Generate example data</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Add Marker Border &gt;  &gt;
Styling Markers
Styling Markers in Python
How to style markers in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/marker-style.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
In order to make markers look more distinct, you can add a border to the markers. This can be achieved by adding the line property to the marker object.
Here is an example of adding a marker border to a faceted scatter plot created using Plotly Express.
import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_width" , y="sepal_length" , color="species" )
fig.update_traces (marker=dict(size=12,
    ...</full_content>
      </section>
      <section name="Styling plotly express figures" difficulty="intermediate" source_file="Styling plotly express figures in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Styling plotly express figures</objective>
          <objective>Aplicar customizações em Styling plotly express figures</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.histogram (df, x="day", y="total_bill" , color="sex")
fig.show()
Here is the same figure, restyled by adding some extra parameters to the initial Plotly Express call:</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)2 3 45678
567sepal_length
sepal_widthsepal_length
pr...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Styling Figures made with Plotly Express
1. Control common parameters like width &amp; height, titles, labeling and colors using built-in Plotly Express function arguments
2. Updating the figure attributes using 
3. Using Plotly's  via the template argument to every Plotly Express function
4. Setting default values for common parameters using px.defaults
Built-in Plotly Express Styling Arguments
title to set the figure title
width and height to set the figure dimensions
template to  (see below for more details)
labels to override the default axis and legend labels behaviour, which is to use the data frame column name if available, and otherwise to use the label name
itself like "x", "y", "color" etc. labels accepts a dict whose keys are the label to rename and whose values are the desired labels. These labels appear in axis
labels, legend and color bar titles, and in hover labels.
category_orders to override the default category...</full_content>
      </section>
      <section name="Subplots" difficulty="intermediate" source_file="Subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Subplots</objective>
          <objective>Aplicar customizações em Subplots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Subplots and Plotly Express
Simple Subplot &gt;  &gt;
Subplots
Subplots in Python
How to make subplots in with Plotly's Python graphing library. Examples of stacked, custom-sized, gridded, and annotated subplots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/subplots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
Plotly Express does not support arbitrary subplot capabilities, instead it supports , and it a...</full_content>
      </section>
      <section name="Supported css colors" difficulty="advanced" source_file="Supported css colors in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Supported css colors</objective>
          <objective>Aplicar customizações em Supported css colors</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Supported CSS Colors &gt;  &gt;
Supported CSS Colors
Supported CSS Colors in Python
A list of supported named CSS Colors
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/supported-colors.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Many properties in Plotly.py for configuring colors support named CSS colors. For example, marker colors:
import plotly.graph_objects  as go
fig = go.Figure([
    go.Bar(
        x=['Jan', 'Feb', 'Mar', 'Apr'],
        y=[20, 14, 25, 16],
        name='Primary Product' ,
        # Named CSS color
        marker_color ='royalblue'
    )
])
fig.show()
These colors are supported in Plotly.py when a property accep...</full_content>
      </section>
      <section name="Ternary contours" difficulty="advanced" source_file="Ternary contours in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Ternary contours</objective>
          <objective>Aplicar customizações em Ternary contours</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Ternary contour plots
Simple ternary contour plot with plotly &gt;  &gt;
Ternary contours
Ternary contours in Python
How to make Ternary Contour Plots in Python with plotly
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/ternary-
contour.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A ternary contour plots represents isovalue lines of a quantity defined inside a , i.e. as a function of three
variables which sum is constant. Coordinates of the ternary plot often correspond to concentrations of three species, and the quantity represented as contours is
some property (e.g., physical, chemical, thermodynamical) varying with the composition...</full_content>
      </section>
      <section name="Text and annotations" difficulty="intermediate" source_file="Text and annotations in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Text and annotations</objective>
          <objective>Aplicar customizações em Text and annotations</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">this is the Plotly title element</concept>
          <concept id="concept_2">this is the Plotly title element</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("year==2007 and continent=='Americas'" )
fig = px.scatter(df, x="gdpPercap" , y="lifeExp" , text="country" , log_x=True, size_max =60)
fig.update_traces (textposition ='top center' )
fig.update_layout (
    height=800,
    title_text ='GDP and Life Expectancy (Americas, 2007)'
)
fig.show()
Argentina
BoliviaBrazilCanada
Chile
ColombiaCosta Rica
Cuba
Dominican RepublicEcuador
El Salvador
Guatemala
HaitiHondurasJamaicaMexico
NicaraguaPana...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
fig.add_trace (go.Scatter(
    x=[0, 1, 2],
    y=[1, 1, 1],
    mode="lines+markers+text" ,
    name="Lines, Markers and Text" ,
    text=["Text A" , "Text B" , "Text C" ],
    textposition ="top center"
))
fig.add_trace (go.Scatter(
    x=[0, 1, 2],
    y=[2, 2, 2],
    mode="markers+text" ,
    name="Markers and Text" ,
    text=["Text D" , "Text E" , "Text F" ],
    textposition ="bottom center"
))
fig.add_trace (go.Scatter(
    x=[0, 1, 2...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Adding Text to Figures
1. Certain trace types, notably in the scatter family (e.g. scatter, scatter3d, scattergeo etc), support a text attribute, and can be displayed with or without markers.
2. Standalone text annotations can be added to figures using fig.add_annotation(), with or without arrows, and they can be positioned absolutely within the
figure, or they can be positioned relative to the axes of 2d or 3d cartesian subplots i.e. in data coordinates.
Traces can optionally support hover labels and can appear in legends.
Text annotations can be positioned absolutely or relative to data coordinates in 2d/3d cartesian subplots only.
Traces cannot be positioned absolutely but can be positioned relative to data coordinates in any subplot type.
Traces also be used to , although there is a .
Text on scatter plots with Plotly Express &gt;  &gt; Text
and Annotations
Text and Annotations in Python
How to add text labels and annotations ...</full_content>
      </section>
      <section name="The figure data structure" difficulty="intermediate" source_file="The figure data structure in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de The figure data structure</objective>
          <objective>Aplicar customizações em The figure data structure</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">the recommended entry-point into the plotly package is the ,
which consists of Python functions which return fully-populated plotly</concept>
          <concept id="concept_2">layout</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.line(x=["a","b","c"], y=[1,3,2], title="sample figure" )
print(fig)
fig.show()
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to
get the code and run python app.py.
Dash (https://plotly.com/dash/)
Get started with  and learn how to effortlessly  &amp; 
 apps like this with .
the official Dash docs (https://dash.plotly.com/installation)
style (https://plotly.com/dash/design-ki...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview &gt;  &gt; The
Figure Data Structure
The Figure Data Structure in Python
The structure of a figure - data, traces and layout explained.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/figure-structure.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The plotly Python package exists to  and  graphical figures (i.e. charts, plots,
maps and diagrams) represented by data structures also referred to as figures. The rendering process uses the 
 under the hood although Python developers using this module very rarely need to interact with the Javascript library directly, if ever.
Figures can be represented in Python either as dicts or as i...</full_content>
      </section>
      <section name="Theming and templates" difficulty="intermediate" source_file="Theming and templates in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Theming and templates</objective>
          <objective>Aplicar customizações em Theming and templates</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Default themes persist for the duration of a single session, but they do not persist across sessions</concept>
          <concept id="concept_2">this example uses magic underscore notation to write go</concept>
          <concept id="concept_3">this example uses magic underscore notation to write go</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ()
df_2007 = df.query("year==2007" )
for template  in ["plotly" , "plotly_white" , "plotly_dark" , "ggplot2" , "seaborn" , "simple_white" , "none"]:
    fig = px.scatter(df_2007,
                     x="gdpPercap" , y="lifeExp" , size="pop", color="continent" ,
                     log_x=True, size_max =60,
                     template =template , title="Gapminder 2007: ' %s' theme"  % template )
    fig.show()
gures
e objects
e
in a
lates
mes...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Theming and templates
Using built-in themes
View available themes
Specifying themes in Plotly Express &gt;  &gt; Theming
and templates
Theming and templates in Python
Theming and templates with plotly with Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/templates.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The Plotly Python library comes pre-loaded with several themes that you can get started using right away, and it also provides support for creating and registering
your own themes.
Note on terminology: Theming generally refers to the process of defining default styles for visual elements. Themes in plotly are implemented using...</full_content>
      </section>
      <section name="Trisurf plots" difficulty="intermediate" source_file="Trisurf plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Trisurf plots</objective>
          <objective>Aplicar customizações em Trisurf plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Torus &gt;  &gt; Trisurf Plots
Trisurf Plots in Python
How to make tri-surf plots in Python with Plotly. Trisurfs are formed by replacing the boundaries of a compact surface by touching triangles.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/trisurf.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Trisurf plots can be made using a  as detailed in this page.
figure factory (/python/figure-factories/)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 05:59 Trisurf plots in Python
https://plotly.com/python/trisurf/ 1/5

--- Página 2 ---
Mobius Bandimport plotly.figure_factory  as ff
import numpy as np
from scipy.spatial  import Dela...</full_content>
      </section>
      <section name="Troubleshooting" difficulty="intermediate" source_file="Troubleshooting in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Troubleshooting</objective>
          <objective>Aplicar customizações em Troubleshooting</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Version Problems
Import Problems
Dash Problems &gt;  &gt;
Troubleshooting
Troubleshooting in Python
How to troubleshoot import and rendering problems in Plotly with Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/troubleshooting.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
In order to follow the examples in this documentation site, you should have the latest version of plotly installed (5.x), as detailed in the 
 guide. This documentation (under ) is compatible with plotly version 4.x but not with
version 3.x, for which the documentation is available under . In general you must also have the correct
version of the underlying Plo...</full_content>
      </section>
      <section name="Usa county choropleth maps" difficulty="intermediate" source_file="Usa county choropleth maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Usa county choropleth maps</objective>
          <objective>Aplicar customizações em Usa county choropleth maps</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">This choropleth uses a divergent categorical colorscale</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Deprecation warning
Required Packages
conda install plotly conda install geopandas
FIPS and Values &gt;  &gt; USA County
Choropleth Maps
USA County Choropleth Maps in Python
How to create colormaped representations of USA counties by FIPS values in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/county-
choropleth.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page describes a  for creating map-like figures using . This is no
longer the recommended way to make county-level choropleth maps, instead we recommend using a 
 or the alternative .
legacy "figure factory" method (/python/figure-factories/)
self-filled scatter traces (/python/shapes)
GeoJSON...</full_content>
      </section>
      <section name="Version 4 migration guide" difficulty="intermediate" source_file="Version 4 migration guide in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Version 4 migration guide</objective>
          <objective>Aplicar customizações em Version 4 migration guide</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Although it is not mentioned in the docstring for plotly</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Upgrading to Version 4
Getting Help
Online features (plotly.plotly) moved to chart-studio package
Replace plotly.api with chart_studio.api
Replace plotly.dashboard_objs with chart_studio.dashboard_objs
Replace plotly.grid_objs with chart_studio.grid_objs
Replace plotly.presentation_objs with chart_studio.presentation_objs
Replace plotly.widgets with chart_studio.widgets &gt;  &gt; Version 4
Migration Guide
Version 4 Migration Guide in Python
Migration guide for upgrading from version 3 to version 4
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/v4-
migration.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Upgrading to version 4 of plotly i...</full_content>
      </section>
      <section name="Click events" difficulty="intermediate" source_file="Click events in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Click events</objective>
          <objective>Aplicar customizações em Click events</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Callbacks will only be triggered when the trace belongs to a
instance of plotly</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Update Points Using a Click Callback &gt;  &gt; Click
Events
Click Events in Python
Click Events With FigureWidget
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Chart Events (/python/chart-events)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/click-
events.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import plotly.graph_objects  as go
import numpy as np
np.random.seed(1)
x = np.random.rand(100)
y = np.random.rand(100)
f = go.FigureWidget ([go.Scatter(x=x, y=y, mode='markers' )])
scatter = f.data[0]
colors = ['#a3a7e4' ] * 100
scatter.marker.color = colors
scatter.marker.size = [10] * 100
f.layout.hovermode  = 'closest'
# create our callback function
def update_point (trace, points, selector ):
    c = list(scatter.marker.c...</full_content>
      </section>
      <section name="Custom buttons" difficulty="intermediate" source_file="Custom buttons in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Custom buttons</objective>
          <objective>Aplicar customizações em Custom buttons</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Methods
"restyle": modify data or data attributes
"relayout": modify layout attributes
"update": modify data and layout attributes; combination of "restyle" and "relayout"
"animate": start or pause an )
Restyle Button &gt;  &gt; Custom
Buttons
Custom Buttons in Python
How to add custom buttons to update Plotly chart attributes in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Custom Controls (/python/#controls)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/custom-
buttons.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The 
determines which  will be used to modify the chart. There are 4 possible methods:
updatemenu method (https://plot.ly/python/reference/layout/updatemenus/#layout-updatemenus-items-updatemenu-buttons-...</full_content>
      </section>
      <section name="Dropdown menus" difficulty="intermediate" source_file="Dropdown menus in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dropdown menus</objective>
          <objective>Aplicar customizações em Dropdown menus</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
from jinja2 import Template</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Methods
"restyle": modify data or data attributes
"relayout": modify layout attributes
"update": modify data and layout attributes
"animate": start or pause an 
Restyle Dropdown
Update One Data Attribute &gt;  &gt; Dropdown
Menus
Dropdown Menus in Python
How to add dropdowns to update Plotly chart attributes in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Custom Controls (/python/#controls)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/dropdowns.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The  determines which 
 will be used to modify the chart. There are 4 possible methods:
updatemenu method (https://plotly.com/python/reference/layout/updatemenus/#layout-updatemenus-buttons-method)
plotly.js function
(https://p...</full_content>
      </section>
      <section name="Figurewidget docs" difficulty="basic" source_file="Figurewidget docs in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Figurewidget docs</objective>
          <objective>Aplicar customizações em Figurewidget docs</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
Chart Events (/python/chart-events)
Add Custom Interactivity with Jupyter Widgets
All Plotly charts have click, hover and zoom events which can be accessed by go.FigureWidget using Jupyter Widgets.
Jupyter Widgets Interaction
(/python/figurewidget/)
Plotly FigureWidget
Overview
(/python/jupyter-lab-
tools/)
Jupyter Lab with
FigureWidget
(/python/figurewidget-
app/)
Interactive Data
Analysis with
FigureWidget ipywidgets
(/python/click-events/)
Click Events
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly — from Dash Club
to product updates, webinars, and more!JOIN OUR MAILING LIST
SUBSCRIBE
(HTTPS://GO.PLOT.LY/SUBSCRIPTION) Products
Dash (https://plotly.com/dash/)
Consulting and Training
(https://plotly.com/consulting-and-oem/) Pricing
Enterprise Pricing (https://plotly.com/get-pricing/)
About Us
Careers (https://...</full_content>
      </section>
      <section name="Interactive data analysis with figurewidget ipywidgets" difficulty="intermediate" source_file="Interactive data analysis with figurewidget ipywidgets in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Interactive data analysis with figurewidget ipywidgets</objective>
          <objective>Aplicar customizações em Interactive data analysis with figurewidget ipywidgets</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)NYC Flights Database &gt;  &gt; Interactive Data Analysis
with FigureWidget ipywidgets
Interactive Data Analysis with FigureWidget ipywidgets in Python
Interactive Data Analysis with Plotly
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Chart Events (/python/chart-events)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/figurewidget-app.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import datetime
import numpy as np
import pandas as pd
import plotly.graph_objects  as go
from ipywidgets  import widgets
We'll be making an application to take a look at delays from all flights out of NYC in the year 2013.
df = pd.read_csv (
    'https://raw.githubusercontent.com/yankev/testing/master/datasets/nycflights.csv' )
df = df.drop(df.colu...</full_content>
      </section>
      <section name="Intro to animations" difficulty="intermediate" source_file="Intro to animations in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Intro to animations</objective>
          <objective>Aplicar customizações em Intro to animations</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">We do not recommend using: [ ]</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ()
px.scatter(df, x="gdpPercap" , y="lifeExp" , animation_frame ="year", animation_group ="country" ,
           size="pop", color="continent" , hover_name ="country" ,
           log_x=True, size_max =55, range_x=[100,100000], range_y=[25,90])
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to
get the code and run python app.py.
Dash (https://plotly.com/dash...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(
    data=[go.Scatter(x=[0, 1], y=[0, 1])],
    layout=go.Layout(
        xaxis=dict(range=[0, 5], autorange =False),
        yaxis=dict(range=[0, 5], autorange =False),
        title=dict(text="Start Title" ),
        updatemenus =[dict(
            type="buttons" ,
            buttons=[dict(label="Play",
                          method="animate" ,
                          args=[None])])]
    ),
    frames=[go.Frame(data=[go.Scatter(x=[1, 2],...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Animated figures with Plotly Express
Animated figures in Dash &gt;  &gt; Intro to
Animations
Intro to Animations in Python
An introduction to creating animations with Plotly in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Animations (/python/#animations)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/animations.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Several  functions support the creation of animated figures through the animation_frame and animation_group arguments.
Plotly Express (/python/plotly-express/)
Here is an example of an animated scatter plot created with Plotly Express. Note that you should always fix the x_range and y_range to ensure that your data remains
visible throughout the animation.
import...</full_content>
      </section>
      <section name="Jupyter lab with figurewidget" difficulty="intermediate" source_file="Jupyter lab with figurewidget in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Jupyter lab with figurewidget</objective>
          <objective>Aplicar customizações em Jupyter lab with figurewidget</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Create a New View for Output
View Live Updates &gt;  &gt; Jupyter Lab with
FigureWidget
Jupyter Lab with FigureWidget in Python
Using Plotly FigureWidgets with Jupyter Lab
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Chart Events (/python/chart-events)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/jupyter-
lab-tools.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Display a FigureWidget and then create a new window to display it in so that you can scroll through your code but still keep an eye on what you're doing.
With the output view it is easy to take full advantage of FigureWidgets new imperative-style graph updates since you can see your code and your graph at the same
time.
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_con...</full_content>
      </section>
      <section name="Layout.updatemenus" difficulty="intermediate" source_file="Layout.updatemenus in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Layout.updatemenus</objective>
          <objective>Aplicar customizações em Layout.updatemenus</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; layout.updatemenus
Python Figure Reference: layout.updatemenus
Code:fig.update_layout(updatemenus=list(...))
Type: list of dict where each dict has one or more of the keys listed below.
Parent:layout.updatemenus[]
Type: integer greater than or equal to -1
Default:0
Determines which button (by index starting from 0) is considered active.
Parent:layout.updatemenus[]
Type: color
Sets the background color of the update menu buttons.
Parent:layout.updatemenus[]
Type: color
Default:"#BEC8D9"
Sets the color of the border enclosing the update menu.
Parent:layout.updatemenus[]
Type: number greater than or equal to 0
Default:1
Sets the width (in px) of the border enclosing the update menu.
Parent:layout.updatemenus[]
Type: list of dict where each dict has one or more of the keys listed below.
Parent:layout.updatemenus[].buttons[]
Type: list
Sets the arguments values to be passed to the Plotly method set in `method` on click.
Par...</full_content>
      </section>
      <section name="Layout.xaxis" difficulty="intermediate" source_file="Layout.xaxis in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Layout.xaxis</objective>
          <objective>Aplicar customizações em Layout.xaxis</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">This only takes affect when hovermode = closest
Code:fig</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; layout.xaxis
Python Figure Reference: layout.xaxis
Code:fig.update_xaxes(...)
Type: dict containing one or more of the keys listed below.
Code:fig.update_xaxes(anchor=&lt;VALUE&gt;)
Type: enumerated , one of ( "free" | "/^x([2-9]|[1-9][0-9]+)?( domain)?$/" | "/^y([2-9]|[1-9][0-9]+)?( domain)?$/" )
If set to an opposite-letter axis id (e.g. `x2`, `y`), this axis is bound to the corresponding opposite-letter axis. If set to "free", this
axis' position is determined by `position`.
Code:fig.update_xaxes(automargin=&lt;VALUE&gt;)
Type: flaglist string. Any combination of "height", "width", "left", "right", "top", "bottom" joined with a "+" OR True or
False.
Examples:"height", "width", "height+width", "height+width+left", "True"
Determines whether long tick labels automatically grow the figure margins.
Code:fig.update_xaxes(autorange=&lt;VALUE&gt;)
Type: enumerated , one of ( True | False | "reversed" | "min reversed" | "max reversed" | "min"...</full_content>
      </section>
      <section name="Plotly figurewidget overview" difficulty="intermediate" source_file="Plotly figurewidget overview in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plotly figurewidget overview</objective>
          <objective>Aplicar customizações em Plotly figurewidget overview</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Create a Simple FigureWidget &gt;  &gt; Plotly
FigureWidget Overview
Plotly FigureWidget Overview in Python
Introduction to the new Plotly FigureWidget
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Chart Events (/python/chart-events)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/figurewidget.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Create an empty FigureWidget and then view it.
import plotly.graph_objects  as go
f = go.FigureWidget ()
f
Add traces or update the layout and then watch the output above update in real time.
f.add_scatter (y=[2, 1, 4, 3]);
f.add_bar(y=[1, 4, 3, 2]);
f.layout.title = 'Hello FigureWidget'
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
gure16/07/2025, 07:00 Plotly figurewidget ov...</full_content>
      </section>
      <section name="Range slider and selector" difficulty="intermediate" source_file="Range slider and selector in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Range slider and selector</objective>
          <objective>Aplicar customizações em Range slider and selector</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Range Slider and Range Selectors &gt;  &gt; Range Slider
and Selector
Range Slider and Selector in Python
Now you can implement range sliders and selectors in your Plotly graphs purely with python!
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Custom Controls (/python/#controls)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/range-
slider.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
tors16/07/2025, 07:04 Range slider and selector in Python
https://plotly.com/python/range-slider/ 1/8

--- Página 2 ---
import plotly.graph_objects  as go
import pandas as pd
# Load data
df = pd.read_csv (
    "https://raw.githubusercontent.com/plotly/datasets/master/finance-chart...</full_content>
      </section>
      <section name="Reference index" difficulty="intermediate" source_file="Reference index in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Reference index</objective>
          <objective>Aplicar customizações em Reference index</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; Reference Index
Python Figure Reference
The pages linked in the sidebar together form the exhaustive reference for all of the attributes in the core  that the plotly
library operates on. They are automatically-generated from the 
.
How to use these Reference pages
Figures are represented as trees with named nodes called "attributes". The root node of the tree has three top-level attributes: data, layout and frames. Attributes are
referred to in text and in this reference by their full "path" i.e. the dot-delimited concatenation of their parents. For example "layout.width" refers to the attribute whose
key is "width" inside a dict which is the value associated with a key "layout" at the root of the figure. If one of the parents is a list rather than a dict, a set of brackets is
inserted in the path when referring to the attribute in the abstract, e.g. "layout.annotations[].text". Finally, as explained below, the top-lev...</full_content>
      </section>
      <section name="Sliders" difficulty="intermediate" source_file="Sliders in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Sliders</objective>
          <objective>Aplicar customizações em Sliders</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ()
fig = px.scatter(df, x="gdpPercap" , y="lifeExp" , animation_frame ="year", animation_group ="country" ,
           size="pop", color="continent" , hover_name ="country" ,
           log_x=True, size_max =55, range_x=[100,100000], range_y=[25,90])
fig["layout" ].pop("updatemenus" ) # optional, drop animation buttons
fig.show()
Check out  for more information!
https://plotly.com/python/reference/layout/updatemenus/ (https://plotly.com/python/...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Slider Control &gt;  &gt; Sliders
Sliders in Python
How to add slider controls to your plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Custom Controls (/python/#controls)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/sliders.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Sliders can be used in Plotly to change the data displayed or style of a plot.
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 07:03 Sliders in Python
https://plotly.com/python/sliders/ 1/4

--- Página 2 ---
import plotly.graph_objects  as go
import numpy as np
# Create figure
fig = go.Figure()
# Add traces, one for each slider step
for step in np.arange(0, 5, 0.1):
    fig.add_trace (
        go.Scat...</full_content>
      </section>
      <section name="2d histogram contour" difficulty="intermediate" source_file="2d histogram contour in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 2d histogram contour</objective>
          <objective>Aplicar customizações em 2d histogram contour</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.density_contour (df, x="total_bill" , y="tip")
fig.show()
Marginal plots can be added to visualize the 1-dimensional distributions of the two variables. Here we use a marginal . Other
allowable values are violin, box and rug.
histogram (/python/histograms/)0 10 20 30 40 500246810
total_billtip
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
Contours
s
ount16/07/2025, 06:34 2d histogram contour in Python
https://plotly.com/pyth...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)2D Histogram Contours or Density Contours
Density Contours with Plotly Express &gt;  &gt; 2D
Histogram Contour
2D Histogram Contour in Python
How to make 2D Histogram Contour plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/2d-
histogram-contour.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A 2D histogram contour plot, also known as a density contour plot, is a 2-dimensional generalization of a  which resembles a 
 but is computed by grouping a set of points specified by their x and y coordinates into bins, and applying an aggregation function such as
count or sum (if z is provided) to compute the value to...</full_content>
      </section>
      <section name="2d histograms" difficulty="advanced" source_file="2d histograms in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 2d histograms</objective>
          <objective>Aplicar customizações em 2d histograms</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.density_heatmap (df, x="total_bill" , y="tip")
fig.show()
The number of bins can be controlled with nbinsx and nbinsy and the  with color_continuous_scale.
color scale (/python/colorscales/)
0 10 20 30 40 500246810
051015202530count
total_billtip
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
s
ss
ount
Options
stograms
er Chart16/07/2025, 06:32 2d histograms in Python
https://plotly.com/python/2D-Histogram/ 1/10</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)2D Histograms or Density Heatmaps
Density Heatmaps with Plotly Express &gt;  &gt; 2D
Histograms
2D Histograms in Python
How to make 2D Histograms in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/2D-
Histogram.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A 2D histogram, also known as a density heatmap, is the 2-dimensional generalization of a  which resembles a 
 but is computed by grouping a set of points specified by their x and y coordinates into bins, and applying an aggregation function such as count
or sum (if z is provided) to compute the color of the tile representing the bin. This kind of visualization ...</full_content>
      </section>
      <section name="Box plots" difficulty="intermediate" source_file="Box plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Box plots</objective>
          <objective>Aplicar customizações em Box plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.box(df, y="total_bill" )
fig.show()
If a column name is given as x argument, a box plot is drawn for each value of x.1020304050total_bill
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ting
hms
ng Data
uting
es
viation16/07/2025, 06:31 Box plots in Python
https://plotly.com/python/box-plots/ 1/21</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Box Plot with plotly.express &gt;  &gt; Box
Plots
Box Plots in Python
How to make Box Plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/box-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a statistical representation of the distribution of a variable through its quartiles. The ends of the box represent
the lower and upper quartiles, while the median (second quartile) is marked by a line inside the box. For other statistical representations of numerical data, see 
.
box plot (https://en.wikipedia.org/wiki/Box_plot)
other
statistical charts (https://plotly.com/python/statistical-charts/)
Alternativ...</full_content>
      </section>
      <section name="Continuous error bands" difficulty="advanced" source_file="Continuous error bands in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Continuous error bands</objective>
          <objective>Aplicar customizações em Continuous error bands</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Filling within a single trace &gt;  &gt;
Continuous Error Bands
Continuous Error Bands in Python
Add continuous error bands to charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/continuous-error-bars.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Continuous error bands are a graphical representation of error or uncertainty as a shaded region around a main trace, rather than as discrete whisker-like error bars.
They can be implemented in a manner similar to  using scatter traces with the fill attribute.
filled area plots (/python/filled-area-plots/)
In this example we show how to construct a trace that goes ...</full_content>
      </section>
      <section name="Distplots" difficulty="intermediate" source_file="Distplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Distplots</objective>
          <objective>Aplicar customizações em Distplots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.histogram (df, x="total_bill" , y="tip", color="sex", marginal ="rug",
                   hover_data =df.columns)
fig.show()
10 20 30 40 50020406080sex
Female
Male
total_billsum of tip
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ns with
ns in
ns with
Sizes16/07/2025, 06:32 Distplots in Python
https://plotly.com/python/distplot/ 1/14</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
00.10.20.30.40.50.6
−3 −2 −1 0 1 2 3 42013
2012
ns with
ns in
ns with
Sizes16/07/2025, 06:32 Distplots in Python
https://plotly.com/python/dis...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Combined statistical representations with px.histogram &gt;  &gt;
Distplots
Distplots in Python
How to make interactive Distplots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/distplot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Several representations of statistical distributions are available in plotly, such as , 
,  (see ). It is also
possible to combine several representations in the same plot.
histograms (https://plotly.com/python/histograms/)
violin plots
(https://plotly.com/python/violin/)
box plots (https://plotly.com/python/box-plots/)
the complete list here (https://plotly.com/python/statistical-...</full_content>
      </section>
      <section name="Empirical cumulative distribution plots" difficulty="intermediate" source_file="Empirical cumulative distribution plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Empirical cumulative distribution plots</objective>
          <objective>Aplicar customizações em Empirical cumulative distribution plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.ecdf(df, x="total_bill" )
fig.show()
Providing multiple columns leverage's Plotly Express'  to show multiple variables on the same plot.
wide-form data support (https://plotly.com/python/wide-form/)510152025303540455000.20.40.60.81
total_billprobability
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
plots16/07/2025, 06:35 Empirical cumulative distribution plots in Python
https://plotly.com/python/ecdf-plots/ 1/9</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter1020304050102030405000.20.40.60.81sex
Female
Male
total_bill total_billprobabilityday=Sun day=Sat day=Thur day=Fritime=Lunch time=Dinner
plots1...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview
Simple ECDF Plots &gt;  &gt; Empirical
Cumulative Distribution Plots
Empirical Cumulative Distribution Plots in Python
How to add empirical cumulative distribution function (ECDF) plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/ecdf-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 are a way to visualize the distribution of a variable, and
Plotly Express has a built-in function, px.ecdf() to generate such plots.  is the easy-to-use, high-level interface to Plotly, which
 and produces .
Empirical cumulative distribution function plots (https://en.wikipedia.org/wiki/Empirical_distribution_function)
Plotly Express (/...</full_content>
      </section>
      <section name="Error bars" difficulty="intermediate" source_file="Error bars in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Error bars</objective>
          <objective>Aplicar customizações em Error bars</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
df["e"] = df["sepal_width" ]/100
fig = px.scatter(df, x="sepal_width" , y="sepal_length" , color="species" ,
                 error_x="e", error_y="e")
fig.show()
2 2.5 3 3.5 4 4.54.555.566.577.58 species
setosa
versicolor
virginica
sepal_widthsepal_length
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
xpress
Value
ant16/07/2025, 06:30 Error bars in Python
https://plotly.com/python/error-bars/ 1/10</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=go.Scatter(
        x=[0, 1, 2],
        y=[6, 10, 2],
        error_y=dict(
            type='data', # value of error bar given in data coordinates
            array=[1, 2, 3],
            visible=True)
    ))
fig.show()
0 0.5 1 1.5 2024681012
xpress
Value
ant16/07/2025, 06:30 Error bars in Python
https://plotly.com/python/error-bars/ 3/10</graph_objects>
        </side_by_side_comparison>
        <practical_exercises>
          <exercise id="exercise_1" difficulty="basic">
            <title>Exercício: Criar Error bars com seus dados</title>
            <description>Usando o exemplo acima, modifique o código para usar seus próprios dados</description>
            <solution_hint>Substitua o dataset pelos seus dados e ajuste as colunas x e y</solution_hint>
          </exercise>
        </practical_exercises>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Error Bars with Plotly Express
Asymmetric Error Bars with Plotly Express &gt;  &gt;
Error Bars
Error Bars in Python
How to add error-bars to charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/error-
bars.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces . For functions representing 2D data points such as 
, ,  etc., error bars are given as a column name which is the value
of the error_x (for the error on x position) and error_y (for the error on y position).
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/...</full_content>
      </section>
      <section name="Facet and trellis plots" difficulty="intermediate" source_file="Facet and trellis plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Facet and trellis plots</objective>
          <objective>Aplicar customizações em Facet and trellis plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", color="smoker" , facet_col ="sex")
fig.show()
There is a more presentation-ready horizontal, faceted bar chart in the 
horizontal bar documentation (/python/horizontal-bar-charts/#Small-multiple-horizontal-bar-
charts-show-each-component's-size-more-clearly-than-a-stacked-bar)0 10 20 30 40 50246810
0 10 20 30 40 50smoker
No
Yes
total_bill total_billtipsex=Female sex=Male
ta-
 &amp;utm_campaign=studio_clou...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
df = df.sort_values (by="total_bill" )
model = sm.OLS(df["tip"], sm.add_constant (df["total_bill" ])).fit()
#create the trace to be added to all facets
trace = go.Scatter(x=df["total_bill" ], y=model.predict(),
                   line_color ="black", name="overall OLS" )
# give it a legend group and hide it from the legend
trace.update(legendgroup ="trendline" , showlegend =False)
# add it to all rows/cols, but not to empty subplots
fig.add_trace (trace, row="a...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Facet and Trellis Plots
Scatter Plot Column Facets
Bar Chart Row Facets &gt;  &gt; Facet and
Trellis Plots
Facet and Trellis Plots in Python
How to make Facet and Trellis Plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/facet-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Facet plots, also known as trellis plots or small multiples, are figures made up of multiple subplots which have the same set of axes, where each subplot shows a
subset of the data. While it is straightforward to use plotly's  to make such figures, it's far easier to use the built-in facet_row
and facet_col arguments in the various ...</full_content>
      </section>
      <section name="Histograms" difficulty="intermediate" source_file="Histograms in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Histograms</objective>
          <objective>Aplicar customizações em Histograms</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.histogram (df, x="total_bill" )
fig.show()
10 20 30 40 50051015202530
total_billcount
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
t values
an count16/07/2025, 06:31 Histograms in Python
https://plotly.com/python/histograms/ 1/23</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Histograms with Plotly Express &gt;  &gt;
Histograms
Histograms in Python
How to make Histograms in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/histograms.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
In statistics, a  is representation of the distribution of numerical data, where the data are binned and the count for
each bin is represented. More generally, in Plotly a histogram is an aggregated bar chart, with several possible aggregation functions (e.g. sum, average, count...)
which can be used to visualize data on categorical and date axes as well as linear axes.
histogram (https://en.wikipedia.org/wiki/H...</full_content>
      </section>
      <section name="Linear and non-linear trendlines" difficulty="intermediate" source_file="Linear and non-linear trendlines in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Linear and non-linear trendlines</objective>
          <objective>Aplicar customizações em Linear and non-linear trendlines</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", trendline ="ols")
fig.show()
Plotly Express will fit a trendline per trace, and allows you to access the underlying model parameters for all the models.10 20 30 40 50246810
total_billtip
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ress
the
ultiple
hing16/07/2025, 06:34 Linear and non-linear trendlines in Python
https://plotly.com/python/linear-fits/ 1/10</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Linear fit trendlines with Plotly Express
Fitting multiple lines and retrieving the model parameters &gt;  &gt; Linear and Non-
Linear Trendlines
Linear and Non-Linear Trendlines in Python
Add linear Ordinary Least Squares (OLS) regression trendlines or non-linear Locally Weighted Scatterplot Smoothing (LOWESS) trendlines to scatterplots in Python.
Options for moving averages (rolling means) as well as exponentially-weighted and expanding functions.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/linear-fits.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotl...</full_content>
      </section>
      <section name="Marginal distribution plots" difficulty="advanced" source_file="Marginal distribution plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Marginal distribution plots</objective>
          <objective>Aplicar customizações em Marginal distribution plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_length" , y="sepal_width" , marginal_x ="histogram" , marginal_y ="rug")
fig.show()
44.555.566.577.5822.533.544.5
sepal_lengthsepal_width
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:34 Marginal distribution plots in Python
https://plotly.com/python/marginal-plots/ 1/6</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)2040051015202530
2040 2040 2040sex
Female
Male
total...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview
Scatter Plot Marginals &gt;  &gt; Marginal
Distribution Plots
Marginal Distribution Plots in Python
How to add marginal distribution plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/marginal-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Marginal distribution plots are small subplots above or to the right of a main plot, which show the distribution of data along only one dimension. Marginal distribution
plot capabilities are built into various Plotly Express functions such as scatter and histogram.  is the easy-to-use, high-level
interface to Plotly, which  and produces .
Plotly Express (/python/plotly-express/)
...</full_content>
      </section>
      <section name="Parallel categories diagram" difficulty="intermediate" source_file="Parallel categories diagram in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Parallel categories diagram</objective>
          <objective>Aplicar customizações em Parallel categories diagram</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">In order for the callback functions to be executed the figure must be a FigureWidget, and the figure should display itself</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.parallel_categories (df)
fig.show()
Femalesex
MaleNosmoker
YesSunday
Sat
Thur
FriDinnertime
Lunch2size
3
4
1
6
5
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
h
with
with
ram
Linked16/07/2025, 06:32 Parallel categories diagram in Python
https://plotly.com/python/parallel-categories-diagram/ 1/10</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Parcats(
    dimensions =[
        {'label': 'Hair',
         'values' : ['Black', 'Black', 'Black', 'Brown', 'Brown', 'Brown', 'Red', 'Brown']},
        {'label': 'Eye',
         'values' : ['Brown', 'Brown', 'Brown', 'Brown', 'Brown', 'Blue', 'Blue', 'Blue']},
        {'label': 'Sex',
         'values' : ['Female' , 'Female' , 'Female' , 'Male', 'Female' , 'Male', 'Male', 'Male']}]
))
fig.show()
If the frequency of occurrence for each combi...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Parallel Categories Diagram
Basic Parallel Category Diagram with plotly.express &gt;  &gt;
Parallel Categories Diagram
Parallel Categories Diagram in Python
How to make parallel categories diagrams in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/parallel-
categories-diagram.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The parallel categories diagram (also known as parallel sets or alluvial diagram) is a visualization of multi-dimensional categorical data sets. Each variable in the data
set is represented by a column of rectangles, where each rectangle corresponds to a discrete value taken on by that variable. ...</full_content>
      </section>
      <section name="Scatterplot matrix" difficulty="intermediate" source_file="Scatterplot matrix in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Scatterplot matrix</objective>
          <objective>Aplicar customizações em Scatterplot matrix</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter_matrix (df)
fig.show()
Specify the columns to be represented with the dimensions argument, and set colors using a column of the dataframe:45678
234
246
012
setosaversicolorvirginica
45678123
234 246012 setosaversicolorvirginica123
sepal_lengthsepal_widthpetal_lengthpetal_width
speciesspecies_idsepal_length sepal_width petal_length petal_widthspecies
species_id
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
press
m16/0...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Scatter matrix with Plotly Express &gt;  &gt;
Scatterplot Matrix
Scatterplot Matrix in Python
How to make scatterplot matrices or sploms natively in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/splom.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A scatterplot matrix is a matrix associated to n numerical arrays (data variables), $X_1,X_2,…,X_n$ , of the same length. The cell (i,j) of such a matrix displays the scatter
plot of the variable Xi versus Xj.
Here we show the Plotly Express function px.scatter_matrix to plot the scatter matrix for the columns of the dataframe. By default, all columns are considered.
 ...</full_content>
      </section>
      <section name="Statistical charts" difficulty="basic" source_file="Statistical charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Statistical charts</objective>
          <objective>Aplicar customizações em Statistical charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Statistical charts in Dash
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to get
the code and run python app.py.
Get started with  and learn how to effortlessly  &amp; 
 apps like this with .
Python (/python)
Statistical Charts (/python/statistical-charts)Plotly Python Open Source Graphing Library Statistical Charts
Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make statistical charts such as box plots, histograms, and
distribution plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/error-bars/)
Error Bars
(/python/box-plots/)
Box Plots
(/python/histograms/)
Histograms
(/python/dis...</full_content>
      </section>
      <section name="Strip charts" difficulty="intermediate" source_file="Strip charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Strip charts</objective>
          <objective>Aplicar customizações em Strip charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.strip(df, x="total_bill" , y="day")
fig.show()
Strip charts support  and :
faceting (/python/facet-plots/)
discrete color (/python/discrete-color/)10 20 30 40 50SunSatThurFri
total_billday
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:34 Strip charts in Python
https://plotly.com/python/strip-charts/ 1/3</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter2040DinnerLunch
2040 2040 2040sex
Female
Male
total_bill total_bill total_bill total_billtimeday=Sun day=Sat day=Thur day=Fri
16/07/2025, 06:34...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Strip Charts with Plotly Express &gt;  &gt; Strip
Charts
Strip Charts in Python
Strip charts are like 1-dimensional jittered scatter plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/strip-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
The px.strip() function will make strip charts using underlying box traces with the box hidden.
See also  and .
box plots (/python/box-plots/)
violin plots (/...</full_content>
      </section>
      <section name="Styling plotly express figures" difficulty="intermediate" source_file="Styling plotly express figures in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Styling plotly express figures</objective>
          <objective>Aplicar customizações em Styling plotly express figures</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.histogram (df, x="day", y="total_bill" , color="sex")
fig.show()
Here is the same figure, restyled by adding some extra parameters to the initial Plotly Express call:</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)2 3 45678
567sepal_length
sepal_widthsepal_length
pr...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Styling Figures made with Plotly Express
1. Control common parameters like width &amp; height, titles, labeling and colors using built-in Plotly Express function arguments
2. Updating the figure attributes using 
3. Using Plotly's  via the template argument to every Plotly Express function
4. Setting default values for common parameters using px.defaults
Built-in Plotly Express Styling Arguments
title to set the figure title
width and height to set the figure dimensions
template to  (see below for more details)
labels to override the default axis and legend labels behaviour, which is to use the data frame column name if available, and otherwise to use the label name
itself like "x", "y", "color" etc. labels accepts a dict whose keys are the label to rename and whose values are the desired labels. These labels appear in axis
labels, legend and color bar titles, and in hover labels.
category_orders to override the default category...</full_content>
      </section>
      <section name="Tree-plots" difficulty="intermediate" source_file="Tree-plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Tree-plots</objective>
          <objective>Aplicar customizações em Tree-plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Set Up Tree with 
Create Plotly Traces &gt;  &gt;
Tree-plots
Tree-plots in Python
How to make interactive tree-plot in Python with Plotly. An examples of a tree-plot in Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/tree-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
igraph (http://igraph.org/python/)
Install igraph with pip install igraph.
!pip install igraph
import igraph
from igraph import Graph, EdgeSeq
nr_vertices  = 25
v_label = list(map(str, range(nr_vertices )))
G = Graph.Tree(nr_vertices , 2) # 2 stands for children number
lay = G.layout('rt')
position  = {k: lay[k] for k in range(nr_vertices )}
Y = [lay[k][1]...</full_content>
      </section>
      <section name="Violin plots" difficulty="intermediate" source_file="Violin plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Violin plots</objective>
          <objective>Aplicar customizações em Violin plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.violin(df, y="total_bill" )
fig.show()
01020304050total_bill
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ting16/07/2025, 06:34 Violin plots in Python
https://plotly.com/python/violin/ 1/12</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Violin Plot with Plotly Express
Basic Violin Plot with Plotly Express &gt;  &gt; Violin
Plots
Violin Plots in Python
How to make violin plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/violin.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a statistical representation of numerical data. It is similar to a ,
with the addition of a rotated  plot on each side.
violin plot (https://en.wikipedia.org/wiki/Violin_plot)
box plot (https://plotly.com/python/box-plots/)
kernel density (https://en.wikipedia.org/wiki/Kernel_density_estimation)
Alternatives to violin plots for visualizing distributions include , ,
...</full_content>
      </section>
      <section name="Bubble maps" difficulty="intermediate" source_file="Bubble maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Bubble maps</objective>
          <objective>Aplicar customizações em Bubble maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("year==2007" )
fig = px.scatter_geo (df, locations ="iso_alpha" , color="continent" ,
                     hover_name ="country" , size="pop",
                     projection ="natural earth" )
fig.show()
continent
Asia
Europe
Africa
Americas
Oceania
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:36 Bubble maps in Python
https://plotly.com/python/bubble-maps/ 1/6</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Base Map Configuration
Bubble map with Plotly Express &gt;  &gt; Bubble Maps
Bubble Maps in Python
How to make bubble maps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bubble-maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly figures made with px.scatter_geo, px.line_geo or px.choropleth functions or containing go.Choropleth or go.Scattergeo
 have a go.layout.Geo object which can be used to  onto
which data is plotted.
Plotly Express (/python/plotly-express/)
graph objects (/python/graph-objects/)
control the appearance of the base map (/python/map-configuration/)
 is the easy-to-use, high-level interface to Plotly, which  and
p...</full_content>
      </section>
      <section name="Choropleth maps" difficulty="intermediate" source_file="Choropleth maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Choropleth maps</objective>
          <objective>Aplicar customizações em Choropleth maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.choropleth (df, geojson=counties , locations ='fips', color='unemp',
                           color_continuous_scale ="Viridis" ,
                           range_color =(0, 12),
                           scope="usa",
                           labels={'unemp':'unemployment rate' }
                          )
fig.update_layout (margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
If the GeoJSON you are using either does not have an id field or you wish to use one...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Base Map Configuration
Introduction: main parameters for choropleth outline maps
1. Geometry information:
A. This can either be a supplied GeoJSON file where each feature has either an id field or some identifying value in properties; or
B. one of the built-in geometries within plotly: US states and world countries (see below)
2. A list of values indexed by feature identifier.
Choropleth Map with plotly.express
GeoJSON with feature.id &gt;  &gt; Choropleth
Maps
Choropleth Maps in Python
How to make choropleth maps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/choropleth-
maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a map com...</full_content>
      </section>
      <section name="Density heatmap" difficulty="intermediate" source_file="Density heatmap in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Density heatmap</objective>
          <objective>Aplicar customizações em Density heatmap</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.density_map (df, lat='Latitude' , lon='Longitude' , z='Magnitude' , radius=10,
                        center=dict(lat=0, lon=180), zoom=0,
                        map_style ="open-street-map" )
fig.show()
If Plotly Express does not provide a good starting point, it is also possible to use 
.
the more generic go.Densitymap class from plotly.graph_objects (/python/graph-
objects/)
©  contributors
OpenStreetMap (https://www.openstreetmap.org/copyright)5.566.57...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Densitymap (lat=quakes.Latitude , lon=quakes.Longitude , z=quakes.Magnitude ,
                                 radius=10))
fig.update_layout (map_style ="open-street-map" , map_center_lon =180)
fig.update_layout (margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
Mapbox traces are deprecated and may be removed in a future version of Plotly.py.
The earlier examples using px.density_map and go.Densitymap use  for rendering. These traces were introduc...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Density map with plotly.express
Density map with plotly.graph_objects &gt;  &gt; Density
Heatmap
Density Heatmap in Python
How to make a density heatmap in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/density-
heatmaps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
With px.density_map, each row of the DataFrame is represented as a point smoothed with a given radius of influence.
import pandas as pd
df = pd.re...</full_content>
      </section>
      <section name="Filled area on tile maps" difficulty="intermediate" source_file="Filled area on tile maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Filled area on tile maps</objective>
          <objective>Aplicar customizações em Filled area on tile maps</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Using a  trace and setting the fill attribute to 'toself'
Using a map layout (i.e. by minimally using an empty  trace) and adding a GeoJSON layer
Using the  trace type
Filled Scattermap Trace &gt;  &gt; Filled Area on Tile
Maps
Filled Area on Tile Maps in Python
How to make an area on tile-based maps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/filled-area-tile-
maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
There are three different ways to show a filled area on a tile-based map:
Scattermap (https://plotly.com/python/reference/scattermap/)
Scattermap (https://plotly.com/python/reference/scattermap/)
Choroplethmap (https://plotly.c...</full_content>
      </section>
      <section name="Hexbin mapbox" difficulty="intermediate" source_file="Hexbin mapbox in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Hexbin mapbox</objective>
          <objective>Aplicar customizações em Hexbin mapbox</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
px.set_mapbox_access_token (open(".mapbox_token" ).read())
df = px.data.carshare ()
fig = ff.create_hexbin_mapbox (
    data_frame =df, lat="centroid_lat" , lon="centroid_lon" ,
    nx_hexagon =10, opacity=0.9, labels={"color": "Point Count" },
)
fig.update_layout (margin=dict(b=0, t=0, l=0, r=0))
fig.show()
05101520Point Count
(https://www.mapbox.com/)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
and
in
n16/07/2025, 06:38 Hexbin mapbox in Python
https...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Count Hexbin
Count Hexbin with Minimum Count and Opacity &gt;  &gt; Hexbin
Mapbox
Hexbin Mapbox in Python
How to make a map with Hexagonal Binning of data in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/hexbin-
mapbox.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page details the use of a . For more examples with Choropleth maps, see .
figure factory (/python/figure-factories/)
this page (/python/choropleth-maps/)
In order to use mapbox styles that require a mapbox token, set the token with plotly.express. You can also use styles that do not require a mapbox token. See more
information on .
this page (/python/mapbox-layers/)
i...</full_content>
      </section>
      <section name="Lines on maps" difficulty="intermediate" source_file="Lines on maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Lines on maps</objective>
          <objective>Aplicar customizações em Lines on maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("year == 2007" )
fig = px.line_geo (df, locations ="iso_alpha" ,
                  color="continent" , # "continent" is one of the columns of gapminder
                  projection ="orthographic" )
fig.show()
Given a GeoPandas geo-data frame with linestring or multilinestring features, one can extra point data and use px.line_geo().continent
Asia
Europe
Africa
Americas
Oceania
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Base Map Configuration
Lines on Maps with Plotly Express
Lines on Maps from GeoPandas &gt;  &gt; Lines on Maps
Lines on Maps in Python
How to draw lines, great circles, and contours on maps in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/lines-on-maps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Below we show how to create geographical line plots using either Plotly Express with px.line_geo function or the lower-level go.Scattergeo object.
Plotly figures made with px.scatter_geo, px.line_geo or px.choropleth functions or containing go.Choropleth or go.Scattergeo
 have a go.layout.Geo object which can be used to  onto
which data is plotted.
Plotly Ex...</full_content>
      </section>
      <section name="Map configuration and styling on geo maps" difficulty="intermediate" source_file="Map configuration and styling on geo maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Map configuration and styling on geo maps</objective>
          <objective>Aplicar customizações em Map configuration and styling on geo maps</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Plotly Express cannot create empty figures, so the examples below mostly create an "empty" map using fig = go</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.line_geo (lat=[0,15,20,35], lon=[5,10,25,30])
fig.update_geos (fitbounds ="locations" )
fig.update_layout (height=300, margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
In addition, the named "scope" of a map defines a sub-set of the earth's surface to draw. Each scope has a default projection type, center and roll, as well as bounds, and
certain scopes contain country sub-unit cultural layers certain resolutions, such as scope="north america" at resolution=50 wh...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Scattergeo ())
fig.update_layout (height=300, margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ng
ub-Units
Grid16/07/2025, 06:37 Map configuration and styling on geo maps in Python
https://plotly.com/python/map-configuration/ 1/7</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Tile Maps vs Outline Maps
Outline-based maps
Physical Base Maps &gt;  &gt; Map Configuration and
Styling on Geo Maps
Map Configuration and Styling on Geo Maps in Python
How to configure and style base maps for outline-based Geo Maps.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/map-
configuration.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly supports two different kinds of maps:
Tile-based maps (https://en.wikipedia.org/wiki/Tiled_web_map)
If your figure is created with a px.scatter_map, px.scatter_mapbox, px.line_map, px.line_mapbox, px.choropleth_map, px.choropleth_mapbox, px.density_map, or
px.density_mapbox function or otherwise contains one or mo...</full_content>
      </section>
      <section name="Maplibre migration" difficulty="intermediate" source_file="Maplibre migration in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Maplibre migration</objective>
          <objective>Aplicar customizações em Maplibre migration</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; MapLibre
Migration
MapLibre Migration in Python
Migrating from Mapbox traces to MapLibre traces.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/migrate-to-
maplibre.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
apLibre16/07/2025, 06:35 Maplibre migration in Python
https://plotly.com/python/mapbox-to-maplibre/ 1/7

--- Página 2 ---
Migrating from Mapbox traces to MapLibre traces
px.scatter_map
px.line_map
px.choropleth_map
px.density_map
go.Choroplethmap
go.Scattermap
go.Densitymap
1. Change trace names from *mapbox to *map. For any existing trace name ending in *mapbox, ensure you've remov...</full_content>
      </section>
      <section name="Maps" difficulty="intermediate" source_file="Maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Maps</objective>
          <objective>Aplicar customizações em Maps</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Maps in Dash
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to get
the code and run python app.py.
Get started with  and learn how to effortlessly  &amp; 
 apps like this with .
Python (/python)
Maps (/python/maps)Plotly Python Open Source Graphing Library Maps
Plotly's Python graphing library makes interactive, publication-quality maps online.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/mapbox-to-
maplibre/)
MapLibre Migration
(/python/tile-county-
choropleth/)
Tile Choropleth Maps
(/python/lines-on-tile-
maps/)
Lines on Tile Maps
(/python/filled-area-tile-
maps/)
Filled Area on Tile Maps
(/python/bubble-maps/)
Bubble Maps
(/python/densit...</full_content>
      </section>
      <section name="Tile choropleth maps" difficulty="intermediate" source_file="Tile choropleth maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Tile choropleth maps</objective>
          <objective>Aplicar customizações em Tile choropleth maps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.choropleth_map (df, geojson=counties , locations ='fips', color='unemp',
                           color_continuous_scale ="Viridis" ,
                           range_color =(0, 12),
                           map_style ="carto-positron" ,
                           zoom=3, center = {"lat": 37.0902, "lon": -95.7129},
                           opacity=0.5,
                           labels={'unemp':'unemployment rate' }
                          )
fig.upda...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Choroplethmap (geojson=counties , locations =df.fips, z=df.unemp,
                                    colorscale ="Viridis" , zmin=0, zmax=12,
                                    marker_opacity =0.5, marker_line_width =0))
fig.update_layout (map_style ="carto-positron" ,
                  map_zoom =3, map_center  = {"lat": 37.0902, "lon": -95.7129})
fig.update_layout (margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
Mapbox traces are deprecated a...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Introduction: main parameters for choropleth tile maps
1. GeoJSON-formatted geometry information where each feature has either an id field or some identifying value in properties.
2. A list of values indexed by feature identifier.
GeoJSON with feature.id &gt;  &gt; Tile Choropleth
Maps
Tile Choropleth Maps in Python
How to make tile choropleth maps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/tile-county-
choropleth.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a map composed of colored polygons. It is used to represent spatial variations of a quantity. This
page documents how to build tile-map choropleth maps, but you can also b...</full_content>
      </section>
      <section name="Tile map layers" difficulty="intermediate" source_file="Tile map layers in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Tile map layers</objective>
          <objective>Aplicar customizações em Tile map layers</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.scatter_map (us_cities , lat="lat", lon="lon", hover_name ="City", hover_data =["State", "Population" ],
                        color_discrete_sequence =["fuchsia" ], zoom=3, height=300)
fig.update_layout (map_style ="open-street-map" )
fig.update_layout (margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
If you have access to your own private tile servers, or wish to use a tile server not included in the list above, the recommended approach is to set layout.map....</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(go.Densitymap (lat=quakes.Latitude , lon=quakes.Longitude , z=quakes.Magnitude ,
                                 radius=10))
fig.update_layout (map_style ="https://tiles.stadiamaps.com/styles/stamen_watercolor.json?api_key=YOUR-API-KEY" , map_center_lon =180)
fig.update_layout (margin={"r":0,"t":0,"l":0,"b":0})
fig.show()
Mapbox traces are deprecated and may be removed in a future version of Plotly.py.
Mapbox tile maps are composed of various l...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; Tile Map
Layers
Tile Map Layers in Python
How to make tile-based maps in Python with various base layers.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/tile-map-
layers.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
a Base
needed
rlay
Style
aps
You Need
ded
cify a
needed
e token16/07/2025, 06:37 Tile map layers in Python
https://plotly.com/python/tile-map-layers/ 1/11

--- Página 2 ---
Tile Maps vs Outline Maps
Outline-based maps
Tile Map Renderers
Maplibre
layout.map.style defines the lowest layers of the map, also known as the "base map".
The various traces in data are by default rendere...</full_content>
      </section>
      <section name="Usa county choropleth maps" difficulty="intermediate" source_file="Usa county choropleth maps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Usa county choropleth maps</objective>
          <objective>Aplicar customizações em Usa county choropleth maps</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">This choropleth uses a divergent categorical colorscale</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Deprecation warning
Required Packages
conda install plotly conda install geopandas
FIPS and Values &gt;  &gt; USA County
Choropleth Maps
USA County Choropleth Maps in Python
How to create colormaped representations of USA counties by FIPS values in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Maps (/python/maps)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/county-
choropleth.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page describes a  for creating map-like figures using . This is no
longer the recommended way to make county-level choropleth maps, instead we recommend using a 
 or the alternative .
legacy "figure factory" method (/python/figure-factories/)
self-filled scatter traces (/python/shapes)
GeoJSON...</full_content>
      </section>
      <section name="Annotated heatmaps" difficulty="intermediate" source_file="Annotated heatmaps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Annotated heatmaps</objective>
          <objective>Aplicar customizações em Annotated heatmaps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
z = [[.1, .3, .5, .7, .9],
     [1, .8, .6, .4, .2],
     [.2, 0, .5, .7, .9],
     [.9, .8, .4, .2, 0],
     [.3, .4, .5, .7, 1]]
fig = px.imshow(z, text_auto =True)
fig.show()
0.1 0.3 0.5 0.7 0.9
1 0.8 0.6 0.4 0.2
0.2 0 0.5 0.7 0.9
0.9 0.8 0.4 0.2 0
0.3 0.4 0.5 0.7 1
0 1 2 3 443210
00.20.40.60.81
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
press
otations16/07/2025, 06:43 Annotated heatmaps in Python
https://plotly.com/python/annotated-heatmap/ 1/9</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Annotated Heatmaps with Plotly Express
Basic Annotated Heatmap for z-annotations &gt;  &gt;
Annotated Heatmaps
Annotated Heatmaps in Python
How to make Annotated Heatmaps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/annotated-heatmap.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
New in v5.5
As of version 5.5.0 of plotly, the recommended way to  rather than the now-deprecated
create_annotated_heatmap figure factory documented below for historical reasons.
display annotated heatmaps is to use px.imshow() (/python/heatmaps/)
New in v5.5
After creating a figure with px.imshow, you can add z-annotations with .upda...</full_content>
      </section>
      <section name="Carpet contour plot" difficulty="advanced" source_file="Carpet contour plot in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Carpet contour plot</objective>
          <objective>Aplicar customizações em Carpet contour plot</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Carpet Plot &gt;  &gt; Carpet
Contour Plot
Carpet Contour Plot in Python
How to make carpet contour plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/carpet-
contour.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Set the x and y coordinates, using x and y attributes. If x coordinate values are omitted a cheater plot will be created. To save parameter values use a and b attributes.
To make changes to the axes, use aaxis or baxis attributes. For a more detailed list of axes attributes refer to 
.
python reference
(https://plotly.com/python/reference/carpet/#carpet-aaxis)
import plotly.graph_objects  as go
...</full_content>
      </section>
      <section name="Carpet plots" difficulty="intermediate" source_file="Carpet plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Carpet plots</objective>
          <objective>Aplicar customizações em Carpet plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Set X and Y Coordinates
Add Parameter Values &gt;  &gt;
Carpet Plots
Carpet Plots in Python
How to make carpet plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/carpet-
plot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
To set the x and y coordinates use x and y attributes. If x coordinate values are omitted a cheater plot will be created. The plot below has a y array specified but
requires a and b parameter values before an axis may be plotted.
import plotly.graph_objects  as go
fig = go.Figure(go.Carpet(
    y = [2, 3.5, 4, 3, 4.5, 5, 5.5, 6.5, 7.5, 8, 8.5, 10]
))
fig.show()
To save parameter values use the...</full_content>
      </section>
      <section name="Contour plots" difficulty="intermediate" source_file="Contour plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Contour plots</objective>
          <objective>Aplicar customizações em Contour plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Contour Plot &gt;  &gt;
Contour Plots
Contour Plots in Python
How to make Contour plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/contour-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A 2D contour plot shows the  of a 2D numerical array z, i.e. interpolated lines of isovalues of z.
contour lines (https://en.wikipedia.org/wiki/Contour_line)
import plotly.graph_objects  as go
fig = go.Figure(data =
    go.Contour(
        z=[[10, 10.625, 12.5, 15.625, 20],
           [5.625, 6.25, 8.125, 11.25, 15.625],
           [2.5, 3.125, 5., 8.125, 12.5],
           [0.625, 1.25, 3.125, 6.25, 10.625],
     ...</full_content>
      </section>
      <section name="Dendrograms" difficulty="intermediate" source_file="Dendrograms in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dendrograms</objective>
          <objective>Aplicar customizações em Dendrograms</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Dendrogram
Set Color Threshold &gt;  &gt;
Dendrograms
Dendrograms in Python
How to make a dendrogram in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/dendrogram.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  is a diagram representing a tree. The  called create_dendrogram
performs  on data and represents the resulting tree. Values on the tree depth axis
correspond to distances between clusters.
dendrogram (https://en.wikipedia.org/wiki/Dendrogram)
figure factory (/python/figure-factories/)
hierarchical clustering (https://en.wikipedia.org/wiki/Hierarchical_clustering)
Dendrogram plots are commonly used in ...</full_content>
      </section>
      <section name="Heatmaps" difficulty="intermediate" source_file="Heatmaps in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Heatmaps</objective>
          <objective>Aplicar customizações em Heatmaps</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.imshow([[1, 20, 30],
                 [20, 1, 60],
                 [30, 60, 1]])
fig.show()</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=go.Heatmap(
                    z=[[1, 20, 30],
                      [20, 1, 60],
                      [30, 60, 1]]))
fig.show()
Jan 2013Apr 2013Jul 2013Oct 2013Jan 2014Apr 2014Jul 2014Oct 2014203040506070
2402602803004xDaily Air temperature at
sigma level 995 [degK]
timelat
−0.5 0 0.5 1 1.5 2 2.5−0.500.511.522.5
102030405060
a
show
ects
els16/07/2025, 06:42 Heatmaps in Python
https://plotly.com/python/heatmaps/ 7/13</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)1. Matrix Heatmaps accept a 2-dimensional matrix or array of data and visualizes it directly. This type of heatmap is the subject of this page.
2. Density Heatmaps accept data as a list and visualizes aggregated quantities like counts or sums of this data. Please refer to the 
 for this kind of figure.
Heatmaps with Plotly Express &gt;  &gt;
Heatmaps
Heatmaps in Python
How to make Heatmaps in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/heatmaps.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The term "heatmap" usually refers to a Cartesian plot with data visualized as colored rectangular tiles, which is the subje...</full_content>
      </section>
      <section name="Imshow" difficulty="intermediate" source_file="Imshow in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Imshow</objective>
          <objective>Aplicar customizações em Imshow</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
img_rgb = [[[255, 0, 0], [0, 255, 0], [0, 0, 255]],
           [[0, 255, 0], [0, 0, 255], [255, 0, 0]]]
fig = go.Figure(go.Image(z=img_rgb))
fig.show()
The z parameter of go.Image passes image data in the form of an array or a list of numerical values, but it is also possible to use the source parameter, which takes a
b64 binary string. Thanks to png or jpg compression, using source is a way to reduce the quantity of data passed to the browser, and also to redu...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Displaying RGB image data with px.imshow
Read image arrays from image files &gt;  &gt;
Imshow
Imshow in Python
How to display image data in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/imshow.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This tutorial shows how to display and explore image data. If you would like instead a logo or static image, use go.layout.Image as explained .
here (/python/images)
px.imshow displays multichannel (RGB) or single-channel ("grayscale") image data.
import plotly.express  as px
import numpy as np
img_rgb = np.array([[[255, 0, 0], [0, 255, 0], [0, 0, 255]],
                    [[0,...</full_content>
      </section>
      <section name="Log plots" difficulty="intermediate" source_file="Log plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Log plots</objective>
          <objective>Aplicar customizações em Log plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("year == 2007" )
fig = px.scatter(df, x="gdpPercap" , y="lifeExp" , hover_name ="country" , log_x=True)
fig.show()
Setting the range of a logarithmic axis with Plotly Express works the same was as with linear axes: using the range_x and range_y keywords. Note that you cannot set
the range to include 0 or less.345678910002 345678910k2 345640455055606570758085
gdpPercaplifeExp
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
s...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Logarithmic Axes with Plotly Express &gt;  &gt; Log
Plots
Log Plots in Python
How to make Log plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/log-
plot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
This page shows examples of how to configure  to follow a logarithmic
rather than linear progression.  on logarithmic axes is done the same was as with 
.
2-dimensional Cartesian axes (/python/figure-structure/#2d-cartesian-trace-types-and-subplots)
Configuring gridlines, ticks, tick labels and axis titles (/python/axes/)
linear axes
(/python/axes/)
 is the easy-to-use, high-level interface to Plotly, which  and
...</full_content>
      </section>
      <section name="Network graphs" difficulty="intermediate" source_file="Network graphs in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Network graphs</objective>
          <objective>Aplicar customizações em Network graphs</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Create random graph
Create Edges &gt;  &gt;
Network Graphs
Network Graphs in Python
How to make Network Graphs in Python with Plotly. One examples of a network graph with NetworkX
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/network-
graphs.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
In this example we show how to visualize a network graph created using networkx.
Install the Python library networkx with pip install networkx.
import plotly.graph_objects  as go
import networkx  as nx
G = nx.random_geometric_graph (200, 0.125)
Add edges as disconnected lines in a single trace and nodes as a scatter trace
ta-
 &amp;utm_campaign=studio_clo...</full_content>
      </section>
      <section name="Parallel coordinates plot" difficulty="intermediate" source_file="Parallel coordinates plot in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Parallel coordinates plot</objective>
          <objective>Aplicar customizações em Parallel coordinates plot</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.parallel_coordinates (df, color="species_id" , labels={"species_id" : "Species" ,
                "sepal_width" : "Sepal Width" , "sepal_length" : "Sepal Length" ,
                "petal_width" : "Petal Width" , "petal_length" : "Petal Length" , },
                             color_continuous_scale =px.colors.diverging .Tealrose ,
                             color_continuous_midpoint =2)
fig.show()
Parallel coordinates are richly intera...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=
    go.Parcoords (
        line_color ='blue',
        dimensions  = list([
            dict(range = [1,5],
                 constraintrange  = [1,2], # change this range by dragging the pink line
                 label = 'A', values = [1,4]),
            dict(range = [1.5,5],
                 tickvals  = [1.5,3,4.5],
                 label = 'B', values = [3,1.5]),
            dict(range = [1,5],
                 tickvals  = [1,2,4,5],
  ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Parallel Coordinates plot with Plotly Express &gt;  &gt; Parallel
Coordinates Plot
Parallel Coordinates Plot in Python
How to make parallel coordinates plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to
this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/parallel-
coordinates-plot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces . In a parallel coordinates plot with px.parallel_coordinates, each row of the DataFrame is represented
by a polyline mark which traverses a set of parallel axes, one for each of the dimensions. For other representations of multivariate data, also see 
,  and .
Plotly...</full_content>
      </section>
      <section name="Polar charts" difficulty="intermediate" source_file="Polar charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Polar charts</objective>
          <objective>Aplicar customizações em Polar charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.wind()
fig = px.scatter_polar (df, r="frequency" , theta="direction" )
fig.show()
The "strength" column corresponds to strength categories of the wind, and there is a frequency value for each direction and strength. Below we use the strength
column to encode the color, symbol and size of the markers.N
NNE
NE
ENE
E
ESE
SE
SSE
SSSWSWWSWWWNWNWNNW
00.511.522.5
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
lar16/07/2025, 06:45 Polar charts in Py...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=
    go.Scatterpolar (
        r = [0.5,1,2,2.5,3,4],
        theta = [35,70,120,155,205,240],
        mode = 'markers' ,
    ))
fig.update_layout (showlegend =False)
fig.show()
0°45°90°
135°
180°
225°
270°315°00.511.522.533.54
lar16/07/2025, 06:45 Polar charts in Python
https://plotly.com/python/polar-chart/ 4/14</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Polar chart with Plotly Express &gt;  &gt; Polar
Charts
Polar Charts in Python
How to make polar charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/polar-
chart.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A polar chart represents data along radial and angular axes. With Plotly Express, it is possible to represent polar data as scatter markers with px.scatter_polar, and as
lines with px.line_polar.
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/sty...</full_content>
      </section>
      <section name="Quiver plots" difficulty="intermediate" source_file="Quiver plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Quiver plots</objective>
          <objective>Aplicar customizações em Quiver plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Quiver Plot
Quiver Plot with Points &gt;  &gt;
Quiver Plots
Quiver Plots in Python
How to make a quiver plot in Python. A quiver plot displays velocity vectors a arrows.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/quiver-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Quiver plots can be made using a  as detailed in this page.
figure factory (/python/figure-factories/)
import plotly.figure_factory  as ff
import numpy as np
x,y = np.meshgrid (np.arange(0, 2, .2), np.arange(0, 2, .2))
u = np.cos(x)*y
v = np.sin(x)*y
fig = ff.create_quiver (x, y, u, v)
fig.show()
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.800.511.52
ta-
 &amp;utm_campai...</full_content>
      </section>
      <section name="Radar charts" difficulty="intermediate" source_file="Radar charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Radar charts</objective>
          <objective>Aplicar customizações em Radar charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure(data=go.Scatterpolar (
  r=[1, 5, 2, 2, 3],
  theta=['processing cost' ,'mechanical properties' ,'chemical stability' , 'thermal stability' ,
           'device integration' ],
  fill='toself'
))
fig.update_layout (
  polar=dict(
    radialaxis =dict(
      visible=True
    ),
  ),
  showlegend =False
)
fig.show()
processing costmechanical properties
chemical stability
thermal stability
device integration012345
olar16/07/2025, 06:45 Radar charts...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Radar Chart with Plotly Express &gt;  &gt; Radar
Charts
Radar Charts in Python
How to make radar charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/radar-
chart.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  (also known as a spider plot or star plot) displays multivariate data in the form of a two-dimensional chart of
quantitative variables represented on axes originating from the center. The relative position and angle of the axes is typically uninformative. It is equivalent to a
 with the axes arranged radially.
Radar Chart (https://en.wikipedia.org/wiki/Radar_chart)
parallel coordinates plot (/python/par...</full_content>
      </section>
      <section name="Scientific charts" difficulty="basic" source_file="Scientific charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Scientific charts</objective>
          <objective>Aplicar customizações em Scientific charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
Scientific Charts (/python/scientific-charts)
Plotly Python Open Source Graphing Library Scientific Charts
Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make scientific charts such as contour plots, heatmaps,
dendrograms, polar charts, and ternary plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/contour-plots/)
Contour Plots
(/python/heatmaps/)
Heatmaps
(/python/imshow/)
Imshow
(/python/ternary-plots/)
Ternary Plots
(/python/log-plot/)
Log Plots
(/python/dendrogram/)
Dendrograms
(/python/annotated-
heatmap/)
Annotated Heatmaps
(/python/ternary-scatter-
contour/)
Ternary Overlay
(/python/parallel-
coordinates-plot/)
Parallel Coordinates Plot
(/p...</full_content>
      </section>
      <section name="Smith charts" difficulty="intermediate" source_file="Smith charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Smith charts</objective>
          <objective>Aplicar customizações em Smith charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Smith Charts with Plotly Graph Objects &gt;  &gt; Smith
Charts
Smith Charts in Python
How to make Smith Charts with plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/smith-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
New in v5.4
A  is a specialized chart for visualizing :
numbers with both a real and imaginary part.
Smith Chart (https://en.wikipedia.org/wiki/Smith_chart)
complex numbers (https://en.wikipedia.org/wiki/Complex_number)
import plotly.graph_objects  as go
fig = go.Figure(go.Scattersmith (imag=[0.5, 1, 2, 3], real=[0.5, 1, 2, 3]))
fig.show()
∞
−5
−2
−1−0.5−0.200.20.51
2
5
0.20.5125
ta-
 &amp;utm_campaign=studio_cl...</full_content>
      </section>
      <section name="Streamline plots" difficulty="intermediate" source_file="Streamline plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Streamline plots</objective>
          <objective>Aplicar customizações em Streamline plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)uniformly spaced ranges of x and y values (1D)
2-D velocity values u and v defined on the cross-product (np.meshgrid(x, y)) of x and y.
Basic Streamline Plot &gt;  &gt;
Streamline Plots
Streamline Plots in Python
How to make a streamline plot in Python. A streamline plot displays vector field data.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/streamline-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A Streamline plot is a representation based on a 2-D vector field interpreted as a velocity field, consisting of closed curves tangent to the velocity field. In the case of a
stationary velocity field, streamlines coincide with tra...</full_content>
      </section>
      <section name="Ternary contours" difficulty="advanced" source_file="Ternary contours in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Ternary contours</objective>
          <objective>Aplicar customizações em Ternary contours</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Ternary contour plots
Simple ternary contour plot with plotly &gt;  &gt;
Ternary contours
Ternary contours in Python
How to make Ternary Contour Plots in Python with plotly
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/ternary-
contour.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A ternary contour plots represents isovalue lines of a quantity defined inside a , i.e. as a function of three
variables which sum is constant. Coordinates of the ternary plot often correspond to concentrations of three species, and the quantity represented as contours is
some property (e.g., physical, chemical, thermodynamical) varying with the composition...</full_content>
      </section>
      <section name="Ternary overlay" difficulty="intermediate" source_file="Ternary overlay in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Ternary overlay</objective>
          <objective>Aplicar customizações em Ternary overlay</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Load and Process Data Files
Create Ternary Scatter Plot: &gt;  &gt;
Ternary Overlay
Ternary Overlay in Python
How to make a scatter plot overlaid on ternary contour in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/ternary-
scatter-contour.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import json
import pandas as pd
contour_raw_data  = pd.read_json ('https://raw.githubusercontent.com/plotly/datasets/master/contour_data.json' )
scatter_raw_data  = pd.read_json ('https://raw.githubusercontent.com/plotly/datasets/master/scatter_data.json' )
scatter_data  =  scatter_raw_data ['Data']
def clean_data (data_in):
    """
 ...</full_content>
      </section>
      <section name="Ternary plots" difficulty="intermediate" source_file="Ternary plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Ternary plots</objective>
          <objective>Aplicar customizações em Ternary plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.election ()
fig = px.scatter_ternary (df, a="Joly", b="Coderre" , c="Bergeron" )
fig.show()
We can scale and color the markers to produce a ternary bubble chart.00.20.40.60.81
1 0.8 0.6 0.4 0.2 010.80.60.40.20Joly
Coderre Bergeron
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ress
ph16/07/2025, 06:42 Ternary plots in Python
https://plotly.com/python/ternary-plots/ 1/5</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
rawData = [
    {'journalist' :75,'developer' :25,'designer' :0,'label':'point 1' },
    {'journalist' :70,'developer' :10,'designer' :20,'label':'point 2' },
    {'journalist' :75,'developer' :20,'designer' :5,'label':'point 3' },
    {'journalist' :5,'developer' :60,'designer' :35,'label':'point 4' },
    {'journalist' :10,'developer' :80,'designer' :10,'label':'point 5' },
    {'journalist' :10,'developer' :90,'designer' :0,'label':'point 6' },
    {'journal...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Ternary Plots
Ternary scatter plot with Plotly Express &gt;  &gt;
Ternary Plots
Ternary Plots in Python
How to make Ternary plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/ternary-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A ternary plot depicts the ratios of three variables as positions in an equilateral triangle.
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
Here we use px.scatter_ternary to visualize the thre...</full_content>
      </section>
      <section name="Wind rose and polar bar charts" difficulty="advanced" source_file="Wind rose and polar bar charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Wind rose and polar bar charts</objective>
          <objective>Aplicar customizações em Wind rose and polar bar charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.wind()
fig = px.bar_polar (df, r="frequency" , theta="direction" ,
                   color="strength" , template ="plotly_dark" ,
                   color_discrete_sequence = px.colors.sequential .Plasma_r )
fig.show()
N
NNE
NE
ENE
E
ESE
SE
SSE
SSSWSWWSWWWNWNWNNW
0246810strength
0-1
1-2
2-3
3-4
4-4
4-5
5-6
6+
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
s16/07/2025, 06:45 Wind rose and polar bar charts in Python
https://plotly.com/python/...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
fig.add_trace (go.Barpolar (
    r=[77.5, 72.5, 70.0, 45.0, 22.5, 42.5, 40.0, 62.5],
    name='11-14 m/s' ,
    marker_color ='rgb(106,81,163)'
))
fig.add_trace (go.Barpolar (
    r=[57.5, 50.0, 45.0, 35.0, 20.0, 22.5, 37.5, 55.0],
    name='8-11 m/s' ,
    marker_color ='rgb(158,154,200)'
))
fig.add_trace (go.Barpolar (
    r=[40.0, 30.0, 30.0, 35.0, 7.5, 7.5, 32.5, 40.0],
    name='5-8 m/s' ,
    marker_color ='rgb(203,201,226)'
))
fig.add_t...</graph_objects>
        </side_by_side_comparison>
        <practical_exercises>
          <exercise id="exercise_1" difficulty="basic">
            <title>Exercício: Criar Wind rose and polar bar charts com seus dados</title>
            <description>Usando o exemplo acima, modifique o código para usar seus próprios dados</description>
            <solution_hint>Substitua o dataset pelos seus dados e ajuste as colunas x e y</solution_hint>
          </exercise>
        </practical_exercises>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Wind Rose Chart with Plotly Express
Basic Wind Rose Chart &gt;  &gt; Wind Rose
and Polar Bar Charts
Wind Rose and Polar Bar Charts in Python
How to graph wind rose charts in python. Wind Rose charts display wind speed and direction of a given location.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Scientific Charts (/python/scientific-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/wind-rose-charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A  (also known as a polar bar chart) is a graphical tool used to visualize how wind speed and direction are
typically distributed at a given location. You can use the px.bar_polar function from Plotly Express as below, otherwise use go.Barpolar as explained in the next
section....</full_content>
      </section>
      <section name="Bullet charts" difficulty="intermediate" source_file="Bullet charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Bullet charts</objective>
          <objective>Aplicar customizações em Bullet charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Bullet Charts
Add Steps, and Threshold &gt;  &gt; Bullet
Charts
Bullet Charts in Python
How to make bullet charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bullet-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Stephen Few's Bullet Chart was invented to replace dashboard  and meters, combining both types of charts into
simple bar charts with qualitative bars (steps), quantitative bar (bar) and performance line (threshold); all into one simple layout. Steps typically are broken into
several values, which are defined with an array. The bar represent the actual value that a particular variable reache...</full_content>
      </section>
      <section name="Candlestick charts" difficulty="intermediate" source_file="Candlestick charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Candlestick charts</objective>
          <objective>Aplicar customizações em Candlestick charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Candlestick with Pandas
Candlestick without Rangeslider &gt;  &gt;
Candlestick Charts
Candlestick Charts in Python
How to make interactive candlestick charts in Python with Plotly. Six examples of candlestick charts with Pandas, time series, and yahoo finance data.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/candlestick-charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The  is a style of financial chart describing open, high, low and close for a given x coordinate (most
likely time). The boxes represent the spread between the open and close values and the lines represent the spread between the low and high values. Sample p...</full_content>
      </section>
      <section name="Financial charts" difficulty="basic" source_file="Financial charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Financial charts</objective>
          <objective>Aplicar customizações em Financial charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
Financial Charts (/python/financial-charts)
Plotly Python Open Source Graphing Library Financial Charts
Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make financial charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/time-series/)
Time Series and Date
Axes
(/python/candlestick-
charts/)
Candlestick Charts
(/python/waterfall-
charts/)
Waterfall Charts
(/python/funnel-charts/)
Funnel Chart
(/python/ohlc-charts/)
OHLC Charts
(/python/indicator/)
Indicators
(/python/gauge-charts/)
Gauge Charts
(/python/bullet-charts/)
Bullet Charts
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop w...</full_content>
      </section>
      <section name="Funnel chart" difficulty="intermediate" source_file="Funnel chart in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Funnel chart</objective>
          <objective>Aplicar customizações em Funnel chart</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
data = dict(
    number=[39, 27.4, 20.6, 11, 2],
    stage=["Website visit" , "Downloads" , "Potential customers" , "Requested price" , "invoice sent" ])
fig = px.funnel(data, x='number' , y='stage')
fig.show()
39
27.4
20.6
11
2 invoice sentRequested pricePotential customersDownloadsWebsite visitstage
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
s
ress
ts trace
xpress
nelarea
unnel16/07/2025, 06:47 Funnel chart in Python
https://plotly.com/python/funne...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter43.5%
30.4%
17.4%
8.7%Interview 1
Interview 2
Test
Final Stage
s
ress
ts trace
xpress
nelarea
unnel16/07/2025, 06:47 Funnel chart in Python
htt...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Introduction
Basic Funnel Plot with plotly.express &gt;  &gt;
Funnel Chart
Funnel Chart in Python
How to make funnel-chart plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/funnel-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Funnel charts are often used to represent data in different stages of a business process. It’s an important mechanism in Business Intelligence to identify potential
problem areas of a process. For example, it’s used to observe the revenue or loss in a sales process for each stage, and displays values that are decreasing
progressively. Each stage is illustrated as a percentage of th...</full_content>
      </section>
      <section name="Gauge charts" difficulty="intermediate" source_file="Gauge charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Gauge charts</objective>
          <objective>Aplicar customizações em Gauge charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Gauge
Add Steps, Threshold, and Delta &gt;  &gt;
Gauge Charts
Gauge Charts in Python
How to make gauge meter charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/gauge-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A radial gauge chart has a circular arc, which displays a single value to estimate progress toward a goal. The bar shows the target value, and the shading represents
the progress toward that goal. Gauge charts, known as speedometer charts as well. This chart type is usually used to illustrate key business indicators.
The example below displays a basic gauge chart with default attributes. F...</full_content>
      </section>
      <section name="Indicators" difficulty="intermediate" source_file="Indicators in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Indicators</objective>
          <objective>Aplicar customizações em Indicators</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">suffix and prefix on delta are new in 5</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview
1. value: the value to visualize
2. mode: which visual elements to draw
3. align: how to align number and delta (left, center, right)
4. domain: the extent of the figure
1. number is simply a representation of the number in text. It has attributes:
2. valueformat: to format the number
3. prefix: a string before the number
4. suffix: a string after the number
5. font.(family|size): to control the font
"delta" simply displays the difference between the value with respect to a reference. It has attributes:
1. reference: the number to compare the value with
2. relative: whether that difference is absolute or relative
3. valueformat: to format the delta
4. (increasing|decreasing).color: color to be used for positive or decreasing delta
5. (increasing|decreasing).symbol: symbol displayed on the left of the delta
6. font.(family|size): to control the font
7. position: position relative to  (either top, left, bottom, right)...</full_content>
      </section>
      <section name="Ohlc charts" difficulty="intermediate" source_file="Ohlc charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Ohlc charts</objective>
          <objective>Aplicar customizações em Ohlc charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple OHLC Chart with Pandas
OHLC Chart without Rangeslider &gt;  &gt; OHLC
Charts
OHLC Charts in Python
How to make interactive OHLC charts in Python with Plotly. Six examples of OHLC charts with Pandas, time series, and yahoo finance data.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/ohlc-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The  chart (for open, high, low and close) is a style of financial chart describing open, high, low and
close values for a given x coordinate (most likely time). The tip of the lines represent the low and high values and the horizontal segments represent the open and
close values. Sample points...</full_content>
      </section>
      <section name="Time series and date axes" difficulty="intermediate" source_file="Time series and date axes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Time series and date axes</objective>
          <objective>Aplicar customizações em Time series and date axes</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">a known limitation of this feature is that it does not support scattergl traces</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.stocks()
fig = px.line(df, x='date', y="GOOG")
fig.show()
Jan 2018 Apr 2018 Jul 2018 Oct 2018 Jan 2019 Apr 2019 Jul 2019 Oct 20190.90.9511.051.11.151.2
dateGOOG
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
the
Minor
Period
Range
ttons
by Zoom16/07/2025, 06:47 Time series and date axes in Python
https://plotly.com/python/time-series/ 1/20</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Time Series using Axes of type date &gt;  &gt; Time Series
and Date Axes
Time Series and Date Axes in Python
How to plot date and time in python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/time-series.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Time series can be represented using either plotly.express functions (px.line, px.scatter, px.bar etc) or plotly.graph_objects charts objects (go.Scatter, go.Bar etc). For
more examples of such charts, see the documentation of  or .
line and scatter plots (https://plotly.com/python/line-and-scatter/)
bar charts (/python/bar-charts/)
For financial applications, Plotly can also be used to cr...</full_content>
      </section>
      <section name="Waterfall charts" difficulty="intermediate" source_file="Waterfall charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Waterfall charts</objective>
          <objective>Aplicar customizações em Waterfall charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple Waterfall Chart
Multi Category Waterfall Chart &gt;  &gt;
Waterfall Charts
Waterfall Charts in Python
How to make waterfall plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Financial Charts (/python/financial-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/waterfall-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import plotly.graph_objects  as go
fig = go.Figure(go.Waterfall (
    name = "20", orientation  = "v",
    measure = ["relative" , "relative" , "total", "relative" , "relative" , "total"],
    x = ["Sales", "Consulting" , "Net revenue" , "Purchases" , "Other expenses" , "Profit before tax" ],
    textposition  = "outside" ,
    text = ["+60", "+80", "", "-40", "-20", "To...</full_content>
      </section>
      <section name="3d axes" difficulty="intermediate" source_file="3d axes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d axes</objective>
          <objective>Aplicar customizações em 3d axes</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Range of axes &gt;  &gt; 3D Axes
3D Axes in Python
How to format axes of 3d plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-axes.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
3D figures have an attribute in layout called scene, which contains attributes such as xaxis, yaxis and zaxis parameters, in order to set the range, title, ticks, color etc.
of the axes.
For creating 3D charts, see .
this page (https://plotly.com/python/3d-charts/)
Set range on an axis to manually configure a range for that axis. If you don't set range, it's automatically calculated. In this example, we set a range on xaxis, yaxis, and
zaxis.
ta-
 ...</full_content>
      </section>
      <section name="3d bubble charts" difficulty="intermediate" source_file="3d bubble charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d bubble charts</objective>
          <objective>Aplicar customizações em 3d bubble charts</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)3d Bubble chart with Plotly Express
Simple Bubble Chart &gt;  &gt; 3D Bubble
Charts
3D Bubble Charts in Python
How to make 3D Bubble Charts in Python with Plotly. Three examples of 3D Bubble Charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-bubble-
charts.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import plotly.express  as px
import numpy as np
df = px.data.gapminder ()
fig = px.scatter_3d (df, x='year', y='continent' , z='pop', size='gdpPercap' , color='lifeExp' ,
                    hover_data =['country' ])
fig.update_layout (scene_zaxis_type ="log")
fig.show()
304050607080lifeExp
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sideb...</full_content>
      </section>
      <section name="3d camera controls" difficulty="intermediate" source_file="3d camera controls in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d camera controls</objective>
          <objective>Aplicar customizações em 3d camera controls</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)How camera controls work &gt;  &gt; 3D Camera
Controls
3D Camera Controls in Python
How to Control the Camera in your 3D Charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-camera-
controls.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The camera position and direction is determined by three vectors: up, center, eye. Their coordinates refer to the 3-d domain, i.e., (0, 0, 0) is always the center of the
domain, no matter data values. The eye vector determines the position of the camera. The default is $(x=1.25, y=1.25, z=1.25)$.
The up vector determines the up direction on the page. The default is $(x=0, y=0, z=1)$, that is...</full_content>
      </section>
      <section name="3d charts" difficulty="basic" source_file="3d charts in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d charts</objective>
          <objective>Aplicar customizações em 3d charts</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
3D Charts in Dash
 is the best way to build analytical apps in Python using Plotly figures. To run the app below, run pip install dash, click "Download" to get
the code and run python app.py.
Get started with  and learn how to effortlessly  &amp; 
 apps like this with .
Python (/python)
3D Charts (/python/3d-charts)Plotly Python Open Source Graphing Library 3D Charts
Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make 3D charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/3d-axes/)
3D Axes
(/python/3d-scatter-
plots/)
3D Scatter Plots
(/python/3d-surface-
plots/)
3D Surface Plots
(/python/3d-subplots/)
3D Subplots
(/python/3d-camera-
controls/)
3D Camera Controls
(/py...</full_content>
      </section>
      <section name="3d cone plots" difficulty="intermediate" source_file="3d cone plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d cone plots</objective>
          <objective>Aplicar customizações em 3d cone plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic 3D Cone &gt;  &gt; 3D Cone
Plots
3D Cone Plots in Python
How to make 3D Cone plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/cone-
plot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A cone plot is the 3D equivalent of a 2D , i.e., it represents a 3D vector field using cones to represent the direction and norm of the
vectors. 3-D coordinates are given by x, y and z, and the coordinates of the vector field by u, v and w.
quiver plot (/python/quiver-plots/)
import plotly.graph_objects  as go
fig = go.Figure(data=go.Cone(x=[1], y=[1], z=[1], u=[1], v=[1], w=[0]))
fig.update_layout (scene_camera_eye =dict(x=-0.76, y=1.8, ...</full_content>
      </section>
      <section name="3d isosurface plots" difficulty="intermediate" source_file="3d isosurface plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d isosurface plots</objective>
          <objective>Aplicar customizações em 3d isosurface plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Basic Isosurface
Removing caps when visualizing isosurfaces &gt;  &gt; 3D
Isosurface Plots
3D Isosurface Plots in Python
How to make 3D Isosurface Plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-isosurface-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
With go.Isosurface, you can plot  of a scalar field value, which is defined on x, y and z coordinates.
isosurface contours (https://en.wikipedia.org/wiki/Isosurface)
In this first example, we plot the isocontours of values isomin=2 and isomax=6. In addition, portions of the sides of the coordinate domains for which the value is
between isomin and isomax (named the c...</full_content>
      </section>
      <section name="3d line plots" difficulty="intermediate" source_file="3d line plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d line plots</objective>
          <objective>Aplicar customizações em 3d line plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.gapminder ().query("country=='Brazil'" )
fig = px.line_3d(df, x="gdpPercap" , y="pop", z="year")
fig.show()
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:50 3d line plots in Python
https://plotly.com/python/3d-line-plots/ 1/5</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)3D Line plot with Plotly Express &gt;  &gt; 3D Line
Plots
3D Line Plots in Python
How to make 3D Line Plots
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-line-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
import plotly.express  as px
df = px.data.gapminder ().query("country=='Brazil'" )
fig = px.line_3d(df, x="gdpPercap" , y="pop", z="year")
fig.show()
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:50 3d line plots in Python
https://plotly.com/python/3d-line-plots/ 1/5

--- Página 2 ---
3D Line Plot of Brownian Motionimport plotly.express  as px
df = px.data.gapminder ().query("continent=='Europe'" )
fig = px.li...</full_content>
      </section>
      <section name="3d mesh plots" difficulty="advanced" source_file="3d mesh plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d mesh plots</objective>
          <objective>Aplicar customizações em 3d mesh plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple 3D Mesh example
3D Mesh example with Alphahull &gt;  &gt; 3D Mesh
Plots
3D Mesh Plots in Python
How to make 3D Mesh Plots
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-
mesh.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
go.Mesh3d draws a 3D set of triangles with vertices given by x, y and z. If only coordinates are given, an algorithm such as 
 is used to draw the triangles. Otherwise the triangles can be given using the i, j and k parameters (see examples
below).
Delaunay triangulation
(https://en.wikipedia.org/wiki/Delaunay_triangulation)
import plotly.graph_objects  as go
import numpy as np
# Download data set from plotly repo
pts = np....</full_content>
      </section>
      <section name="3d scatter plots" difficulty="intermediate" source_file="3d scatter plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d scatter plots</objective>
          <objective>Aplicar customizações em 3d scatter plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter_3d (df, x='sepal_length' , y='sepal_width' , z='petal_width' ,
              color='species' )
fig.show()
A 4th dimension of the data can be represented thanks to the color of the markers. Also, values from the species column are used below to assign symbols to
markers.</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)3D scatter plot with Plotly Express &gt;  &gt; 3D Scatter
Plots
3D Scatter Plots in Python
How to make 3D scatter plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-scatter-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
Like the px.scatter, the 3D function px.scatter_3d plots individual data in three-dimensional space.
2D scatter plot (https://plotly.com/python/line-and-scatter/)
d
ta-
...</full_content>
      </section>
      <section name="3d streamtube plots" difficulty="advanced" source_file="3d streamtube plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d streamtube plots</objective>
          <objective>Aplicar customizações em 3d streamtube plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Introduction
Basic Streamtube Plot
Starting Position and Segments &gt;  &gt; 3D
Streamtube Plots
3D Streamtube Plots in Python
How to make 3D streamtube plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/streamtube-
plot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
In streamtube plots, attributes include x, y, and z, which set the coordinates of the vector field, and u, v, and w, which set the x, y, and z components of the vector
field. Additionally, you can use starts to determine the streamtube's starting position.
import plotly.graph_objects  as go
fig = go.Figure(data=go.Streamtube (x=[0, 0, 0], y=[0, 1, 2], z=[0, 0, 0],...</full_content>
      </section>
      <section name="3d subplots" difficulty="advanced" source_file="3d subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d subplots</objective>
          <objective>Aplicar customizações em 3d subplots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)3D Surface Subplots &gt;  &gt; 3D
Subplots
3D Subplots in Python
3D Subplots in Plotly
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-
subplots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:50 3d subplots in Python
https://plotly.com/python/3d-subplots/ 1/4

--- Página 2 ---
import plotly.graph_objects  as go
from plotly.subplots  import make_subplots
import numpy as np
# Initialize figure with 4 3D subplots
fig = make_subplots (
    rows=2, cols=2,
    specs=[[{'type': 'surface' }, {'type': 'surface' }],
           [{'type': 'surface' }, {'type': 'surface' }]])
# Generate ...</full_content>
      </section>
      <section name="3d surface plots" difficulty="intermediate" source_file="3d surface plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d surface plots</objective>
          <objective>Aplicar customizações em 3d surface plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Topographical 3D Surface Plot &gt;  &gt; 3D Surface
Plots
3D Surface Plots in Python
How to make 3D-surface plots in Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-surface-
plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plot
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:50 3d surface plots in Python
https://plotly.com/python/3d-surface-plots/ 1/8

--- Página 2 ---
Passing x and y data to 3D Surface Plotimport plotly.graph_objects  as go
import pandas as pd
# Read data from a csv
z_data = pd.read_csv ('https://raw.githubusercontent.com/plotly/datasets/master/api_docs/mt_bruno_elevation.csv' )
fig = go.Figure...</full_content>
      </section>
      <section name="3d volume plots" difficulty="intermediate" source_file="3d volume plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de 3d volume plots</objective>
          <objective>Aplicar customizações em 3d volume plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Simple volume plot with go.Volume &gt;  &gt; 3D Volume
Plots
3D Volume Plots in Python
How to make 3D Volume Plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/3d-
volume.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A volume plot with go.Volume shows several partially transparent isosurfaces for volume rendering. The API of go.Volume is close to the one of go.Isosurface.
However, whereas  show all surfaces with the same opacity, tweaking the opacityscale parameter of go.Volume results
in a depth effect and better volume rendering.
isosurface plots (/python/3d-isosurface-plots/)
In the three examples below, note that the defa...</full_content>
      </section>
      <section name="Trisurf plots" difficulty="intermediate" source_file="Trisurf plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Trisurf plots</objective>
          <objective>Aplicar customizações em Trisurf plots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Torus &gt;  &gt; Trisurf Plots
Trisurf Plots in Python
How to make tri-surf plots in Python with Plotly. Trisurfs are formed by replacing the boundaries of a compact surface by touching triangles.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
3D Charts (/python/3d-charts)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/trisurf.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Trisurf plots can be made using a  as detailed in this page.
figure factory (/python/figure-factories/)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:51 Trisurf plots in Python
https://plotly.com/python/trisurf/ 1/5

--- Página 2 ---
Mobius Bandimport plotly.figure_factory  as ff
import numpy as np
from scipy.spatial  import Dela...</full_content>
      </section>
      <section name="Alignment chart" difficulty="intermediate" source_file="Alignment chart in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Alignment chart</objective>
          <objective>Aplicar customizações em Alignment chart</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly ...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Alignment Viewer
Bar Chart for conservation visualization &gt;  &gt; Alignment Chart
Alignment Chart in Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bio-alignment-chart.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
The Alignment Viewer (MSA) component is used to align multiple genomic or proteomic sequences from a FASTA or Clustal file. Among its extensive set of features,
the multiple sequence alignment viewer can display multiple subplots showing gap and conservation info, alongside industry standard colorscale support and
consensus sequence. No matter what size your alignment is, Alignment Viewer is able to display your genes or proteins snappily thanks to ...</full_content>
      </section>
      <section name="Clustergram" difficulty="intermediate" source_file="Clustergram in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Clustergram</objective>
          <objective>Aplicar customizações em Clustergram</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Default Clustergram &gt;  &gt; Clustergram
Clustergram in Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bio-clustergram.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
A clustergram is a combination heatmap-dendrogram that is commonly used in gene expression data. The hierarchical clustering that is represented by the
dendrograms can be used to identify groups of genes with related expression levels. The Dash Bio Clustergram component is a Python-based component that uses
plotly.py to generate a figure. It takes as input a two-dimensional numpy array of floating-point values. Imputation of missing data and computation of hierarchical
clustering both occur within ...</full_content>
      </section>
      <section name="Manhattan plot" difficulty="intermediate" source_file="Manhattan plot in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Manhattan plot</objective>
          <objective>Aplicar customizações em Manhattan plot</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Manhattan Plot
Highlighted points color, and colors of the suggestive line and the genome-wide line &gt;  &gt; Manhattan Plot
Manhattan Plot in Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bio-manhattanplot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ManhattanPlot allows you to visualize genome-wide association studies (GWAS) efficiently. Using WebGL under the hood, you can interactively explore overviews of
massive datasets comprising hundreds of thousands of points at once, or take a closer look at a small subset of your data. Hover data and click data are accessible
from within the Dash app.
import pandas as pd
import dash_bio
df = pd.read_csv ('https://r...</full_content>
      </section>
      <section name="Visualizing biological data" difficulty="basic" source_file="Visualizing biological data in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Visualizing biological data</objective>
          <objective>Aplicar customizações em Visualizing biological data</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
(/python/)
Plotly Python Open Source Graphing Library Visualizing Biological Data
Dash Bio is a suite of bioinformatics components that make it simple to analyze, visualize, and interact with bioinformatics data in a Dash application.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/volcano-plot/)
Volcano Plot
(/python/manhattan-
plot/)
Manhattan Plot
(/python/clustergram/)
Clustergram
(/python/alignment-
chart/)
Alignment Chart
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly — from Dash Club
to product updates, webinars, and more!JOIN OUR MAILING LIST
SUBSCRIBE
(HTTPS://GO.PLOT.LY/SUBSCRIPTION) Products
Dash (https:/...</full_content>
      </section>
      <section name="Volcano plot" difficulty="intermediate" source_file="Volcano plot in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Volcano plot</objective>
          <objective>Aplicar customizações em Volcano plot</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)VolcanoPlot
Point Sizes And Line Widths &gt;  &gt; Volcano Plot
Volcano Plot in Python
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
(/python/)
Suggest an edit to this page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/bio-volcano-plot.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Volcano Plot interactively identifies clinically meaningful markers in genomic experiments, i.e., markers that are statistically significant and have an effect size greater
than some threshold. Specifically, volcano plots depict the negative log-base-10 p-values plotted against their effect size.
import pandas as pd
import dash_bio
df = pd.read_csv ('https://raw.githubusercontent.com/plotly/dash-bio-docs-files/master/volcano_data1.csv' )
dash_bio .VolcanoPlot (
    dataframe ...</full_content>
      </section>
      <section name="Dash Documentation &amp; User Guide _ Plotly" difficulty="advanced" source_file="Dash Documentation &amp; User Guide _ Plotly.pdf">
        <section_objectives>
          <objective>Dominar a criação de Dash Documentation &amp; User Guide _ Plotly</objective>
          <objective>Aplicar customizações em Dash Documentation &amp; User Guide _ Plotly</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
S tar 23,449
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. Sign up for early access
now.
Dash Python User Guide
Dash is the original low-code framework for rapidly building data apps in Python.
Quickstart
Installation
A Minimal Dash App
Dash in 20 Minutes Tutorial
Dash Fundamentals
Layout
Basic Callbacks
Interactive Graphing and Crossfiltering
Sharing Data Between Callbacks
16/07/2025, 06:58 Dash Documentation &amp; User Guide | Plotly
https://dash.plotly.com 1/6

--- Página 2 ---
Dash Callbacks
Advanced Callbacks
Clientside Callbacks
Pattern-Matching Callbacks
Partial Property Updates
Background Callbacks
Flexible Callback Signatures
SHOW MORE
Open Source Component Libraries
Dash Core Components
Dash HTML Components
Dash DataTable
Dash AG Grid
Dash Bio
16/07/2025, 06:58 Dash Documentation &amp; User Guide | Plotly
https://dash.plotly.com 2/6

--- Página 3 ---
Dash DAQ
SHOW MORE
Enterprise Libraries
Dash Design Kit
Snapshot Engin...</full_content>
      </section>
      <section name="Facet and trellis plots" difficulty="intermediate" source_file="Facet and trellis plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Facet and trellis plots</objective>
          <objective>Aplicar customizações em Facet and trellis plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.scatter(df, x="total_bill" , y="tip", color="smoker" , facet_col ="sex")
fig.show()
There is a more presentation-ready horizontal, faceted bar chart in the 
horizontal bar documentation (/python/horizontal-bar-charts/#Small-multiple-horizontal-bar-
charts-show-each-component's-size-more-clearly-than-a-stacked-bar)0 10 20 30 40 50246810
0 10 20 30 40 50smoker
No
Yes
total_bill total_billtipsex=Female sex=Male
ta-
 &amp;utm_campaign=studio_clou...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
df = df.sort_values (by="total_bill" )
model = sm.OLS(df["tip"], sm.add_constant (df["total_bill" ])).fit()
#create the trace to be added to all facets
trace = go.Scatter(x=df["total_bill" ], y=model.predict(),
                   line_color ="black", name="overall OLS" )
# give it a legend group and hide it from the legend
trace.update(legendgroup ="trendline" , showlegend =False)
# add it to all rows/cols, but not to empty subplots
fig.add_trace (trace, row="a...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Facet and Trellis Plots
Scatter Plot Column Facets
Bar Chart Row Facets &gt;  &gt; Facet and
Trellis Plots
Facet and Trellis Plots in Python
How to make Facet and Trellis Plots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/facet-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Facet plots, also known as trellis plots or small multiples, are figures made up of multiple subplots which have the same set of axes, where each subplot shows a
subset of the data. While it is straightforward to use plotly's  to make such figures, it's far easier to use the built-in facet_row
and facet_col arguments in the various ...</full_content>
      </section>
      <section name="Figure factory subplots" difficulty="intermediate" source_file="Figure factory subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Figure factory subplots</objective>
          <objective>Aplicar customizações em Figure factory subplots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Plotly's Figure Factory Module
Vertical Figure Factory Charts &gt;  &gt; Figure
Factory Subplots
Figure Factory Subplots in Python
Subplots with Plotly Figure Factory Charts
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Subplots (/python/subplot-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/figure-
factory-subplots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly's Python API contains a  which includes many wrapper functions that create unique chart types that are not yet
included in , Plotly's open-source graphing library. The figure factory functions create a full figure, so some Plotly features,
such as subplotting, should be implemented slightly differently with these charts.
figure factory module (/python/f...</full_content>
      </section>
      <section name="Graph objects" difficulty="intermediate" source_file="Graph objects in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Graph objects</objective>
          <objective>Aplicar customizações em Graph objects</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">the functions in , which is the recommended entry-point into the plotly library, are all built on top of graph
objects, and all return instances of plotly</concept>
        </key_concepts>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
fig = px.bar(df, x="Fruit", y="Number Eaten" , color="Contestant" , barmode="group")
fig.show()
# Graph Objects</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go
fig = go.Figure()
for contestant , group in df.groupby("Contestant" ):
    fig.add_trace (go.Bar(x=group["Fruit"], y=group["Number Eaten" ], name=contestant ,
      hovertemplate ="Contestant= %s&lt;br&gt;Fruit= %%{x}&lt;br&gt;Number Eaten= %%{y}&lt;extra&gt;&lt;/extra&gt;" % contestant ))
fig.update_layout (legend_title_text  = "Contestant" )
fig.update_xaxes (title_text ="Fruit")
fig.update_yaxes (title_text ="Number Eaten" )
fig.show()
naries
y
y16/07/2025, 06:57 Graph objects in P...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt;
Graph Objects
Graph Objects in Python
Python classes that represent parts of a figure.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/graph-
objects.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
naries
y
y16/07/2025, 06:57 Graph objects in Python
https://plotly.com/python/graph-objects/ 1/6

--- Página 2 ---
What Are Graph Objects?
Graph Objects Compared to Dictionaries
1. Graph objects provide precise data validation. If you provide an invalid property name or an invalid property value as the key to a graph object, an exception
will be raised with a helpful error me...</full_content>
      </section>
      <section name="Map subplots" difficulty="intermediate" source_file="Map subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Map subplots</objective>
          <objective>Aplicar customizações em Map subplots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt;
Map Subplots
Map Subplots in Python
How to make map subplots and map small multiples in Python.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Subplots (/python/subplot-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/map-subplots-and-
small-multiples.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:58 Map subplots in Python
https://plotly.com/python/map-subplots-and-small-multiples/ 1/5

--- Página 2 ---
US map small multiples
import plotly.graph_objects  as go
import pandas as pd
df = pd.read_csv ('https://raw.githubusercontent.com/plotly/datasets/master/1962_2006_walmart_store_openings.csv' )
df.head()
data = []
layout = dict(
    tit...</full_content>
      </section>
      <section name="Marginal distribution plots" difficulty="advanced" source_file="Marginal distribution plots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Marginal distribution plots</objective>
          <objective>Aplicar customizações em Marginal distribution plots</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
fig = px.scatter(df, x="sepal_length" , y="sepal_width" , marginal_x ="histogram" , marginal_y ="rug")
fig.show()
44.555.566.577.5822.533.544.5
sepal_lengthsepal_width
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:57 Marginal distribution plots in Python
https://plotly.com/python/marginal-plots/ 1/6</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)2040051015202530
2040 2040 2040sex
Female
Male
total...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Overview
Scatter Plot Marginals &gt;  &gt; Marginal
Distribution Plots
Marginal Distribution Plots in Python
How to add marginal distribution plots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Statistical Charts (/python/statistical-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/marginal-plots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Marginal distribution plots are small subplots above or to the right of a main plot, which show the distribution of data along only one dimension. Marginal distribution
plot capabilities are built into various Plotly Express functions such as scatter and histogram.  is the easy-to-use, high-level
interface to Plotly, which  and produces .
Plotly Express (/python/plotly-express/)
...</full_content>
      </section>
      <section name="Mixed subplots" difficulty="intermediate" source_file="Mixed subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Mixed subplots</objective>
          <objective>Aplicar customizações em Mixed subplots</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">At this time, Plotly Express does not support creating figures with arbitrary mixed subplots i</concept>
        </key_concepts>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Mixed Subplots and Plotly Express
Mixed Subplot &gt;  &gt; Mixed
Subplots
Mixed Subplots in Python
How to make mixed subplots in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Subplots (/python/subplot-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/mixed-
subplots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
Note: At this time, Plotly Express does not support creating figures with arbitrary mixed subplots i.e. figures with subplots of different types. Plotly Express
...</full_content>
      </section>
      <section name="Plotly express arguments" difficulty="basic" source_file="Plotly express arguments in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Plotly express arguments</objective>
          <objective>Aplicar customizações em Plotly express arguments</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.iris()
df.head()
By default px.data functions return a pandas DataFrame object, but you can specify an alternative dataframe type using return_type. pandas, polars, pyarrow, modin,
and cuDF are supported return types.
df = px.data.iris(return_type ='polars' )
df.head()sepal_lengthsepal_widthpetal_lengthpetal_widthspeciesspecies_id
05.1 3.5 1.4 0.2 setosa1
14.9 3.0 1.4 0.2 setosa1
24.7 3.2 1.3 0.2 setosa1
34.6 3.1 1.5 0.2 setosa1
45.0 3.6 1.4 0.2 setosa1
...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter1950 1960 1970 1980 1990 20000500100015002000250030003500continent
Asia
Europe
Africa
Americas
OceaniaEvolution of world GDP
yearlog gdp
e with...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Data for the Examples
carshare - Each row represents the availability of car-sharing services near the centroid of a zone in Montreal over a month-long period.
election - Each row represents voting results for an electoral district in the 2013 Montreal mayoral election.
iris - Each row represents a flower. &gt;  &gt; Plotly
Express Arguments
Plotly Express Arguments in Python
Input data arguments accepted by Plotly Express functions
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/px-
arguments.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
Plotly Express (px) is the high-level interface to Plotly and provides functions for generating chart...</full_content>
      </section>
      <section name="Styling plotly express figures" difficulty="intermediate" source_file="Styling plotly express figures in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Styling plotly express figures</objective>
          <objective>Aplicar customizações em Styling plotly express figures</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px
df = px.data.tips()
fig = px.histogram (df, x="day", y="total_bill" , color="sex")
fig.show()
Here is the same figure, restyled by adding some extra parameters to the initial Plotly Express call:</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go # or plotly.express as px
fig = go.Figure() # or any Plotly Express function e.g. px.bar(...)
# fig.add_trace( ... )
# fig.update_layout( ... )
from dash import Dash, dcc, html
app = Dash()
app.layout = html.Div([
    dcc.Graph(figure=fig)
])
app.run(debug=True, use_reloader =False)  # Turn off reloader if inside Jupyter
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)2 3 45678
567sepal_length
sepal_widthsepal_length
pr...</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Styling Figures made with Plotly Express
1. Control common parameters like width &amp; height, titles, labeling and colors using built-in Plotly Express function arguments
2. Updating the figure attributes using 
3. Using Plotly's  via the template argument to every Plotly Express function
4. Setting default values for common parameters using px.defaults
Built-in Plotly Express Styling Arguments
title to set the figure title
width and height to set the figure dimensions
template to  (see below for more details)
labels to override the default axis and legend labels behaviour, which is to use the data frame column name if available, and otherwise to use the label name
itself like "x", "y", "color" etc. labels accepts a dict whose keys are the label to rename and whose values are the desired labels. These labels appear in axis
labels, legend and color bar titles, and in hover labels.
category_orders to override the default category...</full_content>
      </section>
      <section name="Subplots and multiple axes" difficulty="intermediate" source_file="Subplots and multiple axes in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Subplots and multiple axes</objective>
          <objective>Aplicar customizações em Subplots and multiple axes</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt; 
Python (/python)
Subplots (/python/subplot-charts)
Plotly Python Open Source Graphing Library Subplots and Multiple Axes
Plotly's Python graphing library makes interactive, publication-quality graphs online. Examples of how to make subplots, insets, and multiple axes charts.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
(/python/mixed-
subplots/)
Mixed Subplots
(/python/map-subplots-
and-small-multiples/)
Map Subplots
(/python/table-
subplots/)
Table and Chart
Subplots
(/python/figure-factory-
subplots/)
Figure Factory Subplots
(https://dash.plotly.com/tutorial?utm_medium=graphing_libraries&amp;utm_content=python_footer)
Sign up to stay in the loop with all things Plotly — from Dash Club
to product updates, webinars, and more!JOIN OUR M...</full_content>
      </section>
      <section name="Subplots" difficulty="intermediate" source_file="Subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Subplots</objective>
          <objective>Aplicar customizações em Subplots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Subplots and Plotly Express
Simple Subplot &gt;  &gt;
Subplots
Subplots in Python
How to make subplots in with Plotly's Python graphing library. Examples of stacked, custom-sized, gridded, and annotated subplots.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Fundamentals (/python/plotly-fundamentals)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/subplots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
 is the easy-to-use, high-level interface to Plotly, which  and
produces .
Plotly Express (/python/plotly-express/)
operates on a variety of types of data (/python/px-arguments/)
easy-to-style figures (/python/styling-plotly-express/)
Plotly Express does not support arbitrary subplot capabilities, instead it supports , and it a...</full_content>
      </section>
      <section name="Table and chart subplots" difficulty="intermediate" source_file="Table and chart subplots in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de Table and chart subplots</objective>
          <objective>Aplicar customizações em Table and chart subplots</objective>
        </section_objectives>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/)Import CSV Data &gt;  &gt; Table and Chart
Subplots
Table and Chart Subplots in Python
How to create a subplot with tables and charts in Python with Plotly.
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Subplots (/python/subplot-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-prod/doc/python/table-
subplots.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
16/07/2025, 06:58 Table and chart subplots in Python
https://plotly.com/python/table-subplots/ 1/4

--- Página 2 ---
import plotly.graph_objects  as go
from plotly.subplots  import make_subplots
import pandas as pd
import re
df = pd.read_csv ("https://raw.githubusercontent.com/plotly/datasets/master/Mining-BTC-180.csv" )
for i...</full_content>
      </section>
      <section name="pyvy_2xA" difficulty="advanced" source_file="pyvy_2xA.md">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2xA</objective>
          <objective>Aplicar customizações em pyvy_2xA</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Narrativa e Acessibilidade&lt;/title&gt;
    &lt;paragraph&gt;
      [cite_start]A cor é um elemento crucial no design de gráficos e visualizações de dados, pois é uma ferramenta poderosa para contar histórias[cite: 1207]</concept>
          <concept id="concept_2">Narrativa e Acessibilidade&lt;/title&gt;
    &lt;paragraph&gt;
      [cite_start]A cor é um elemento crucial no design de gráficos e visualizações de dados, pois é uma ferramenta poderosa para contar histórias[cite: 1207]</concept>
        </key_concepts>
        <full_content>&lt;web_content&gt;
  &lt;title&gt;EVALUATION ONLY - Labeling Instructions&lt;/title&gt;
  &lt;author&gt;Alignerr&lt;/author&gt;
  &lt;publication_date&gt;2025-07-12&lt;/publication_date&gt;
  &lt;license&gt;Internal Evaluation Use Only&lt;/license&gt;
  &lt;section&gt;
    &lt;title&gt;Objective&lt;/title&gt;
    &lt;paragraph&gt;
      This is a Python evaluation focused on data visualization and storytelling. The main task is to recreate a visual similar to a reference image, telling the same story using a dummy dataset. This involves creating Python scripts for data generation and visualization. An input prompt that would naturally produce the created visual must also be written.
    &lt;/paragraph&gt;
    &lt;paragraph&gt;
      IMPORTANT UPDATE AS OF JULY 12TH: An upload script is no longer used. The contents of the scripts and HTML file are to be copy-pasted into the Labelbox editor.
    &lt;/paragraph&gt;
  &lt;/section&gt;
  &lt;section&gt;
    &lt;title&gt;Labeling Steps&lt;/title&gt;
    &lt;list type="ordered"&gt;
      &lt;item&gt;
        &lt;b&gt;Find and Analyze the Dashboard/Graph:&lt;/b&gt; Search the web for...</full_content>
      </section>
      <section name="pyvy_2xA" difficulty="advanced" source_file="pyvy_2xA.txt">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2xA</objective>
          <objective>Aplicar customizações em pyvy_2xA</objective>
        </section_objectives>
        <key_concepts>
          <concept id="concept_1">Narrativa e Acessibilidade&lt;/title&gt;
    &lt;paragraph&gt;
      [cite_start]A cor é um elemento crucial no design de gráficos e visualizações de dados, pois é uma ferramenta poderosa para contar histórias[cite: 1207]</concept>
          <concept id="concept_2">Narrativa e Acessibilidade&lt;/title&gt;
    &lt;paragraph&gt;
      [cite_start]A cor é um elemento crucial no design de gráficos e visualizações de dados, pois é uma ferramenta poderosa para contar histórias[cite: 1207]</concept>
        </key_concepts>
        <full_content>&lt;web_content&gt;
  &lt;title&gt;EVALUATION ONLY - Labeling Instructions&lt;/title&gt;
  &lt;author&gt;Alignerr&lt;/author&gt;
  &lt;publication_date&gt;2025-07-12&lt;/publication_date&gt;
  &lt;license&gt;Internal Evaluation Use Only&lt;/license&gt;
  &lt;section&gt;
    &lt;title&gt;Objective&lt;/title&gt;
    &lt;paragraph&gt;
      This is a Python evaluation focused on data visualization and storytelling. The main task is to recreate a visual similar to a reference image, telling the same story using a dummy dataset. This involves creating Python scripts for data generation and visualization. An input prompt that would naturally produce the created visual must also be written.
    &lt;/paragraph&gt;
    &lt;paragraph&gt;
      IMPORTANT UPDATE AS OF JULY 12TH: An upload script is no longer used. The contents of the scripts and HTML file are to be copy-pasted into the Labelbox editor.
    &lt;/paragraph&gt;
  &lt;/section&gt;
  &lt;section&gt;
    &lt;title&gt;Labeling Steps&lt;/title&gt;
    &lt;list type="ordered"&gt;
      &lt;item&gt;
        &lt;b&gt;Find and Analyze the Dashboard/Graph:&lt;/b&gt; Search the web for...</full_content>
      </section>
      <section name="pyvy_2x_1" difficulty="intermediate" source_file="pyvy_2x_1.md">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x_1</objective>
          <objective>Aplicar customizações em pyvy_2x_1</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express as px
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      fig = px.line(df, x='AAPL_x', y='AAPL_y', title='Apple Share Prices over time (2014)')
      fig.show()
    &lt;/code&gt;
  &lt;/section&gt;
  
  &lt;section&gt;
    &lt;title&gt;Plot a partir de CSV com graph_objects&lt;/title&gt;
    [cite_start]&lt;paragraph&gt;É possível obter um controle mais granular sobre o gráfico utilizando `graph_objects`[cite: 86]. [cite_start]O código abaixo cria uma...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects as go
      
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      
      fig = go.Figure(go.Scatter(x = df['AAPL_x'], y = df['AAPL_y'],
                            name='Share Prices (in USD)'))
      
      fig.update_layout(title_dict=dict(text='Apple Share Prices over time (2014)'),
                        plot_bgcolor='rgb(230, 230,230)',
                        showlegend=True)
      
      fig.show()
    &lt;...</graph_objects>
        </side_by_side_comparison>
        <full_content>&lt;web_content&gt;
  &lt;title&gt;Plotly Python Graphing Library&lt;/title&gt;
  &lt;author&gt;Plotly&lt;/author&gt;
  &lt;publication_date&gt;2025-07-16&lt;/publication_date&gt;
  &lt;license&gt;Plotly.py is free and open source[cite: 12]. Copyright © 2025 Plotly. All rights reserved. [cite: 232]&lt;/license&gt;
  &lt;summary&gt;Este documento apresenta a biblioteca de gráficos Python da Plotly, uma ferramenta de código aberto que permite a criação de gráficos interativos e com qualidade de publicação[cite: 11, 12]. Ele detalha uma vasta gama de tipos de gráficos, desde básicos e estatísticos até científicos, financeiros e geoespaciais. Além disso, aborda funcionalidades avançadas como integração com Jupyter, animações, controles personalizados e a criação de aplicações web analíticas com o Dash[cite: 43].&lt;/summary&gt;
  &lt;language code="en"&gt;English&lt;/language&gt;
  
  &lt;section&gt;
    &lt;title&gt;Introdução&lt;/title&gt;
    &lt;paragraph&gt;A biblioteca de gráficos Python da Plotly cria gráficos interativos e com qualidade de publicação. Exemplos de como fazer gráfico...</full_content>
      </section>
      <section name="pyvy_2x_1" difficulty="intermediate" source_file="pyvy_2x_1.txt">
        <section_objectives>
          <objective>Dominar a criação de pyvy_2x_1</objective>
          <objective>Aplicar customizações em pyvy_2x_1</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express as px
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      fig = px.line(df, x='AAPL_x', y='AAPL_y', title='Apple Share Prices over time (2014)')
      fig.show()
    &lt;/code&gt;
  &lt;/section&gt;
  
  &lt;section&gt;
    &lt;title&gt;Plot a partir de CSV com graph_objects&lt;/title&gt;
    [cite_start]&lt;paragraph&gt;É possível obter um controle mais granular sobre o gráfico utilizando `graph_objects`[cite: 86]. [cite_start]O código abaixo cria uma...</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects as go
      
      df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/2014_apple_stock.csv')
      
      fig = go.Figure(go.Scatter(x = df['AAPL_x'], y = df['AAPL_y'],
                            name='Share Prices (in USD)'))
      
      fig.update_layout(title_dict=dict(text='Apple Share Prices over time (2014)'),
                        plot_bgcolor='rgb(230, 230,230)',
                        showlegend=True)
      
      fig.show()
    &lt;...</graph_objects>
        </side_by_side_comparison>
        <full_content>&lt;web_content&gt;
  &lt;title&gt;Plotly Python Graphing Library&lt;/title&gt;
  &lt;author&gt;Plotly&lt;/author&gt;
  &lt;publication_date&gt;2025-07-16&lt;/publication_date&gt;
  &lt;license&gt;Plotly.py is free and open source[cite: 12]. Copyright © 2025 Plotly. All rights reserved. [cite: 232]&lt;/license&gt;
  &lt;summary&gt;Este documento apresenta a biblioteca de gráficos Python da Plotly, uma ferramenta de código aberto que permite a criação de gráficos interativos e com qualidade de publicação[cite: 11, 12]. Ele detalha uma vasta gama de tipos de gráficos, desde básicos e estatísticos até científicos, financeiros e geoespaciais. Além disso, aborda funcionalidades avançadas como integração com Jupyter, animações, controles personalizados e a criação de aplicações web analíticas com o Dash[cite: 43].&lt;/summary&gt;
  &lt;language code="en"&gt;English&lt;/language&gt;
  
  &lt;section&gt;
    &lt;title&gt;Introdução&lt;/title&gt;
    &lt;paragraph&gt;A biblioteca de gráficos Python da Plotly cria gráficos interativos e com qualidade de publicação. Exemplos de como fazer gráfico...</full_content>
      </section>
    </sections>
  </part>
  <part id="part_4_advanced" name="Parte IV: Tópicos Avançados">
    <description>Performance, boas práticas e casos complexos</description>
    <learning_objectives>
      <objective id="obj_1">Otimizar performance</objective>
      <objective id="obj_2">Aplicar boas práticas de design</objective>
      <objective id="obj_3">Resolver problemas complexos</objective>
    </learning_objectives>
    <sections>
      <section name="High performance visualization" difficulty="advanced" source_file="High performance visualization in Python.pdf">
        <section_objectives>
          <objective>Dominar a criação de High performance visualization</objective>
          <objective>Aplicar customizações em High performance visualization</objective>
        </section_objectives>
        <side_by_side_comparison title="Express vs Graph Objects">
          <plotly_express approach="high_level">import plotly.express  as px</plotly_express>
          <graph_objects approach="low_level">import plotly.graph_objects  as go</graph_objects>
        </side_by_side_comparison>
        <full_content>--- Página 1 ---
 (https://plotly.com/)
(/graphing-libraries/) &gt;  &gt; High Performance
Visualization
High Performance Visualization in Python
Recommendations for increased speed, improved interactivity, and the ability to plot even more data!
Plotly Studio: Transform any dataset into an interactive data application in minutes with AI. 
Python (/python)
Basic Charts (/python/basic-charts)
Suggest an edit to this
page(https://github.com/plotly/plotly.py/edit/doc-
prod/doc/python/performance.md)
Sign up for early access now. (https://plotly.com/studio/?
utm_medium=graphing_libraries&amp;utm_campaign=studio_early_access&amp;utm_content=sidebar)
ta-
 &amp;utm_campaign=studio_cloud_launch&amp;utm_content=sidebar)
ays for
raph
e Map
ataset16/07/2025, 06:25 High performance visualization in Python
https://plotly.com/python/performance/ 1/10

--- Página 2 ---
DataFrame Types
NumPy and NumPy Convertible Arrays for Improved Performance
Arrays and Data Types Supported
NumPy numpy.ndarray objects.
pandas Index, pand...</full_content>
      </section>
    </sections>
  </part>
  <glossary title="Glossário de Termos Plotly">
    <term name="Figure">Container principal que contém todos os elementos visuais</term>
    <term name="Trace">Representação visual dos dados (barras, linhas, pontos)</term>
    <term name="Layout">Configurações visuais da figura (eixos, títulos, cores)</term>
    <term name="Plotly Express">Interface de alto nível para criação rápida de gráficos</term>
    <term name="Graph Objects">Interface de baixo nível para controle detalhado</term>
    <term name="Long-form data">Formato onde cada linha é uma observação</term>
    <term name="Wide-form data">Formato onde colunas representam variáveis</term>
    <term name="Callback">Função que conecta inputs e outputs em Dash</term>
  </glossary>
</advanced_plotly_guide>